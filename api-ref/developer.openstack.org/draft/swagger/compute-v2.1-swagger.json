{
  "basePath": "/", 
  "consumes": [
    "application/json"
  ], 
  "definitions": {
    "CreatefloatingipsObjectBulk": {
      "example": {
        "application/json": {
          "floating_ips_bulk_create": {
            "interface": "eth0", 
            "ip_range": "192.168.1.0/24", 
            "pool": "nova"
          }
        }
      }, 
      "properties": {
        "ip_range": {
          "description": "The range of IP addresses to use for creating floating IPs.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "ip_range"
      ], 
      "type": "object"
    }, 
    "DeleteFloatingIPBulk": {
      "example": {
        "application/json": {
          "ip_range": "192.168.1.0/24"
        }
      }, 
      "properties": {
        "ip_range": {
          "description": "The range of IP addresses from which to bulk-delete floating IPs.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "ip_range"
      ], 
      "type": "object"
    }, 
    "addFixedIp": {
      "example": {
        "application/json": {
          "addFixedIp": {
            "networkId": 1
          }
        }
      }, 
      "properties": {
        "addFixedIp": {
          "description": "The action.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "addFixedIp"
      ], 
      "type": "object"
    }, 
    "addFloatingIp": {
      "example": {
        "application/json": {
          "addFloatingIp": {
            "address": "172.24.4.4"
          }
        }
      }, 
      "properties": {
        "addFloatingIp": {
          "description": "The action.", 
          "format": "", 
          "type": "object"
        }, 
        "address": {
          "description": "The floating IP address.", 
          "format": "", 
          "type": "string"
        }, 
        "fixed_address": {
          "description": "The fixed IP address with which you want to associate the floating\nIP address.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "addFloatingIp", 
        "address"
      ], 
      "type": "object"
    }, 
    "addSecurityGroup": {
      "example": {
        "application/json": {
          "addSecurityGroup": {
            "name": "default"
          }
        }
      }, 
      "properties": {
        "addSecurityGroup": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "addSecurityGroup", 
        "name"
      ], 
      "type": "object"
    }, 
    "attachVolume": {
      "example": {
        "application/json": {
          "volumeAttachment": {
            "device": "/dev/vdd", 
            "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
          }
        }
      }, 
      "properties": {
        "device": {
          "description": "Name of the device such as, ``/dev/vdb``. Omit or set this\nparameter to null for auto-assignment, if supported. If you specify\nthis parameter, the device must not exist in the guest operating\nsystem. Note that as of the 12.0.0 Liberty release, the Nova\nlibvirt driver no longer honors a user-supplied device name. This\nis the same behavior as if the device name parameter is not\nsupplied on the request.", 
          "format": "", 
          "type": "string"
        }, 
        "volumeAttachment": {
          "description": "A dictionary representation of a volume attachment.", 
          "format": "", 
          "type": "object"
        }, 
        "volumeId": {
          "description": "The UUID of the volume to attach.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "changePassword": {
      "example": {
        "application/json": {
          "changePassword": {
            "adminPass": "foo"
          }
        }
      }, 
      "properties": {
        "changePassword": {
          "description": "The action.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "changePassword"
      ], 
      "type": "object"
    }, 
    "confirmResize": {
      "example": {
        "application/json": {
          "confirmResize": null
        }
      }, 
      "properties": {
        "confirmResize": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "confirmResize"
      ], 
      "type": "object"
    }, 
    "createAttachInterface": {
      "example": {
        "application/json": {
          "interfaceAttachment": {
            "port_id": "ce531f90-199f-48c0-816c-13e38010b442"
          }
        }
      }, 
      "properties": {
        "fixed_ips": {
          "description": "Fixed IP addresses with subnet IDs.\n\nIf you request a specific fixed IP address without a ``net_id``,\nthe request returns a ``Bad Request (400)`` response code.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "interfaceAttachment": {
          "description": "Specify the ``interfaceAttachment`` action in the request body.", 
          "format": "", 
          "type": "string"
        }, 
        "net_id": {
          "description": "The ID of the network for which you want to create a port\ninterface.\n\nThe ``net_id`` and ``port_id`` parameters are mutually exclusive.\n\nIf you do not specify the ``net_id`` parameter, the OpenStack\nNetworking API v2.0 uses the network information cache that is\nassociated with the instance.", 
          "format": "", 
          "type": "string"
        }, 
        "port_id": {
          "description": "The ID of the port for which you want to create an interface.\n\nThe ``net_id`` and ``port_id`` parameters are mutually exclusive.\n\nIf you do not specify the ``port_id`` parameter, the OpenStack\nNetworking API v2.0 allocates a port and creates an interface for\nit on the network.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "interfaceAttachment"
      ], 
      "type": "object"
    }, 
    "createAttachInterface_200": {
      "properties": {
        "fixed_ips": {
          "description": "Fixed IP addresses with subnet IDs.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "interfaceAttachment": {
          "description": "Specify the ``interfaceAttachment`` action in the response body.", 
          "format": "", 
          "type": "string"
        }, 
        "mac_addr": {
          "description": "The MAC address.", 
          "format": "", 
          "type": "string"
        }, 
        "net_id": {
          "description": "The network ID.", 
          "format": "", 
          "type": "string"
        }, 
        "port_id": {
          "description": "The port ID.", 
          "format": "", 
          "type": "string"
        }, 
        "port_state": {
          "description": "The port state.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "interfaceAttachment", 
        "fixed_ips", 
        "mac_addr", 
        "net_id", 
        "port_id", 
        "port_state"
      ], 
      "type": "object"
    }, 
    "createBackup": {
      "example": {
        "application/json": {
          "createBackup": {
            "backup_type": "daily", 
            "name": "Backup 1", 
            "rotation": 1
          }
        }
      }, 
      "properties": {
        "createBackup": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "createBackup"
      ], 
      "type": "object"
    }, 
    "createCloudpipe": {
      "example": {
        "application/json": {
          "cloudpipe": {
            "project_id": "059f21e3-c20e-4efc-9e7a-eba2ab3c6f9a"
          }
        }
      }, 
      "properties": {
        "project_id": {
          "description": "Creates the cloudpipe for a project. If omitted, the project ID\ndefaults to the calling tenant.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createEvents": {
      "example": {
        "application/json": {
          "events": [
            {
              "name": "test-event", 
              "server_uuid": "3df201cf-2451-44f2-8d25-a4ca826fc1f3", 
              "status": "completed", 
              "tag": "foo"
            }
          ]
        }
      }, 
      "properties": {
        "events": {
          "description": "The action.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The event name. A valid value is ``network-changed``, ``network-\nvif-plugged``, ``network-vif-unplugged``, or ``network-vif-\ndeleted``.", 
          "format": "", 
          "type": "string"
        }, 
        "server_uuid": {
          "description": "The UUID of the server instance to which the API dispatches the\nevent.\n\nYou must assign this instance to a host. Otherwise, this call does\nnot dispatch the event to the instance.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The event status. A valid value is ``failed``, ``completed``, or\n``in-progress``. Default is ``completed``.", 
          "format": "", 
          "type": "string"
        }, 
        "tag": {
          "description": "A string value that identifies the event.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "events", 
        "name", 
        "server_uuid"
      ], 
      "type": "object"
    }, 
    "createEvents_200": {
      "properties": {
        "code": {
          "description": "The HTTP response code for the event.", 
          "format": "", 
          "type": "string"
        }, 
        "events": {
          "description": "The action.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The event name. A valid value is ``network-changed``, ``network-\nvif-plugged``, ``network-vif-unplugged``, or ``network-vif-\ndeleted``.", 
          "format": "", 
          "type": "string"
        }, 
        "server_uuid": {
          "description": "The UUID of the server instance to which the API dispatches the\nevent.\n\nYou must assign this instance to a host. Otherwise, this call does\nnot dispatch the event to the instance.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The event status. A valid value is ``failed``, ``completed``, or\n``in-progress``. Default is ``completed``.", 
          "format": "", 
          "type": "string"
        }, 
        "tag": {
          "description": "A string value that identifies the event.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "events", 
        "code", 
        "name", 
        "server_uuid"
      ], 
      "type": "object"
    }, 
    "createFloatingIP": {
      "example": {
        "application/json": {
          "pool": "public"
        }
      }, 
      "properties": {
        "pool": {
          "description": "Pool from which to allocate the IP address. If you omit this\nparameter, the call allocates the floating IP address from the\npublic pool.\n\nIf no floating IP addresses are available, the call returns the\n``400`` response code with an informational message.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createImage": {
      "example": {
        "application/json": {
          "createImage": {
            "metadata": {
              "meta_var": "meta_val"
            }, 
            "name": "foo-image"
          }
        }
      }, 
      "properties": {
        "createImage": {
          "description": "The action.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "createImage"
      ], 
      "type": "object"
    }, 
    "createImageMetadata_200": {
      "properties": {
        "next": {
          "description": "Moves to the next metadata item.", 
          "format": "uri", 
          "type": "string"
        }, 
        "previous": {
          "description": "Moves to the previous metadata item.", 
          "format": "uri", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createKeypair": {
      "example": {
        "application/json": {
          "keypair": {
            "name": "keypair-d20a3d59-9433-4b79-8726-20b431d89c78", 
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDx8nkQv/zgGgB4rMYmIf+6A4l6Rr+o/6lHBQdW5aYd44bd8JttDCE/F/pNRr0lRE+PiqSPO8nDPHw0010JeMH9gYgnnFlyY3/OcJ02RhIPyyxYpv9FhY+2YiUkpwFOcLImyrxEsYXpD/0d3ac30bNH6Sw9JD9UZHYcpSxsIbECHw== Generated-by-Nova"
          }
        }
      }, 
      "properties": {
        "name": {
          "description": "The name to associate with the keypair.", 
          "format": "", 
          "type": "string"
        }, 
        "public_key": {
          "description": "The public ssh key to import. If you omit this value, a key is\ngenerated.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "name"
      ], 
      "type": "object"
    }, 
    "createSecGroup": {
      "example": {
        "application/json": {
          "security_group": {
            "description": "description", 
            "name": "test"
          }
        }
      }, 
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "security_group": {
          "description": "Specify the ``security_group`` action in the request body.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "security_group", 
        "name", 
        "description"
      ], 
      "type": "object"
    }, 
    "createSecGroupDefaultRule": {
      "example": {
        "application/json": {
          "security_group_default_rule": {
            "cidr": "10.10.10.0/24", 
            "from_port": "80", 
            "ip_protocol": "TCP", 
            "to_port": "80"
          }
        }
      }, 
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "type": "string"
        }, 
        "from_port": {
          "description": "The port at start of range.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The security group name or UUID.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol. A valid value is ICMP, TCP, or UDP.", 
          "format": "", 
          "type": "string"
        }, 
        "to_port": {
          "description": "The port at end of range.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "id", 
        "ip_protocol", 
        "from_port", 
        "to_port", 
        "cidr"
      ], 
      "type": "object"
    }, 
    "createSecGroupDefaultRule_200": {
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "type": "string"
        }, 
        "from_port": {
          "description": "The port at start of range.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The UUID for the security group.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol. A valid value is ICMP, TCP, or UDP.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_range": {
          "description": "An IP range object.", 
          "format": "", 
          "type": "object"
        }, 
        "to_port": {
          "description": "Port at end of range.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "from_port", 
        "id", 
        "ip_protocol", 
        "ip_range", 
        "cidr", 
        "to_port"
      ], 
      "type": "object"
    }, 
    "createSecGroupRule": {
      "example": {
        "application/json": {
          "security_group_rule": {
            "cidr": "0.0.0.0/0", 
            "from_port": "443", 
            "ip_protocol": "tcp", 
            "parent_group_id": "48700ff3-30b8-4e63-845f-a79c9633e9fb", 
            "to_port": "443"
          }
        }
      }, 
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "type": "string"
        }, 
        "from_port": {
          "description": "The port at start of range.", 
          "format": "", 
          "type": "integer"
        }, 
        "group_id": {
          "description": "The source security group ID.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol: ICMP, TCP, or UDP.", 
          "format": "", 
          "type": "string"
        }, 
        "parent_group_id": {
          "description": "Security group ID.", 
          "format": "", 
          "type": "string"
        }, 
        "security_group_rule": {
          "description": "A ``security_group_rule`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "to_port": {
          "description": "The port at end of range.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "security_group_rule", 
        "parent_group_id", 
        "ip_protocol", 
        "from_port", 
        "to_port", 
        "cidr"
      ], 
      "type": "object"
    }, 
    "createSecGroupRule_200": {
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "type": "string"
        }, 
        "from_port": {
          "description": "Port at start of range.", 
          "format": "", 
          "type": "integer"
        }, 
        "group": {
          "description": "A ``group`` object. Includes the tenant ID and the source security\ngroup name.", 
          "format": "", 
          "type": "object"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol: ICMP, TCP, or UDP.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_range": {
          "description": "An ``ip_range`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The source security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "parent_group_id": {
          "description": "Security group ID.", 
          "format": "", 
          "type": "string"
        }, 
        "security_group_rule": {
          "description": "A ``security_group_rule`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "to_port": {
          "description": "The port at end of range.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "security_group_rule", 
        "ip_protocol", 
        "from_port", 
        "to_port", 
        "ip_range", 
        "cidr", 
        "id", 
        "group", 
        "parent_group_id", 
        "name"
      ], 
      "type": "object"
    }, 
    "createSecGroup_200": {
      "properties": {
        "description": {
          "description": "The security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The ID of the security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "rules": {
          "description": "A security group rules object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "security_group": {
          "description": "Security group object.", 
          "format": "", 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The tenant ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "security_group", 
        "description", 
        "id", 
        "name", 
        "rules", 
        "tenant_id"
      ], 
      "type": "object"
    }, 
    "createServer": {
      "example": {
        "application/json": {
          "server": {
            "flavorRef": "http://openstack.example.com/flavors/1", 
            "imageRef": "http://glance.openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
            "metadata": {
              "My Server Name": "Apache1"
            }, 
            "name": "new-server-test"
          }
        }
      }, 
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Controls how the API partitions the disk when you create, rebuild,\nor resize servers. A server inherits the ``OS-DCF:diskConfig``\nvalue from the image from which it was created, and an image\ninherits the ``OS-DCF:diskConfig`` value from the server from which\nit was created. To override the inherited setting, you can include\nthis attribute in the request body of a server create, rebuild, or\nresize request.\n\nIf the ``OS-DCF:diskConfig`` value for an image is ``MANUAL``, you\ncannot create a server from that image and set its ``OS-\nDCF:diskConfig`` value to ``AUTO``.\n\nA valid value is:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using whatever partition\n  scheme and file system is in the source image. If the target\n  flavor disk is larger, the API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "block_device_mapping_v2": {
          "description": "Enables fine grained control of the block device mapping for an\ninstance. This is typically used for booting servers from volumes.\n\nAn example format would look as follows:\n``\"block_device_mapping_v2\": { \"boot_index\": \"0\", \"uuid\": \"ac408821\n-c95a-448f-9292-73986c790911\", \"source_type\": \"image\",\n\"volume_size\": \"25\", \"destination_type\": \"volume\",\n\"delete_on_termination\": true }``", 
          "format": "", 
          "type": "object"
        }, 
        "boot_index": {
          "description": "Defines the order in which a hypervisor tries devices when it\nattempts to boot the guest from storage.\n\nGive each device a unique boot index starting from ``0``. To\ndisable a device from booting, set the boot index to a negative\nvalue or use the default boot index value, which is ``None``.\n\nThe simplest usage is, set the boot index of the boot device to\n``0`` and use the default boot index value, ``None``, for any other\ndevices.\n\nSome hypervisors might not support booting from multiple devices;\nthese hypervisors consider only the device with a boot index of\n``0``.\n\nSome hypervisors support booting from multiple devices but only if\nthe devices are of different types. For example, a disk and CD-ROM.", 
          "format": "", 
          "type": "string"
        }, 
        "config_drive": {
          "description": "Indicates whether a configuration drive enables metadata injection.\nThe config_drive setting provides information about a drive that\nthe instance can mount at boot time. The instance reads files from\nthe drive to get information that is normally available through the\nmetadata service. This metadata is different from the user data.\nNot all cloud providers enable the ``config_drive``. Read more in\nthe OpenStack End User Guide .", 
          "format": "", 
          "type": "boolean"
        }, 
        "delete_on_termination": {
          "description": "To delete the boot volume when the server is destroyed, specify\n``true``. Otherwise, specify ``false``.", 
          "format": "", 
          "type": "string"
        }, 
        "destination_type": {
          "description": "Defines where the volume comes from. A valid value is ``local`` or\n``volume``.", 
          "format": "", 
          "type": "string"
        }, 
        "device_name": {
          "description": "A path to the device for the volume that you want to use to boot\nthe server.", 
          "format": "", 
          "type": "string"
        }, 
        "fixed_ip": {
          "description": "A fixed IPv4 address for the NIC. Valid with a ``neutron`` or\n``nova-networks`` network.", 
          "format": "", 
          "type": "string"
        }, 
        "flavorRef": {
          "description": "The flavor reference, as a UUID or full URL, for the flavor for\nyour server instance.", 
          "format": "", 
          "type": "string"
        }, 
        "guest_format": {
          "description": "Specifies the guest server disk file system format, such as\n``ephemeral`` or ``swap``.", 
          "format": "", 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference, as a UUID or full URL, for the image to use\nfor your server instance.", 
          "format": "", 
          "type": "string"
        }, 
        "key_name": {
          "description": "Key pair name.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size of the metadata key\nand value is 255 bytes each.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "type": "string"
        }, 
        "networks": {
          "description": "A ``networks`` object. Required parameter when there are mulitple\nnetworks defined for the tenant. When you do not specify the\nnetworks parameter, the server attaches to the only network created\nfor the current tenant.\n\nOptionally, you can create one or more NICs on the server.\n\nTo provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject.\n\nTo provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object.", 
          "format": "", 
          "type": "string"
        }, 
        "os-availability-zone:availability_zone": {
          "description": "The availability zone from which to launch the server. When you\nprovision resources, you specify from which availability zone you\nwant your instance to be built.\n\nTypically, you use availability zones to arrange OpenStack compute\nhosts into logical groups. An availability zone provides a form of\nphysical isolation and redundancy from other availability zones.\nFor instance, if some racks in your data center are on a separate\npower source, you can put servers in those racks in their own\navailability zone. Availability zones can also help separate\ndifferent classes of hardware.\n\nBy segregating resources into availability zones, you can ensure\nthat your application resources are spread across disparate\nmachines to achieve high availability in the event of hardware or\nother failure.", 
          "format": "", 
          "type": "string"
        }, 
        "os:scheduler_hints": {
          "description": "The dictionary of data to send to the scheduler. Alternatively, you\ncan specify ``OS-SCH-HNT:scheduler_hints`` as the string.", 
          "format": "", 
          "type": "object"
        }, 
        "personality": {
          "description": "The file path and contents, text only, to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit is The number of allowed bytes in the decoded, rather\nthan encoded, data.", 
          "format": "", 
          "type": "string"
        }, 
        "port": {
          "description": "To provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object. The port status must be ``DOWN``. required if\nyou omit the ``uuid`` attribute.", 
          "format": "", 
          "type": "string"
        }, 
        "security_groups": {
          "description": "One or more security groups. Specify the name of the security group\nin the ``name`` attribute. If you omit this attribute, the API\ncreates the server in the ``default`` security group.", 
          "format": "", 
          "type": "string"
        }, 
        "server": {
          "description": "server.", 
          "format": "", 
          "type": "object"
        }, 
        "source_type": {
          "description": "The source type of the volume. A valid value is ``blank``,\n``snapshot``, ``volume``, or ``image``.", 
          "format": "", 
          "type": "string"
        }, 
        "user_data": {
          "description": "Configuration information or scripts to use upon launch. Must be\nBase64 encoded.", 
          "format": "", 
          "type": "string"
        }, 
        "uuid": {
          "description": "To provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject. Required if you omit the ``port`` attribute.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server", 
        "imageRef", 
        "flavorRef", 
        "name", 
        "device_name", 
        "source_type", 
        "delete_on_termination", 
        "guest_format", 
        "boot_index"
      ], 
      "type": "object"
    }, 
    "createServerGroup": {
      "example": {
        "application/json": {
          "server_group": {
            "name": "test", 
            "policies": [
              "anti-affinity"
            ]
          }
        }
      }, 
      "properties": {
        "name": {
          "description": "The server group name. A non-empty string with no leading or\ntrailing spaces. Maximum length is 255 characters.", 
          "format": "", 
          "type": "string"
        }, 
        "policies": {
          "description": "A list of one or more policy names to associate with the server\ngroup. The list must contain at least one policy name. The current\nvalid policy names are ``anti-affinity`` and ``affinity``.\n\nEach policy name must be a non-empty string with no leading or\ntrailing spaces. Maximum length is 255 characters.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "server_groups": {
          "description": "A ``server_groups`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "server_groups", 
        "name", 
        "policies"
      ], 
      "type": "object"
    }, 
    "createServerGroup_200": {
      "properties": {
        "id": {
          "description": "The UUID of the server group.", 
          "format": "", 
          "type": "string"
        }, 
        "members": {
          "description": "A list of members in the server group.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "A dictionary of metadata key-and-value pairs, which is maintained\nfor backward compatibility. The API always returns an empty\nmetadata dictionary.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the server group.", 
          "format": "", 
          "type": "string"
        }, 
        "policies": {
          "description": "A list of policies for the server group.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "project_id": {
          "description": "The ID of the project.", 
          "format": "", 
          "type": "string"
        }, 
        "server_groups": {
          "description": "A ``server_groups`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "user_id": {
          "description": "The ID of the user.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server_groups", 
        "id", 
        "name", 
        "policies", 
        "members", 
        "metadata", 
        "project_id", 
        "user_id"
      ], 
      "type": "object"
    }, 
    "createServer_202": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Disk configuration. The value is either:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using the partition\n  scheme and file system that is in the source image. If the target\n  flavor disk is larger, The API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "adminPass": {
          "description": "The administrative password of the server.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the server.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Server links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "security_groups": {
          "description": "Security groups object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "server": {
          "description": "A ``server`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "server", 
        "adminPass", 
        "id", 
        "links", 
        "OS-DCF:diskConfig", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "createServers": {
      "example": {
        "application/json": {
          "server": {
            "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
            "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
            "max_count": "3", 
            "metadata": {
              "My Server Name": "Apache1"
            }, 
            "min_count": "2", 
            "name": "new-server-test"
          }
        }
      }, 
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Controls how the API partitions the disk when you create, rebuild,\nor resize servers. A server inherits the ``OS-DCF:diskConfig``\nvalue from the image from which it was created, and an image\ninherits the ``OS-DCF:diskConfig`` value from the server from which\nit was created. To override the inherited setting, you can include\nthis attribute in the request body of a server create, rebuild, or\nresize request.\n\nIf the ``OS-DCF:diskConfig`` value for an image is ``MANUAL``, you\ncannot create a server from that image and set its ``OS-\nDCF:diskConfig`` value to ``AUTO``.\n\nA valid value is:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using whatever partition\n  scheme and file system is in the source image. If the target\n  flavor disk is larger, the API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "block_device_mapping_v2": {
          "description": "Enables fine grained control of the block device mapping for an\ninstance. This is typically used for booting servers from volumes.\n\nAn example format would look as follows:\n``\"block_device_mapping_v2\": { \"boot_index\": \"0\", \"uuid\": \"ac408821\n-c95a-448f-9292-73986c790911\", \"source_type\": \"image\",\n\"volume_size\": \"25\", \"destination_type\": \"volume\",\n\"delete_on_termination\": true }``", 
          "format": "", 
          "type": "object"
        }, 
        "boot_index": {
          "description": "Defines the order in which a hypervisor tries devices when it\nattempts to boot the guest from storage.\n\nGive each device a unique boot index starting from ``0``. To\ndisable a device from booting, set the boot index to a negative\nvalue or use the default boot index value, which is ``None``.\n\nThe simplest usage is, set the boot index of the boot device to\n``0`` and use the default boot index value, ``None``, for any other\ndevices.\n\nSome hypervisors might not support booting from multiple devices;\nthese hypervisors consider only the device with a boot index of\n``0``.\n\nSome hypervisors support booting from multiple devices but only if\nthe devices are of different types. For example, a disk and CD-ROM.", 
          "format": "", 
          "type": "string"
        }, 
        "config_drive": {
          "description": "Indicates whether a configuration drive enables metadata injection.\nThe config_drive setting provides information about a drive that\nthe instance can mount at boot time. The instance reads files from\nthe drive to get information that is normally available through the\nmetadata service. This metadata is different from the user data.\nNot all cloud providers enable the ``config_drive``. Read more in\nthe OpenStack End User Guide .", 
          "format": "", 
          "type": "boolean"
        }, 
        "delete_on_termination": {
          "description": "To delete the boot volume when the server is destroyed, specify\n``true``. Otherwise, specify ``false``.", 
          "format": "", 
          "type": "string"
        }, 
        "destination_type": {
          "description": "Defines where the volume comes from. A valid value is ``local`` or\n``volume``.", 
          "format": "", 
          "type": "string"
        }, 
        "device_name": {
          "description": "A path to the device for the volume that you want to use to boot\nthe server.", 
          "format": "", 
          "type": "string"
        }, 
        "fixed_ip": {
          "description": "A fixed IPv4 address for the NIC. Valid with a ``neutron`` or\n``nova-networks`` network.", 
          "format": "", 
          "type": "string"
        }, 
        "flavorRef": {
          "description": "The flavor reference, as a UUID or full URL, for the flavor for\nyour server instance.", 
          "format": "", 
          "type": "string"
        }, 
        "guest_format": {
          "description": "Specifies the guest server disk file system format, such as\n``ephemeral`` or ``swap``.", 
          "format": "", 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference, as a UUID or full URL, for the image to use\nfor your server instance.", 
          "format": "", 
          "type": "string"
        }, 
        "key_name": {
          "description": "Key pair name.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size of the metadata key\nand value is 255 bytes each.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "type": "string"
        }, 
        "networks": {
          "description": "A ``networks`` object. Required parameter when there are mulitple\nnetworks defined for the tenant. When you do not specify the\nnetworks parameter, the server attaches to the only network created\nfor the current tenant.\n\nOptionally, you can create one or more NICs on the server.\n\nTo provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject.\n\nTo provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object.", 
          "format": "", 
          "type": "string"
        }, 
        "os-availability-zone:availability_zone": {
          "description": "The availability zone from which to launch the server. When you\nprovision resources, you specify from which availability zone you\nwant your instance to be built.\n\nTypically, you use availability zones to arrange OpenStack compute\nhosts into logical groups. An availability zone provides a form of\nphysical isolation and redundancy from other availability zones.\nFor instance, if some racks in your data center are on a separate\npower source, you can put servers in those racks in their own\navailability zone. Availability zones can also help separate\ndifferent classes of hardware.\n\nBy segregating resources into availability zones, you can ensure\nthat your application resources are spread across disparate\nmachines to achieve high availability in the event of hardware or\nother failure.", 
          "format": "", 
          "type": "string"
        }, 
        "os:scheduler_hints": {
          "description": "The dictionary of data to send to the scheduler. Alternatively, you\ncan specify ``OS-SCH-HNT:scheduler_hints`` as the string.", 
          "format": "", 
          "type": "object"
        }, 
        "personality": {
          "description": "The file path and contents, text only, to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit is The number of allowed bytes in the decoded, rather\nthan encoded, data.", 
          "format": "", 
          "type": "string"
        }, 
        "port": {
          "description": "To provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object. The port status must be ``DOWN``. required if\nyou omit the ``uuid`` attribute.", 
          "format": "", 
          "type": "string"
        }, 
        "return_reservation_id": {
          "description": "Set to ``true`` to request that the response return a reservation\nID instead of instance information. Default is ``false``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "security_groups": {
          "description": "One or more security groups. Specify the name of the security group\nin the ``name`` attribute. If you omit this attribute, the API\ncreates the server in the ``default`` security group.", 
          "format": "", 
          "type": "string"
        }, 
        "server": {
          "description": "server.", 
          "format": "", 
          "type": "object"
        }, 
        "source_type": {
          "description": "The source type of the volume. A valid value is ``blank``,\n``snapshot``, ``volume``, or ``image``.", 
          "format": "", 
          "type": "string"
        }, 
        "user_data": {
          "description": "Configuration information or scripts to use upon launch. Must be\nBase64 encoded.", 
          "format": "", 
          "type": "string"
        }, 
        "uuid": {
          "description": "To provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject. Required if you omit the ``port`` attribute.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server", 
        "imageRef", 
        "flavorRef", 
        "name", 
        "device_name", 
        "source_type", 
        "delete_on_termination", 
        "guest_format", 
        "boot_index"
      ], 
      "type": "object"
    }, 
    "createServersResId": {
      "example": {
        "application/json": {
          "server": {
            "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
            "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
            "max_count": "3", 
            "metadata": {
              "My Server Name": "Apache1"
            }, 
            "min_count": "2", 
            "name": "new-server-test", 
            "return_reservation_id": true
          }
        }
      }, 
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Controls how the API partitions the disk when you create, rebuild,\nor resize servers. A server inherits the ``OS-DCF:diskConfig``\nvalue from the image from which it was created, and an image\ninherits the ``OS-DCF:diskConfig`` value from the server from which\nit was created. To override the inherited setting, you can include\nthis attribute in the request body of a server create, rebuild, or\nresize request.\n\nIf the ``OS-DCF:diskConfig`` value for an image is ``MANUAL``, you\ncannot create a server from that image and set its ``OS-\nDCF:diskConfig`` value to ``AUTO``.\n\nA valid value is:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using whatever partition\n  scheme and file system is in the source image. If the target\n  flavor disk is larger, the API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "block_device_mapping_v2": {
          "description": "Enables fine grained control of the block device mapping for an\ninstance. This is typically used for booting servers from volumes.\n\nAn example format would look as follows:\n``\"block_device_mapping_v2\": { \"boot_index\": \"0\", \"uuid\": \"ac408821\n-c95a-448f-9292-73986c790911\", \"source_type\": \"image\",\n\"volume_size\": \"25\", \"destination_type\": \"volume\",\n\"delete_on_termination\": true }``", 
          "format": "", 
          "type": "object"
        }, 
        "boot_index": {
          "description": "Defines the order in which a hypervisor tries devices when it\nattempts to boot the guest from storage.\n\nGive each device a unique boot index starting from ``0``. To\ndisable a device from booting, set the boot index to a negative\nvalue or use the default boot index value, which is ``None``.\n\nThe simplest usage is, set the boot index of the boot device to\n``0`` and use the default boot index value, ``None``, for any other\ndevices.\n\nSome hypervisors might not support booting from multiple devices;\nthese hypervisors consider only the device with a boot index of\n``0``.\n\nSome hypervisors support booting from multiple devices but only if\nthe devices are of different types. For example, a disk and CD-ROM.", 
          "format": "", 
          "type": "string"
        }, 
        "config_drive": {
          "description": "Indicates whether a configuration drive enables metadata injection.\nThe config_drive setting provides information about a drive that\nthe instance can mount at boot time. The instance reads files from\nthe drive to get information that is normally available through the\nmetadata service. This metadata is different from the user data.\nNot all cloud providers enable the ``config_drive``. Read more in\nthe OpenStack End User Guide .", 
          "format": "", 
          "type": "boolean"
        }, 
        "delete_on_termination": {
          "description": "To delete the boot volume when the server is destroyed, specify\n``true``. Otherwise, specify ``false``.", 
          "format": "", 
          "type": "string"
        }, 
        "destination_type": {
          "description": "Defines where the volume comes from. A valid value is ``local`` or\n``volume``.", 
          "format": "", 
          "type": "string"
        }, 
        "device_name": {
          "description": "A path to the device for the volume that you want to use to boot\nthe server.", 
          "format": "", 
          "type": "string"
        }, 
        "fixed_ip": {
          "description": "A fixed IPv4 address for the NIC. Valid with a ``neutron`` or\n``nova-networks`` network.", 
          "format": "", 
          "type": "string"
        }, 
        "flavorRef": {
          "description": "The flavor reference, as a UUID or full URL, for the flavor for\nyour server instance.", 
          "format": "", 
          "type": "string"
        }, 
        "guest_format": {
          "description": "Specifies the guest server disk file system format, such as\n``ephemeral`` or ``swap``.", 
          "format": "", 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference, as a UUID or full URL, for the image to use\nfor your server instance.", 
          "format": "", 
          "type": "string"
        }, 
        "key_name": {
          "description": "Key pair name.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size of the metadata key\nand value is 255 bytes each.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "type": "string"
        }, 
        "networks": {
          "description": "A ``networks`` object. Required parameter when there are mulitple\nnetworks defined for the tenant. When you do not specify the\nnetworks parameter, the server attaches to the only network created\nfor the current tenant.\n\nOptionally, you can create one or more NICs on the server.\n\nTo provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject.\n\nTo provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object.", 
          "format": "", 
          "type": "string"
        }, 
        "os-availability-zone:availability_zone": {
          "description": "The availability zone from which to launch the server. When you\nprovision resources, you specify from which availability zone you\nwant your instance to be built.\n\nTypically, you use availability zones to arrange OpenStack compute\nhosts into logical groups. An availability zone provides a form of\nphysical isolation and redundancy from other availability zones.\nFor instance, if some racks in your data center are on a separate\npower source, you can put servers in those racks in their own\navailability zone. Availability zones can also help separate\ndifferent classes of hardware.\n\nBy segregating resources into availability zones, you can ensure\nthat your application resources are spread across disparate\nmachines to achieve high availability in the event of hardware or\nother failure.", 
          "format": "", 
          "type": "string"
        }, 
        "os:scheduler_hints": {
          "description": "The dictionary of data to send to the scheduler. Alternatively, you\ncan specify ``OS-SCH-HNT:scheduler_hints`` as the string.", 
          "format": "", 
          "type": "object"
        }, 
        "personality": {
          "description": "The file path and contents, text only, to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit is The number of allowed bytes in the decoded, rather\nthan encoded, data.", 
          "format": "", 
          "type": "string"
        }, 
        "port": {
          "description": "To provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object. The port status must be ``DOWN``. required if\nyou omit the ``uuid`` attribute.", 
          "format": "", 
          "type": "string"
        }, 
        "return_reservation_id": {
          "description": "Set to ``true`` to request that the response return a reservation\nID instead of instance information. Default is ``false``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "security_groups": {
          "description": "One or more security groups. Specify the name of the security group\nin the ``name`` attribute. If you omit this attribute, the API\ncreates the server in the ``default`` security group.", 
          "format": "", 
          "type": "string"
        }, 
        "server": {
          "description": "server.", 
          "format": "", 
          "type": "object"
        }, 
        "source_type": {
          "description": "The source type of the volume. A valid value is ``blank``,\n``snapshot``, ``volume``, or ``image``.", 
          "format": "", 
          "type": "string"
        }, 
        "user_data": {
          "description": "Configuration information or scripts to use upon launch. Must be\nBase64 encoded.", 
          "format": "", 
          "type": "string"
        }, 
        "uuid": {
          "description": "To provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject. Required if you omit the ``port`` attribute.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server", 
        "imageRef", 
        "flavorRef", 
        "name", 
        "device_name", 
        "source_type", 
        "delete_on_termination", 
        "guest_format", 
        "boot_index"
      ], 
      "type": "object"
    }, 
    "createServersResId_202": {
      "properties": {
        "reservation_id": {
          "description": "The reservation ID of the server.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createServers_202": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Disk configuration. The value is either:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using the partition\n  scheme and file system that is in the source image. If the target\n  flavor disk is larger, The API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "adminPass": {
          "description": "The administrative password of the server.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the server.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Server links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "security_groups": {
          "description": "Security groups object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "server": {
          "description": "A ``server`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "server", 
        "adminPass", 
        "id", 
        "links", 
        "OS-DCF:diskConfig", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "createSnapshot": {
      "example": {
        "application/json": {
          "snapshot": {
            "display_description": "Daily backup", 
            "display_name": "snap-001", 
            "force": false, 
            "volume_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c"
          }
        }
      }, 
      "properties": {
        "snapshot": {
          "description": "A partial representation of a snapshot that is used to create a\nsnapshot.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot"
      ], 
      "type": "object"
    }, 
    "createVolume": {
      "example": {
        "application/json": {
          "volume": {
            "availability_zone": "us-east1", 
            "display_description": "Another volume.", 
            "display_name": "vol-001", 
            "metadata": {
              "contents": "junk"
            }, 
            "size": 30, 
            "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
          }
        }
      }, 
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "display_description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "display_name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "type": "object"
        }, 
        "size": {
          "description": "The size of the volume, in gigabytes (GB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The unique identifier for a snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "volume": {
          "description": "The ``volume`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_type": {
          "description": "The unique identifier for a volume type.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "size", 
        "snapshot_id"
      ], 
      "type": "object"
    }, 
    "createsnapshots": {
      "example": {
        "application/json": {
          "snapshot": {
            "create_info": {
              "new_file": "new_file_name", 
              "snapshot_id": "421752a6-acf6-4b2d-bc7a-119f9148cd8c", 
              "type": "qcow2"
            }, 
            "volume_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c"
          }
        }
      }, 
      "properties": {
        "create_info": {
          "description": "Information for snapshot creation.", 
          "format": "", 
          "type": "object"
        }, 
        "new_file": {
          "description": "The name of the qcow2 file that Block Storage creates, which\nbecomes the active image for the VM.", 
          "format": "", 
          "type": "string"
        }, 
        "snapshot": {
          "description": "The ``snapshot`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "snapshot_id": {
          "description": "The snapshot ID.", 
          "format": "", 
          "type": "string"
        }, 
        "type": {
          "description": "The snapshot type. A valid value is ``qcow2``.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The source volume ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot", 
        "volume_id", 
        "create_info", 
        "snapshot_id", 
        "type", 
        "new_file"
      ], 
      "type": "object"
    }, 
    "createsnapshots_200": {
      "properties": {
        "id": {
          "description": "The snapshot ID.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The source volume ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "volume_id"
      ], 
      "type": "object"
    }, 
    "deleteRetiredService": {
      "example": {
        "application/json": {
          "binary": "nova-compute", 
          "host": "host1"
        }
      }, 
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "host", 
        "binary"
      ], 
      "type": "object"
    }, 
    "deleteService": {
      "example": {
        "application/json": {
          "binary": "nova-compute", 
          "host": "host1"
        }
      }, 
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "host", 
        "binary"
      ], 
      "type": "object"
    }, 
    "disableLogReason": {
      "example": {
        "application/json": {
          "binary": "nova-compute", 
          "disabled_reason": "test2", 
          "host": "host1"
        }
      }, 
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "disabled_reason": {
          "description": "The reason that the service was disabled.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "host", 
        "binary", 
        "disabled_reason"
      ], 
      "type": "object"
    }, 
    "disableLogReason_200": {
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "disabled_reason": {
          "description": "The reason that the service was disabled.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }, 
        "service": {
          "description": "A ``service`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The service status, which is ``enabled`` or ``disabled``.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "service", 
        "binary", 
        "disabled_reason", 
        "host", 
        "status"
      ], 
      "type": "object"
    }, 
    "disableScheduling": {
      "example": {
        "application/json": {
          "binary": "nova-compute", 
          "host": "host1"
        }
      }, 
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "host", 
        "binary"
      ], 
      "type": "object"
    }, 
    "disableScheduling_200": {
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }, 
        "service": {
          "description": "A ``service`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The service status, which is ``enabled`` or ``disabled``.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "service", 
        "binary", 
        "host", 
        "status"
      ], 
      "type": "object"
    }, 
    "enableScheduling": {
      "example": {
        "application/json": {
          "binary": "nova-compute", 
          "host": "host1"
        }
      }, 
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "host", 
        "binary"
      ], 
      "type": "object"
    }, 
    "enableScheduling_200": {
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }, 
        "service": {
          "description": "A ``service`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The service status, which is ``enabled`` or ``disabled``.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "service", 
        "binary", 
        "host", 
        "status"
      ], 
      "type": "object"
    }, 
    "evacuate": {
      "example": {
        "application/json": {
          "evacuate": {
            "adminPass": "MySecretPass", 
            "host": "b419863b7d814906a68fb31703c0dbd6"
          }
        }
      }, 
      "properties": {
        "adminPass": {
          "description": "An administrative password to access the evacuated instance.\n\nTo set the administrative password, set the\n``enable_instance_password`` configuration option to ``true``. If\nyou set this option to ``false`` and you try to set the\nadministrative password, the API does not set the password and the\nresponse shows a ``null`` value for the ``adminPass`` parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "evacuate": {
          "description": "Specify the ``evacuate`` action in the request body.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The name or ID of the host to which the server is evacuated.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "evacuate"
      ], 
      "type": "object"
    }, 
    "forceDelete": {
      "example": {
        "application/json": {
          "forceDelete": null
        }
      }, 
      "properties": {
        "forceDelete": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "forceDelete"
      ], 
      "type": "object"
    }, 
    "getRDPConsole": {
      "example": {
        "application/json": {
          "os-getRDPConsole": {
            "type": "rdp-html5"
          }
        }
      }, 
      "properties": {
        "os-getRDPConsole": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-getRDPConsole"
      ], 
      "type": "object"
    }, 
    "getSPICEConsole": {
      "example": {
        "application/json": {
          "os-getSPICEConsole": {
            "type": "spice-html5"
          }
        }
      }, 
      "properties": {
        "os-getSPICEConsole": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-getSPICEConsole"
      ], 
      "type": "object"
    }, 
    "getSerialConsole": {
      "example": {
        "application/json": {
          "os-getSerialConsole": {
            "type": "serial"
          }
        }
      }, 
      "properties": {
        "os-getSerialConsole": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-getSerialConsole"
      ], 
      "type": "object"
    }, 
    "getVNCConsole": {
      "example": {
        "application/json": {
          "os-getVNCConsole": {
            "type": "novnc"
          }
        }
      }, 
      "properties": {
        "os-getVNCConsole": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-getVNCConsole"
      ], 
      "type": "object"
    }, 
    "injectNetworkInfo": {
      "example": {
        "application/json": {
          "injectNetworkInfo": null
        }
      }, 
      "properties": {
        "injectNetworkInfo": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "injectNetworkInfo"
      ], 
      "type": "object"
    }, 
    "listAttachedInterfaces_200": {
      "properties": {
        "fixed_ips": {
          "description": "Fixed IP addresses with subnet IDs.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "interfaceAttachment": {
          "description": "Specify the ``interfaceAttachment`` action in the response body.", 
          "format": "", 
          "type": "string"
        }, 
        "mac_addr": {
          "description": "The MAC address.", 
          "format": "", 
          "type": "string"
        }, 
        "net_id": {
          "description": "The network ID.", 
          "format": "", 
          "type": "string"
        }, 
        "port_id": {
          "description": "The port ID.", 
          "format": "", 
          "type": "string"
        }, 
        "port_state": {
          "description": "The port state.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "interfaceAttachment", 
        "port_state", 
        "fixed_ips", 
        "mac_addr", 
        "net_id", 
        "port_id"
      ], 
      "type": "object"
    }, 
    "listDefaultQuotas_200": {
      "properties": {
        "cores": {
          "description": "The number of allowed instance cores for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of allowed fixed IP addresses for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of allowed floating IP addresses for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID of the quota set.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of allowed bytes of content for each injected file.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of allowed bytes for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of allowed injected files for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of allowed instances for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of allowed key pairs for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of allowed metadata items for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of allowed instance RAM, in MB, for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of allowed rules for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of allowed security groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of allowed members for each server group.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of allowed server groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups", 
        "server_groups", 
        "server_group_members"
      ], 
      "type": "object"
    }, 
    "listDetailImages_200": {
      "properties": {
        "next": {
          "description": "Moves to the next metadata item.", 
          "format": "uri", 
          "type": "string"
        }, 
        "previous": {
          "description": "Moves to the previous metadata item.", 
          "format": "uri", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listDetailQuotas_200": {
      "properties": {
        "cores": {
          "description": "The number of allowed instance cores for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of allowed fixed IP addresses for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of allowed floating IP addresses for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID of the quota set.", 
          "format": "", 
          "type": "string"
        }, 
        "in_use": {
          "description": "The in-use quota value.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of allowed bytes of content for each injected file.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of allowed bytes for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of allowed injected files for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of allowed instances for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of allowed key pairs for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "limit": {
          "description": "The maximum limit for the quota.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of allowed metadata items for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of allowed instance RAM, in MB, for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "The reserved quota value.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of allowed rules for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of allowed security groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of allowed members for each server group.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of allowed server groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups", 
        "server_groups", 
        "server_group_members", 
        "reserved", 
        "limit", 
        "in_use"
      ], 
      "type": "object"
    }, 
    "listExtensions_200": {
      "properties": {
        "alias": {
          "description": "A short name by which this extension is also known.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "Text describing this extension\u2019s purpose.", 
          "format": "", 
          "type": "string"
        }, 
        "extensions": {
          "description": "List of ``extension`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "links": {
          "description": "Links pertaining to this extension. This is a list of dictionaries,\neach including keys ``href`` and ``rel``.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "Name of the extension.", 
          "format": "", 
          "type": "string"
        }, 
        "namespace": {
          "description": "A URL pointing to the namespace for this extension.", 
          "format": "", 
          "type": "string"
        }, 
        "updated": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe UTC time zone is assumed.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "extensions", 
        "name", 
        "alias", 
        "links", 
        "namespace", 
        "description", 
        "updated"
      ], 
      "type": "object"
    }, 
    "listFloatingIpPools_200": {
      "properties": {
        "floating_ip_pools": {
          "description": "The ``floating_ip_pools`` object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The name of floating IP pools.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listImages_200": {
      "properties": {
        "images": {
          "description": "Image information.", 
          "format": "", 
          "type": "string"
        }, 
        "next": {
          "description": "Moves to the next metadata item.", 
          "format": "uri", 
          "type": "string"
        }, 
        "previous": {
          "description": "Moves to the previous metadata item.", 
          "format": "uri", 
          "type": "string"
        }
      }, 
      "required": [
        "images"
      ], 
      "type": "object"
    }, 
    "listSecGroupDefaultRules_200": {
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "type": "string"
        }, 
        "from_port": {
          "description": "Port at start of range.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The UUID of the security group.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol: ICMP, TCP, or UDP.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_range": {
          "description": "An IP range object.", 
          "format": "", 
          "type": "object"
        }, 
        "to_port": {
          "description": "Port at end of range.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "from_port", 
        "id", 
        "ip_protocol", 
        "ip_range", 
        "cidr", 
        "to_port"
      ], 
      "type": "object"
    }, 
    "listSecGroups_200": {
      "properties": {
        "description": {
          "description": "The security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The ID of the security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "rules": {
          "description": "A security group rules object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "security_groups": {
          "description": "Security groups object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "tenant_id": {
          "description": "The tenant ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "security_groups", 
        "description", 
        "id", 
        "name", 
        "rules", 
        "tenant_id"
      ], 
      "type": "object"
    }, 
    "listServerGroups_200": {
      "properties": {
        "id": {
          "description": "The UUID of the server group.", 
          "format": "", 
          "type": "string"
        }, 
        "members": {
          "description": "A list of members in the server group.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "A dictionary of metadata key-and-value pairs, which is maintained\nfor backward compatibility. The API always returns an empty\nmetadata dictionary.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the server group.", 
          "format": "", 
          "type": "string"
        }, 
        "policies": {
          "description": "A list of policies for the server group.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "project_id": {
          "description": "The ID of the project.", 
          "format": "", 
          "type": "string"
        }, 
        "server_groups": {
          "description": "A ``server_groups`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "user_id": {
          "description": "The ID of the user.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server_groups", 
        "id", 
        "name", 
        "policies", 
        "members", 
        "metadata", 
        "project_id", 
        "user_id"
      ], 
      "type": "object"
    }, 
    "listServersDetailed_200": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Disk configuration. The value is either:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using the partition\n  scheme and file system that is in the source image. If the target\n  flavor disk is larger, The API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-AZ:availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:host": {
          "description": "The host name. Appears in the response for administrative users\nonly.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:hypervisor_hostname": {
          "description": "The hypervisor host name. Appears in the response for\nadministrative users only.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:instance_name": {
          "description": "The instance name. The Compute API generates the instance name from\nthe instance name template. Appears in the response for\nadministrative users only.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-STS:power_state": {
          "description": "The power state of the instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "OS-EXT-STS:task_state": {
          "description": "The task state of the instance.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-STS:vm_state": {
          "description": "The VM state.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-SRV-USG:launched_at": {
          "description": "The date and time when the server was launched.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the ``deleted_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-SRV-USG:terminated_at": {
          "description": "The date and time when the server was deleted.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the ``deleted_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "addresses": {
          "description": "The addresses for the server.\n\nAddresses information is hidden for any server in a state set in\nthe ``osapi_hide_server_address_states`` configuration option. By\ndefault, servers in ``building`` state hide their addresses\ninformation.\n\nSee `nova.conf - configuration options\n<http://docs.openstack.org/liberty/config-reference/content/list-\nof-compute-config-options.html>`_.", 
          "format": "", 
          "type": "object"
        }, 
        "created": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "flavor": {
          "description": "The ID and links for the flavor for your server instance. A flavor\nis a combination of memory, disk size, and CPUs.", 
          "format": "", 
          "type": "object"
        }, 
        "hostId": {
          "description": "The ID of the host.", 
          "format": "", 
          "type": "string"
        }, 
        "host_status": {
          "description": "The host status. Values where next value in list can override the\nprevious:\n\n- ``UP`` if nova-compute up.\n\n- ``UNKNOWN`` if nova-compute not reported by servicegroup driver.\n\n- ``DOWN`` if nova-compute forced down.\n\n- ``MAINTENANCE`` if nova-compute is disabled.\n\n- Empty string indicates there is no host for server.\n\nThis attribute appears in the response only if the policy permits.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "type": "string"
        }, 
        "image": {
          "description": "The UUID and links for the image for your server instance. The\n``image`` object might be an empty string when you boot the server\nfrom a volume.", 
          "format": "", 
          "type": "object"
        }, 
        "key_name": {
          "description": "The name of associated key pair, if any.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Server links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "The associated metadata key and value pairs.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "os-extended-volumes:volumes_attached": {
          "description": "The attached volumes, if any.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "progress": {
          "description": "A percentage value of the build progress.", 
          "format": "", 
          "type": "integer"
        }, 
        "rules": {
          "description": "A rules object.", 
          "format": "", 
          "type": "string"
        }, 
        "security_groups": {
          "description": "Security groups object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "servers": {
          "description": "A list of ``server`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "status": {
          "description": "The server status.", 
          "format": "", 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The UUID of the tenant in a multi-tenancy cloud.", 
          "format": "", 
          "type": "string"
        }, 
        "updated": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe UTC time zone is assumed.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The user ID of the user who owns the server.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "servers", 
        "addresses", 
        "created", 
        "flavor", 
        "hostId", 
        "id", 
        "image", 
        "key_name", 
        "links", 
        "metadata", 
        "name", 
        "OS-DCF:diskConfig", 
        "OS-EXT-AZ:availability_zone", 
        "OS-EXT-SRV-ATTR:host", 
        "OS-EXT-SRV-ATTR:hypervisor_hostname", 
        "OS-EXT-SRV-ATTR:instance_name", 
        "OS-EXT-STS:power_state", 
        "OS-EXT-STS:task_state", 
        "OS-EXT-STS:vm_state", 
        "os-extended-volumes:volumes_attached", 
        "OS-SRV-USG:launched_at", 
        "OS-SRV-USG:terminated_at", 
        "progress", 
        "security_groups", 
        "description", 
        "rules", 
        "status", 
        "host_status", 
        "tenant_id", 
        "updated", 
        "user_id"
      ], 
      "type": "object"
    }, 
    "listServers_200": {
      "properties": {
        "id": {
          "description": "The UUID of the server.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Server links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The server name. The user sets the server name.", 
          "format": "", 
          "type": "string"
        }, 
        "servers": {
          "description": "A list of ``server`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "servers", 
        "id", 
        "links", 
        "name"
      ], 
      "type": "object"
    }, 
    "listServices_200": {
      "properties": {
        "binary": {
          "description": "The service binary name.", 
          "format": "", 
          "type": "string"
        }, 
        "disabled_reason": {
          "description": "The reason that the service was disabled.", 
          "format": "", 
          "type": "string"
        }, 
        "forced_down": {
          "description": "If ``true``, the service was forced down.", 
          "format": "", 
          "type": "boolean"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the service.", 
          "format": "", 
          "type": "string"
        }, 
        "services": {
          "description": "A list of ``service`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "state": {
          "description": "The service state, which is ``up`` or ``down``.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The service status, which is ``enabled`` or ``disabled``.", 
          "format": "", 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the service was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.\n\nIf the ``updated_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "zone": {
          "description": "The availability zone of the host.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "services", 
        "id", 
        "binary", 
        "disabled_reason", 
        "host", 
        "state", 
        "status", 
        "updated_at", 
        "forced_down", 
        "zone"
      ], 
      "type": "object"
    }, 
    "listVirtualInterfaces_200": {
      "properties": {
        "id": {
          "description": "The UUID of the virtual interface.", 
          "format": "", 
          "type": "string"
        }, 
        "mac_address": {
          "description": "The MAC address.", 
          "format": "", 
          "type": "string"
        }, 
        "virtual_interfaces": {
          "description": "A ``virtual_interfaces`` object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "virtual_interfaces", 
        "id", 
        "mac_address"
      ], 
      "type": "object"
    }, 
    "listVolumeTypes_200": {
      "properties": {
        "extra_specs": {
          "description": "The definition of a volume type. This is a group of policies e.g.\nprovision type. QoS that will be used to define a volume at\ncreation time.", 
          "format": "", 
          "type": "object"
        }, 
        "id": {
          "description": "The UUID of volume.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The name of volume.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_types": {
          "description": "The ``volume_types`` object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "lock": {
      "example": {
        "application/json": {
          "lock": null
        }
      }, 
      "properties": {
        "lock": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "lock"
      ], 
      "type": "object"
    }, 
    "migrate": {
      "example": {
        "application/json": {
          "migrate": null
        }
      }, 
      "properties": {
        "migrate": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "migrate"
      ], 
      "type": "object"
    }, 
    "migrateLive": {
      "example": {
        "application/json": {
          "os-migrateLive": {
            "block_migration": false, 
            "disk_over_commit": false, 
            "host": "01c0cadef72d47e28a672a76060d492c"
          }
        }
      }, 
      "properties": {
        "block_migration": {
          "description": "Set to ``true`` to migrate local disks by using block migration. If\nthe source or destination host uses shared storage and you set this\nvalue to ``true``, the live migration fails.", 
          "format": "", 
          "type": "boolean"
        }, 
        "disk_over_commit": {
          "description": "Set to ``true`` to enable over commit when the destination host is\nchecked for available disk space.\n\nSet to ``false`` to disable over commit. This setting affects only\nthe libvirt virt driver.", 
          "format": "", 
          "type": "boolean"
        }, 
        "host": {
          "description": "The host to which to migrate the server. If you omit this\nparameter, the scheduler chooses a host.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "host", 
        "block_migration", 
        "disk_over_commit"
      ], 
      "type": "object"
    }, 
    "pause": {
      "example": {
        "application/json": {
          "pause": null
        }
      }, 
      "properties": {
        "pause": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "pause"
      ], 
      "type": "object"
    }, 
    "reboot": {
      "example": {
        "application/json": {
          "reboot": {
            "type": "HARD"
          }
        }
      }, 
      "properties": {
        "reboot": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "reboot"
      ], 
      "type": "object"
    }, 
    "rebuild": {
      "example": {
        "application/json": {
          "rebuild": {
            "adminPass": "seekr3t", 
            "imageRef": "http://glance.openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
            "metadata": {
              "meta_var": "meta_val"
            }, 
            "name": "foobar", 
            "personality": [
              {
                "contents": "ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBp dCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5k IGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVs c2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4g QnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRo ZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlv dSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vy c2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6 b25zLiINCg0KLVJpY2hhcmQgQmFjaA==", 
                "path": "/etc/banner.txt"
              }
            ], 
            "preserve_ephemeral": true
          }
        }
      }, 
      "properties": {
        "adminPass": {
          "description": "The administrative password of the server.", 
          "format": "", 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference, as an ID or full URL, for the image for your\nserver instance.\n\nRequired if you define a block device mapping.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size for each metadata\nkey and value pair is 255 bytes.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "type": "string"
        }, 
        "personality": {
          "description": "The file path and contents, text only, to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit is the number of allowed bytes in the decoded, rather\nthan the encoded, data.", 
          "format": "", 
          "type": "string"
        }, 
        "preserve_ephemeral": {
          "description": "Indicates whether the server is rebuilt with the preservation of\nthe ephemeral partition (``true``).", 
          "format": "", 
          "type": "boolean"
        }, 
        "rebuild": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "rebuild", 
        "name", 
        "adminPass"
      ], 
      "type": "object"
    }, 
    "removeFixedIp": {
      "example": {
        "application/json": {
          "removeFixedIp": {
            "address": "10.0.0.4"
          }
        }
      }, 
      "properties": {
        "removeFixedIp": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "removeFixedIp"
      ], 
      "type": "object"
    }, 
    "removeFloatingIp": {
      "example": {
        "application/json": {
          "removeFloatingIp": {
            "address": "172.24.4.4"
          }
        }
      }, 
      "properties": {
        "address": {
          "description": "The floating IP address.", 
          "format": "", 
          "type": "string"
        }, 
        "removeFloatingIp": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "removeFloatingIp", 
        "address"
      ], 
      "type": "object"
    }, 
    "removeSecurityGroup": {
      "example": {
        "application/json": {
          "removeSecurityGroup": {
            "name": "default"
          }
        }
      }, 
      "properties": {
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "removeSecurityGroup": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "removeSecurityGroup", 
        "name"
      ], 
      "type": "object"
    }, 
    "rescue": {
      "example": {
        "application/json": {
          "rescue": {
            "adminPass": "MySecretPass"
          }
        }
      }, 
      "properties": {
        "adminPass": {
          "description": "The password for the rescued instance. If you omit this parameter,\nthe operation generates a new password.", 
          "format": "", 
          "type": "string"
        }, 
        "rescue": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }, 
        "rescue_image_ref": {
          "description": "The image reference to use to rescue your server instance. Specify\nthe image reference by ID or full URL.\n\nIf you omit an image reference, default is the base image\nreference.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "rescue"
      ], 
      "type": "object"
    }, 
    "rescue_202": {
      "properties": {
        "adminPass": {
          "description": "The password that enables the administrator to access the rescued\ninstance.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "adminPass"
      ], 
      "type": "object"
    }, 
    "resetNetwork": {
      "example": {
        "application/json": {
          "resetNetwork": null
        }
      }, 
      "properties": {
        "resetNetwork": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "resetNetwork"
      ], 
      "type": "object"
    }, 
    "resetState": {
      "example": {
        "application/json": {
          "os-resetState": {
            "state": "active"
          }
        }
      }, 
      "properties": {
        "os-resetState": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-resetState"
      ], 
      "type": "object"
    }, 
    "resize": {
      "example": {
        "application/json": {
          "resize": {
            "flavorRef": "2"
          }
        }
      }, 
      "properties": {
        "resize": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "resize"
      ], 
      "type": "object"
    }, 
    "restore": {
      "example": {
        "application/json": {
          "restore": null
        }
      }, 
      "properties": {
        "restore": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "restore"
      ], 
      "type": "object"
    }, 
    "resume": {
      "example": {
        "application/json": {
          "resume": null
        }
      }, 
      "properties": {
        "resume": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "resume"
      ], 
      "type": "object"
    }, 
    "revertResize": {
      "example": {
        "application/json": {
          "revertResize": null
        }
      }, 
      "properties": {
        "revertResize": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "revertResize"
      ], 
      "type": "object"
    }, 
    "shelve": {
      "example": {
        "application/json": {
          "shelve": null
        }
      }, 
      "properties": {
        "shelve": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "shelve"
      ], 
      "type": "object"
    }, 
    "shelveOffload": {
      "example": {
        "application/json": {
          "shelveOffload": null
        }
      }, 
      "properties": {
        "shelveOffload": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "shelveOffload"
      ], 
      "type": "object"
    }, 
    "showConsoleOutput": {
      "example": {
        "application/json": {
          "os-getConsoleOutput": {
            "length": 50
          }
        }
      }, 
      "properties": {
        "length": {
          "description": "The number of lines to fetch from the end of console log. ``-1``\nindicates unlimited.", 
          "format": "", 
          "type": "integer"
        }, 
        "os-getConsoleOutput": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-getConsoleOutput"
      ], 
      "type": "object"
    }, 
    "showExtension_200": {
      "properties": {
        "alias": {
          "description": "A short name by which this extension is also known.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "Text describing this extension\u2019s purpose.", 
          "format": "", 
          "type": "string"
        }, 
        "extension": {
          "description": "An ``extension`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "links": {
          "description": "Links pertaining to this extension. This is a list of dictionaries,\neach including keys ``href`` and ``rel``.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "Name of the extension.", 
          "format": "", 
          "type": "string"
        }, 
        "namespace": {
          "description": "A URL pointing to the namespace for this extension.", 
          "format": "", 
          "type": "string"
        }, 
        "updated": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe UTC time zone is assumed.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "extension", 
        "name", 
        "alias", 
        "links", 
        "namespace", 
        "description", 
        "updated"
      ], 
      "type": "object"
    }, 
    "showImageMetadata_200": {
      "properties": {
        "next": {
          "description": "Moves to the next metadata item.", 
          "format": "uri", 
          "type": "string"
        }, 
        "previous": {
          "description": "Moves to the previous metadata item.", 
          "format": "uri", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "showQuota_200": {
      "properties": {
        "cores": {
          "description": "The number of allowed instance cores for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of allowed fixed IP addresses for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of allowed floating IP addresses for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID of the quota set.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of allowed bytes of content for each injected file.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of allowed bytes for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of allowed injected files for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of allowed instances for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of allowed key pairs for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of allowed metadata items for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of allowed instance RAM, in MB, for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of allowed rules for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of allowed security groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of allowed members for each server group.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of allowed server groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups", 
        "server_groups", 
        "server_group_members"
      ], 
      "type": "object"
    }, 
    "showSecGroupDefaultRule_200": {
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "type": "string"
        }, 
        "from_port": {
          "description": "The port at start of range.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The UUID of the security group.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol. A valid value is ICMP, TCP, or UDP.", 
          "format": "", 
          "type": "string"
        }, 
        "ip_range": {
          "description": "An IP range object.", 
          "format": "", 
          "type": "object"
        }, 
        "to_port": {
          "description": "The port at end of range.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "from_port", 
        "id", 
        "ip_protocol", 
        "ip_range", 
        "cidr", 
        "to_port"
      ], 
      "type": "object"
    }, 
    "showSecGroup_200": {
      "properties": {
        "description": {
          "description": "The security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The ID of the security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "rules": {
          "description": "A security group rules object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "security_group": {
          "description": "Security group object.", 
          "format": "", 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The tenant ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "security_group", 
        "description", 
        "id", 
        "name", 
        "rules", 
        "tenant_id"
      ], 
      "type": "object"
    }, 
    "showServerGroup_200": {
      "properties": {
        "id": {
          "description": "The UUID of the server group.", 
          "format": "", 
          "type": "string"
        }, 
        "members": {
          "description": "A list of members in the server group.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "A dictionary of metadata key-and-value pairs, which is maintained\nfor backward compatibility. The API always returns an empty\nmetadata dictionary.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the server group.", 
          "format": "", 
          "type": "string"
        }, 
        "policies": {
          "description": "A list of policies for the server group.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "project_id": {
          "description": "The ID of the project.", 
          "format": "", 
          "type": "string"
        }, 
        "server_groups": {
          "description": "A ``server_groups`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "user_id": {
          "description": "The ID of the user.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server_groups", 
        "id", 
        "name", 
        "policies", 
        "members", 
        "metadata", 
        "project_id", 
        "user_id"
      ], 
      "type": "object"
    }, 
    "showServer_200": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Disk configuration. The value is either:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using the partition\n  scheme and file system that is in the source image. If the target\n  flavor disk is larger, The API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-AZ:availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:host": {
          "description": "The host name. Appears in the response for administrative users\nonly.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:hypervisor_hostname": {
          "description": "The hypervisor host name. Appears in the response for\nadministrative users only.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:instance_name": {
          "description": "The instance name. The Compute API generates the instance name from\nthe instance name template. Appears in the response for\nadministrative users only.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-STS:power_state": {
          "description": "The power state of the instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "OS-EXT-STS:task_state": {
          "description": "The task state of the instance.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-STS:vm_state": {
          "description": "The VM state.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-SRV-USG:launched_at": {
          "description": "The date and time when the server was launched.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the ``deleted_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-SRV-USG:terminated_at": {
          "description": "The date and time when the server was deleted.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the ``deleted_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "addresses": {
          "description": "The addresses for the server.\n\nAddresses information is hidden for any server in a state set in\nthe ``osapi_hide_server_address_states`` configuration option. By\ndefault, servers in ``building`` state hide their addresses\ninformation.\n\nSee `nova.conf - configuration options\n<http://docs.openstack.org/liberty/config-reference/content/list-\nof-compute-config-options.html>`_.", 
          "format": "", 
          "type": "object"
        }, 
        "created": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "flavor": {
          "description": "The ID and links for the flavor for your server instance. A flavor\nis a combination of memory, disk size, and CPUs.", 
          "format": "", 
          "type": "object"
        }, 
        "hostId": {
          "description": "The ID of the host.", 
          "format": "", 
          "type": "string"
        }, 
        "host_status": {
          "description": "The host status. Values where next value in list can override the\nprevious:\n\n- ``UP`` if nova-compute up.\n\n- ``UNKNOWN`` if nova-compute not reported by servicegroup driver.\n\n- ``DOWN`` if nova-compute forced down.\n\n- ``MAINTENANCE`` if nova-compute is disabled.\n\n- Empty string indicates there is no host for server.\n\nThis attribute appears in the response only if the policy permits.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "type": "string"
        }, 
        "image": {
          "description": "The UUID and links for the image for your server instance. The\n``image`` object might be an empty string when you boot the server\nfrom a volume.", 
          "format": "", 
          "type": "object"
        }, 
        "key_name": {
          "description": "The name of associated key pair, if any.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Server links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "The associated metadata key and value pairs.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "os-extended-volumes:volumes_attached": {
          "description": "The attached volumes, if any.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "progress": {
          "description": "A percentage value of the build progress.", 
          "format": "", 
          "type": "integer"
        }, 
        "rules": {
          "description": "A rules object.", 
          "format": "", 
          "type": "string"
        }, 
        "security_groups": {
          "description": "Security groups object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "server": {
          "description": "A ``server`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The server status.", 
          "format": "", 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The UUID of the tenant in a multi-tenancy cloud.", 
          "format": "", 
          "type": "string"
        }, 
        "updated": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe UTC time zone is assumed.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The user ID of the user who owns the server.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server", 
        "addresses", 
        "created", 
        "flavor", 
        "hostId", 
        "id", 
        "image", 
        "key_name", 
        "links", 
        "metadata", 
        "name", 
        "OS-DCF:diskConfig", 
        "OS-EXT-AZ:availability_zone", 
        "OS-EXT-SRV-ATTR:host", 
        "OS-EXT-SRV-ATTR:hypervisor_hostname", 
        "OS-EXT-SRV-ATTR:instance_name", 
        "OS-EXT-STS:power_state", 
        "OS-EXT-STS:task_state", 
        "OS-EXT-STS:vm_state", 
        "os-extended-volumes:volumes_attached", 
        "OS-SRV-USG:launched_at", 
        "OS-SRV-USG:terminated_at", 
        "progress", 
        "security_groups", 
        "description", 
        "rules", 
        "status", 
        "host_status", 
        "tenant_id", 
        "updated", 
        "user_id"
      ], 
      "type": "object"
    }, 
    "showquota_200": {
      "properties": {
        "cores": {
          "description": "The number of allowed instance cores for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of allowed fixed IP addresses for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of allowed floating IP addresses for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID of the quota set.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of allowed bytes of content for each injected file.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of allowed bytes for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of allowed injected files for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of allowed instances for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of allowed key pairs for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of allowed metadata items for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of allowed instance RAM, in MB, for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of allowed rules for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of allowed security groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of allowed members for each server group.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of allowed server groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups", 
        "server_groups", 
        "server_group_members"
      ], 
      "type": "object"
    }, 
    "start": {
      "example": {
        "application/json": {
          "os-start": null
        }
      }, 
      "properties": {
        "os-start": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-start"
      ], 
      "type": "object"
    }, 
    "stop": {
      "example": {
        "application/json": {
          "os-stop": null
        }
      }, 
      "properties": {
        "os-stop": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-stop"
      ], 
      "type": "object"
    }, 
    "suspend": {
      "example": {
        "application/json": {
          "suspend": null
        }
      }, 
      "properties": {
        "suspend": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "suspend"
      ], 
      "type": "object"
    }, 
    "triggerCrashDump": {
      "example": {
        "application/json": {
          "trigger_crash_dump": null
        }
      }, 
      "properties": {
        "trigger_crash_dump": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "trigger_crash_dump"
      ], 
      "type": "object"
    }, 
    "unlock": {
      "example": {
        "application/json": {
          "unlock": null
        }
      }, 
      "properties": {
        "unlock": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "unlock"
      ], 
      "type": "object"
    }, 
    "unpause": {
      "example": {
        "application/json": {
          "unpause": null
        }
      }, 
      "properties": {
        "unpause": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "unpause"
      ], 
      "type": "object"
    }, 
    "unrescue": {
      "example": {
        "application/json": {
          "unrescue": null
        }
      }, 
      "properties": {
        "unrescue": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "unrescue"
      ], 
      "type": "object"
    }, 
    "unshelve": {
      "example": {
        "application/json": {
          "unshelve": null
        }
      }, 
      "properties": {
        "unshelve": {
          "description": "The action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "unshelve"
      ], 
      "type": "object"
    }, 
    "updateCloudpipe": {
      "example": {
        "application/json": {
          "configure_project": {
            "vpn_ip": "192.168.1.1", 
            "vpn_port": "2000"
          }
        }
      }, 
      "properties": {
        "vpn_ip": {
          "description": "The VPN IP address.", 
          "format": "", 
          "type": "string"
        }, 
        "vpn_port": {
          "description": "The VPN port.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "vpn_ip", 
        "vpn_port"
      ], 
      "type": "object"
    }, 
    "updateImageMetadata_200": {
      "properties": {
        "next": {
          "description": "Moves to the next metadata item.", 
          "format": "uri", 
          "type": "string"
        }, 
        "previous": {
          "description": "Moves to the previous metadata item.", 
          "format": "uri", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "updateQuota": {
      "example": {
        "application/json": {
          "quota_set": {
            "force": true, 
            "key_pairs": 120
          }
        }
      }, 
      "properties": {
        "cores": {
          "description": "The number of allowed instance cores for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of allowed fixed IP addresses for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of allowed floating IP addresses for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "force": {
          "description": "You can force the update even if the quota has already been used\nand the reserved quota exceeds the new quota. To force the update,\nspecify the ``\"force\": \"true\"``. Default is ``false``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "id": {
          "description": "The ID of the quota set.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of allowed bytes of content for each injected file.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of allowed bytes for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of allowed injected files for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of allowed instances for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of allowed key pairs for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of allowed metadata items for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of allowed instance RAM, in MB, for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of allowed rules for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of allowed security groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of allowed members for each server group.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of allowed server groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set"
      ], 
      "type": "object"
    }, 
    "updateQuota_200": {
      "properties": {
        "cores": {
          "description": "The number of allowed instance cores for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of allowed fixed IP addresses for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of allowed floating IP addresses for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID of the quota set.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of allowed bytes of content for each injected file.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of allowed bytes for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of allowed injected files for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of allowed instances for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of allowed key pairs for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of allowed metadata items for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of allowed instance RAM, in MB, for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of allowed rules for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of allowed security groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of allowed members for each server group.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of allowed server groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups", 
        "server_groups", 
        "server_group_members"
      ], 
      "type": "object"
    }, 
    "updateSecGroup": {
      "example": {
        "application/json": {
          "security_group": {
            "description": "my security group", 
            "name": "mysecgroup"
          }
        }
      }, 
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "description"
      ], 
      "type": "object"
    }, 
    "updateSecGroup_200": {
      "properties": {
        "description": {
          "description": "The security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The ID of the security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "rules": {
          "description": "A security group rules object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "security_group": {
          "description": "Security group object.", 
          "format": "", 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The tenant ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "security_group", 
        "description", 
        "id", 
        "name", 
        "rules", 
        "tenant_id"
      ], 
      "type": "object"
    }, 
    "updateServer": {
      "example": {
        "application/json": {
          "server": {
            "flavorRef": "http://openstack.example.com/flavors/1", 
            "imageRef": "http://glance.openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
            "metadata": {
              "My Server Name": "Apache1"
            }, 
            "name": "new-server-test"
          }
        }
      }, 
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Controls how the API partitions the disk when you create, rebuild,\nor resize servers. A server inherits the ``OS-DCF:diskConfig``\nvalue from the image from which it was created, and an image\ninherits the ``OS-DCF:diskConfig`` value from the server from which\nit was created. To override the inherited setting, you can include\nthis attribute in the request body of a server create, rebuild, or\nresize request.\n\nIf the ``OS-DCF:diskConfig`` value for an image is ``MANUAL``, you\ncannot create a server from that image and set its ``OS-\nDCF:diskConfig`` value to ``AUTO``.\n\nA valid value is:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using whatever partition\n  scheme and file system is in the source image. If the target\n  flavor disk is larger, the API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "block_device_mapping_v2": {
          "description": "Enables fine grained control of the block device mapping for an\ninstance. This is typically used for booting servers from volumes.\n\nAn example format would look as follows:\n``\"block_device_mapping_v2\": { \"boot_index\": \"0\", \"uuid\": \"ac408821\n-c95a-448f-9292-73986c790911\", \"source_type\": \"image\",\n\"volume_size\": \"25\", \"destination_type\": \"volume\",\n\"delete_on_termination\": true }``", 
          "format": "", 
          "type": "object"
        }, 
        "boot_index": {
          "description": "Defines the order in which a hypervisor tries devices when it\nattempts to boot the guest from storage.\n\nGive each device a unique boot index starting from ``0``. To\ndisable a device from booting, set the boot index to a negative\nvalue or use the default boot index value, which is ``None``.\n\nThe simplest usage is, set the boot index of the boot device to\n``0`` and use the default boot index value, ``None``, for any other\ndevices.\n\nSome hypervisors might not support booting from multiple devices;\nthese hypervisors consider only the device with a boot index of\n``0``.\n\nSome hypervisors support booting from multiple devices but only if\nthe devices are of different types. For example, a disk and CD-ROM.", 
          "format": "", 
          "type": "string"
        }, 
        "config_drive": {
          "description": "Indicates whether a configuration drive enables metadata injection.\nThe config_drive setting provides information about a drive that\nthe instance can mount at boot time. The instance reads files from\nthe drive to get information that is normally available through the\nmetadata service. This metadata is different from the user data.\nNot all cloud providers enable the ``config_drive``. Read more in\nthe OpenStack End User Guide .", 
          "format": "", 
          "type": "boolean"
        }, 
        "delete_on_termination": {
          "description": "To delete the boot volume when the server is destroyed, specify\n``true``. Otherwise, specify ``false``.", 
          "format": "", 
          "type": "string"
        }, 
        "destination_type": {
          "description": "Defines where the volume comes from. A valid value is ``local`` or\n``volume``.", 
          "format": "", 
          "type": "string"
        }, 
        "device_name": {
          "description": "A path to the device for the volume that you want to use to boot\nthe server.", 
          "format": "", 
          "type": "string"
        }, 
        "fixed_ip": {
          "description": "A fixed IPv4 address for the NIC. Valid with a ``neutron`` or\n``nova-networks`` network.", 
          "format": "", 
          "type": "string"
        }, 
        "flavorRef": {
          "description": "The flavor reference, as a UUID or full URL, for the flavor for\nyour server instance.", 
          "format": "", 
          "type": "string"
        }, 
        "guest_format": {
          "description": "Specifies the guest server disk file system format, such as\n``ephemeral`` or ``swap``.", 
          "format": "", 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference, as a UUID or full URL, for the image to use\nfor your server instance.", 
          "format": "", 
          "type": "string"
        }, 
        "key_name": {
          "description": "Key pair name.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size of the metadata key\nand value is 255 bytes each.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "type": "string"
        }, 
        "networks": {
          "description": "A ``networks`` object. Required parameter when there are mulitple\nnetworks defined for the tenant. When you do not specify the\nnetworks parameter, the server attaches to the only network created\nfor the current tenant.\n\nOptionally, you can create one or more NICs on the server.\n\nTo provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject.\n\nTo provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object.", 
          "format": "", 
          "type": "string"
        }, 
        "os-availability-zone:availability_zone": {
          "description": "The availability zone from which to launch the server. When you\nprovision resources, you specify from which availability zone you\nwant your instance to be built.\n\nTypically, you use availability zones to arrange OpenStack compute\nhosts into logical groups. An availability zone provides a form of\nphysical isolation and redundancy from other availability zones.\nFor instance, if some racks in your data center are on a separate\npower source, you can put servers in those racks in their own\navailability zone. Availability zones can also help separate\ndifferent classes of hardware.\n\nBy segregating resources into availability zones, you can ensure\nthat your application resources are spread across disparate\nmachines to achieve high availability in the event of hardware or\nother failure.", 
          "format": "", 
          "type": "string"
        }, 
        "os:scheduler_hints": {
          "description": "The dictionary of data to send to the scheduler. Alternatively, you\ncan specify ``OS-SCH-HNT:scheduler_hints`` as the string.", 
          "format": "", 
          "type": "object"
        }, 
        "personality": {
          "description": "The file path and contents, text only, to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit is The number of allowed bytes in the decoded, rather\nthan encoded, data.", 
          "format": "", 
          "type": "string"
        }, 
        "port": {
          "description": "To provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object. The port status must be ``DOWN``. required if\nyou omit the ``uuid`` attribute.", 
          "format": "", 
          "type": "string"
        }, 
        "security_groups": {
          "description": "One or more security groups. Specify the name of the security group\nin the ``name`` attribute. If you omit this attribute, the API\ncreates the server in the ``default`` security group.", 
          "format": "", 
          "type": "string"
        }, 
        "server": {
          "description": "server.", 
          "format": "", 
          "type": "object"
        }, 
        "source_type": {
          "description": "The source type of the volume. A valid value is ``blank``,\n``snapshot``, ``volume``, or ``image``.", 
          "format": "", 
          "type": "string"
        }, 
        "user_data": {
          "description": "Configuration information or scripts to use upon launch. Must be\nBase64 encoded.", 
          "format": "", 
          "type": "string"
        }, 
        "uuid": {
          "description": "To provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject. Required if you omit the ``port`` attribute.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server", 
        "imageRef", 
        "flavorRef", 
        "name", 
        "device_name", 
        "source_type", 
        "delete_on_termination", 
        "guest_format", 
        "boot_index"
      ], 
      "type": "object"
    }, 
    "updateServer_200": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Disk configuration. The value is either:\n\n- ``AUTO``. The API builds the server with a single partition the\n  size of the target flavor disk. The API automatically adjusts the\n  file system to fit the entire partition.\n\n- ``MANUAL``. The API builds the server by using the partition\n  scheme and file system that is in the source image. If the target\n  flavor disk is larger, The API does not partition the remaining\n  disk space.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-AZ:availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:host": {
          "description": "The host name. Appears in the response for administrative users\nonly.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:hypervisor_hostname": {
          "description": "The hypervisor host name. Appears in the response for\nadministrative users only.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-SRV-ATTR:instance_name": {
          "description": "The instance name. The Compute API generates the instance name from\nthe instance name template. Appears in the response for\nadministrative users only.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-STS:power_state": {
          "description": "The power state of the instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "OS-EXT-STS:task_state": {
          "description": "The task state of the instance.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-EXT-STS:vm_state": {
          "description": "The VM state.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-SRV-USG:launched_at": {
          "description": "The date and time when the server was launched.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the ``deleted_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "OS-SRV-USG:terminated_at": {
          "description": "The date and time when the server was deleted.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the ``deleted_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "addresses": {
          "description": "The addresses for the server.\n\nAddresses information is hidden for any server in a state set in\nthe ``osapi_hide_server_address_states`` configuration option. By\ndefault, servers in ``building`` state hide their addresses\ninformation.\n\nSee `nova.conf - configuration options\n<http://docs.openstack.org/liberty/config-reference/content/list-\nof-compute-config-options.html>`_.", 
          "format": "", 
          "type": "object"
        }, 
        "created": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The security group description.", 
          "format": "", 
          "type": "string"
        }, 
        "flavor": {
          "description": "The ID and links for the flavor for your server instance. A flavor\nis a combination of memory, disk size, and CPUs.", 
          "format": "", 
          "type": "object"
        }, 
        "hostId": {
          "description": "The ID of the host.", 
          "format": "", 
          "type": "string"
        }, 
        "host_status": {
          "description": "The host status. Values where next value in list can override the\nprevious:\n\n- ``UP`` if nova-compute up.\n\n- ``UNKNOWN`` if nova-compute not reported by servicegroup driver.\n\n- ``DOWN`` if nova-compute forced down.\n\n- ``MAINTENANCE`` if nova-compute is disabled.\n\n- Empty string indicates there is no host for server.\n\nThis attribute appears in the response only if the policy permits.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "type": "string"
        }, 
        "image": {
          "description": "The UUID and links for the image for your server instance. The\n``image`` object might be an empty string when you boot the server\nfrom a volume.", 
          "format": "", 
          "type": "object"
        }, 
        "key_name": {
          "description": "The name of associated key pair, if any.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Server links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "The associated metadata key and value pairs.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "type": "string"
        }, 
        "os-extended-volumes:volumes_attached": {
          "description": "The attached volumes, if any.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "progress": {
          "description": "A percentage value of the build progress.", 
          "format": "", 
          "type": "integer"
        }, 
        "rules": {
          "description": "A rules object.", 
          "format": "", 
          "type": "string"
        }, 
        "security_groups": {
          "description": "Security groups object.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "server": {
          "description": "A ``server`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The server status.", 
          "format": "", 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The UUID of the tenant in a multi-tenancy cloud.", 
          "format": "", 
          "type": "string"
        }, 
        "updated": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe UTC time zone is assumed.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The user ID of the user who owns the server.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "server", 
        "addresses", 
        "created", 
        "flavor", 
        "hostId", 
        "id", 
        "image", 
        "key_name", 
        "links", 
        "metadata", 
        "name", 
        "OS-DCF:diskConfig", 
        "OS-EXT-AZ:availability_zone", 
        "OS-EXT-SRV-ATTR:host", 
        "OS-EXT-SRV-ATTR:hypervisor_hostname", 
        "OS-EXT-SRV-ATTR:instance_name", 
        "OS-EXT-STS:power_state", 
        "OS-EXT-STS:task_state", 
        "OS-EXT-STS:vm_state", 
        "os-extended-volumes:volumes_attached", 
        "OS-SRV-USG:launched_at", 
        "OS-SRV-USG:terminated_at", 
        "progress", 
        "security_groups", 
        "description", 
        "rules", 
        "status", 
        "host_status", 
        "tenant_id", 
        "updated", 
        "user_id"
      ], 
      "type": "object"
    }, 
    "updatebuild": {
      "example": {
        "application/json": {
          "para": {
            "md5hash": "add6bb58e139be103324d04d82d8f545", 
            "url": "http://example.com/path/to/resource", 
            "version": "7.0"
          }
        }
      }, 
      "properties": {
        "md5hash": {
          "description": "The MD5 hash.", 
          "format": "", 
          "type": "string"
        }, 
        "url": {
          "description": "The URL associated with the agent.", 
          "format": "", 
          "type": "string"
        }, 
        "version": {
          "description": "The version.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "url", 
        "md5hash", 
        "version"
      ], 
      "type": "object"
    }, 
    "updatebuild_200": {
      "properties": {
        "agent_id": {
          "description": "The agent ID.", 
          "format": "", 
          "type": "integer"
        }, 
        "md5hash": {
          "description": "The MD5 hash.", 
          "format": "", 
          "type": "string"
        }, 
        "url": {
          "description": "The URL associated with the agent.", 
          "format": "", 
          "type": "string"
        }, 
        "version": {
          "description": "The version.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "agent_id", 
        "url", 
        "md5hash", 
        "version"
      ], 
      "type": "object"
    }, 
    "updatequota_200": {
      "properties": {
        "cores": {
          "description": "The number of allowed instance cores for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of allowed fixed IP addresses for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of allowed floating IP addresses for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID of the quota set.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of allowed bytes of content for each injected file.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of allowed bytes for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of allowed injected files for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of allowed instances for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of allowed key pairs for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of allowed metadata items for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of allowed instance RAM, in MB, for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of allowed rules for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of allowed security groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of allowed members for each server group.", 
          "format": "", 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of allowed server groups for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups", 
        "server_groups", 
        "server_group_members"
      ], 
      "type": "object"
    }
  }, 
  "externalDocs": {
    "description": "OpenStack Docs", 
    "url": "http://docs.openstack.org"
  }, 
  "host": "developer.openstack.org", 
  "info": {
    "license": {
      "name": "Apache 2.0", 
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }, 
    "title": "Compute", 
    "version": "v2.1", 
    "x-service": "compute"
  }, 
  "paths": {
    "/": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVersionsv2.1", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "versions": [
                  {
                    "id": "v2.0", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/", 
                        "rel": "self"
                      }
                    ], 
                    "min_version": "", 
                    "status": "SUPPORTED", 
                    "updated": "2011-01-21T11:33:21Z", 
                    "version": ""
                  }, 
                  {
                    "id": "v2.1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/", 
                        "rel": "self"
                      }
                    ], 
                    "min_version": "2.1", 
                    "status": "CURRENT", 
                    "updated": "2013-07-23T11:33:21Z", 
                    "version": "2.14"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }, 
          "300": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists information about all Compute API versions.", 
        "tags": [
          "versions"
        ], 
        "x-title": "List API versions"
      }
    }, 
    "/v2": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showVersionsv2", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "version": {
                  "id": "v2.0", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://docs.openstack.org/", 
                      "rel": "describedby", 
                      "type": "text/html"
                    }
                  ], 
                  "media-types": [
                    {
                      "base": "application/json", 
                      "type": "application/vnd.openstack.compute+json;version=2"
                    }
                  ], 
                  "min_version": "", 
                  "status": "SUPPORTED", 
                  "updated": "2011-01-21T11:33:21Z", 
                  "version": ""
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Show information about Compute API v2.", 
        "tags": [
          "versions"
        ], 
        "x-title": "Show API v2"
      }
    }, 
    "/v2.1": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showVersionsv2.1", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "version": {
                  "id": "v2.1", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2.1/", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://docs.openstack.org/", 
                      "rel": "describedby", 
                      "type": "text/html"
                    }
                  ], 
                  "media-types": [
                    {
                      "base": "application/json", 
                      "type": "application/vnd.openstack.compute+json;version=2.1"
                    }
                  ], 
                  "min_version": "2.1", 
                  "status": "CURRENT", 
                  "updated": "2013-07-23T11:33:21Z", 
                  "version": "2.21"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Show information about Compute API v2.1.", 
        "tags": [
          "versions"
        ], 
        "x-title": "Show API v2.1"
      }
    }, 
    "/v2.1/{admin_tenant_id}/os-quota-sets/{tenant_id}": {
      "delete": {
        "consumes": [], 
        "description": "To revert quotas for a project and a user, specify the ``user_id``\nquery parameter.", 
        "operationId": "revertQuotas", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Reverts the quotas to default values for a project or a project and a user.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Revert quotas to defaults"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "In the request URI, you specify both the ID of the administrative\nproject and the ID of the project for which you want to show quota.\n\nTo show a quota for a project and a user, specify the ``user_id``\nquery parameter.", 
        "operationId": "showQuota", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "id": "fake_tenant", 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10, 
                  "server_group_members": 10, 
                  "server_groups": 10
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showQuota_200"
            }
          }
        }, 
        "summary": "Show the quota for a project or a project and a user.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Show a quota"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "You can force the update even if the quota has already been used\nand the reserved quota exceeds the new quota.\n\nTo force the update, specify the ``\"force\": \"True\"`` attribute in\nthe request body. Default is ``false``. The following example\nrequest shows the optional ``force`` attribute.\n\nTo update a quota for a project and a user, specify the ``user_id``\nquery parameter.", 
        "operationId": "updateQuota", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateQuota"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a user, by ID.", 
            "format": "", 
            "in": "query", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 120, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10, 
                  "server_group_members": 10, 
                  "server_groups": 10
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateQuota_200"
            }
          }
        }, 
        "summary": "Update the quotas for a project or a project and a user.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Update quotas"
      }
    }, 
    "/v2.1/{admin_tenant_id}/os-quota-sets/{tenant_id}/defaults": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "In the request URI, you specify both the ID of the administrative\nproject and the ID of the project for which you want to show\ndefault quotas. These project IDs can match.", 
        "operationId": "listDefaultQuotas", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "id": "91a3c6da787643c78f2a7c7428fa54f2", 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10, 
                  "server_group_members": 10, 
                  "server_groups": 10
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listDefaultQuotas_200"
            }
          }
        }, 
        "summary": "Lists the default quotas for a project.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "List default quotas for tenant"
      }
    }, 
    "/v2.1/{admin_tenant_id}/os-quota-sets/{tenant_id}/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "To list a quota for a project and a user, specify the ``user_id``\nquery parameter.", 
        "operationId": "listDetailQuotas", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": {
                    "in_use": 0, 
                    "limit": 20, 
                    "reserved": 0
                  }, 
                  "fixed_ips": {
                    "in_use": 0, 
                    "limit": -1, 
                    "reserved": 0
                  }, 
                  "floating_ips": {
                    "in_use": 0, 
                    "limit": 10, 
                    "reserved": 0
                  }, 
                  "id": "91a3c6da787643c78f2a7c7428fa54f2", 
                  "injected_file_content_bytes": {
                    "in_use": 0, 
                    "limit": 10240, 
                    "reserved": 0
                  }, 
                  "injected_file_path_bytes": {
                    "in_use": 0, 
                    "limit": 255, 
                    "reserved": 0
                  }, 
                  "injected_files": {
                    "in_use": 0, 
                    "limit": 5, 
                    "reserved": 0
                  }, 
                  "instances": {
                    "in_use": 0, 
                    "limit": 10, 
                    "reserved": 0
                  }, 
                  "key_pairs": {
                    "in_use": 0, 
                    "limit": 120, 
                    "reserved": 0
                  }, 
                  "metadata_items": {
                    "in_use": 0, 
                    "limit": 128, 
                    "reserved": 0
                  }, 
                  "ram": {
                    "in_use": 0, 
                    "limit": 51200, 
                    "reserved": 0
                  }, 
                  "security_group_rules": {
                    "in_use": 0, 
                    "limit": 20, 
                    "reserved": 0
                  }, 
                  "security_groups": {
                    "in_use": 0, 
                    "limit": 10, 
                    "reserved": 0
                  }, 
                  "server_group_members": {
                    "in_use": 0, 
                    "limit": 10, 
                    "reserved": 0
                  }, 
                  "server_groups": {
                    "in_use": 0, 
                    "limit": 10, 
                    "reserved": 0
                  }
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/listDetailQuotas_200"
            }
          }
        }, 
        "summary": "Lists quotas with details for a project or a project and a user.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "List quotas with details"
      }
    }, 
    "/v2.1/{tenant_id}/extensions": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Extensions introduce features and vendor-specific functionality to\nthe API without requiring a version change.\n\nThe response shows the extension name and its alias. To show\ndetails for an extension, you specify the alias.", 
        "operationId": "listExtensions", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "extensions": [
                  {
                    "alias": "NMN", 
                    "description": "Multiple network support.", 
                    "links": [], 
                    "name": "Multinic", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-DCF", 
                    "description": "Disk Management Extension.", 
                    "links": [], 
                    "name": "DiskConfig", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-EXT-AZ", 
                    "description": "Extended Availability Zone support.", 
                    "links": [], 
                    "name": "ExtendedAvailabilityZone", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-EXT-IMG-SIZE", 
                    "description": "Adds image size to image listings.", 
                    "links": [], 
                    "name": "ImageSize", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-EXT-IPS", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedIps", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-EXT-IPS-MAC", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedIpsMac", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-EXT-SRV-ATTR", 
                    "description": "Extended Server Attributes support.", 
                    "links": [], 
                    "name": "ExtendedServerAttributes", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-EXT-STS", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedStatus", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-EXT-VIF-NET", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedVIFNet", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-FLV-DISABLED", 
                    "description": "", 
                    "links": [], 
                    "name": "FlavorDisabled", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-FLV-EXT-DATA", 
                    "description": "", 
                    "links": [], 
                    "name": "FlavorExtraData", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-SCH-HNT", 
                    "description": "Pass arbitrary key/value pairs to the scheduler.", 
                    "links": [], 
                    "name": "SchedulerHints", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "OS-SRV-USG", 
                    "description": "Adds launched_at and terminated_at on Servers.", 
                    "links": [], 
                    "name": "ServerUsage", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-access-ips", 
                    "description": "Access IPs support.", 
                    "links": [], 
                    "name": "AccessIPs", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-admin-actions", 
                    "description": "Enable admin-only server actions\n\n    Actions include: resetNetwork, injectNetworkInfo, os-resetState\n    ", 
                    "links": [], 
                    "name": "AdminActions", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-admin-password", 
                    "description": "Admin password management support.", 
                    "links": [], 
                    "name": "AdminPassword", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-agents", 
                    "description": "Agents support.", 
                    "links": [], 
                    "name": "Agents", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-aggregates", 
                    "description": "Admin-only aggregate administration.", 
                    "links": [], 
                    "name": "Aggregates", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-assisted-volume-snapshots", 
                    "description": "Assisted volume snapshots.", 
                    "links": [], 
                    "name": "AssistedVolumeSnapshots", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-attach-interfaces", 
                    "description": "Attach interface support.", 
                    "links": [], 
                    "name": "AttachInterfaces", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-availability-zone", 
                    "description": "1. Add availability_zone to the Create Server API.\n       2. Add availability zones describing.\n    ", 
                    "links": [], 
                    "name": "AvailabilityZone", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-baremetal-ext-status", 
                    "description": "", 
                    "links": [], 
                    "name": "BareMetalExtStatus", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-baremetal-nodes", 
                    "description": "Admin-only bare-metal node administration.", 
                    "links": [], 
                    "name": "BareMetalNodes", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-block-device-mapping", 
                    "description": "Block device mapping boot support.", 
                    "links": [], 
                    "name": "BlockDeviceMapping", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-block-device-mapping-v2-boot", 
                    "description": "", 
                    "links": [], 
                    "name": "BlockDeviceMappingV2Boot", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-cell-capacities", 
                    "description": "", 
                    "links": [], 
                    "name": "CellCapacities", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-cells", 
                    "description": "Enables cells-related functionality such as adding neighbor cells,\n    listing neighbor cells, and getting the capabilities of the local cell.\n    ", 
                    "links": [], 
                    "name": "Cells", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-certificates", 
                    "description": "Certificates support.", 
                    "links": [], 
                    "name": "Certificates", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-cloudpipe", 
                    "description": "Adds actions to create cloudpipe instances.\n\n    When running with the Vlan network mode, you need a mechanism to route\n    from the public Internet to your vlans.  This mechanism is known as a\n    cloudpipe.\n\n    At the time of creating this class, only OpenVPN is supported.  Support for\n    a SSH Bastion host is forthcoming.\n    ", 
                    "links": [], 
                    "name": "Cloudpipe", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-cloudpipe-update", 
                    "description": "", 
                    "links": [], 
                    "name": "CloudpipeUpdate", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-config-drive", 
                    "description": "Config Drive Extension.", 
                    "links": [], 
                    "name": "ConfigDrive", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-console-auth-tokens", 
                    "description": "Console token authentication support.", 
                    "links": [], 
                    "name": "ConsoleAuthTokens", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-console-output", 
                    "description": "Console log output support, with tailing ability.", 
                    "links": [], 
                    "name": "ConsoleOutput", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-consoles", 
                    "description": "Interactive Console support.", 
                    "links": [], 
                    "name": "Consoles", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-create-backup", 
                    "description": "Create a backup of a server.", 
                    "links": [], 
                    "name": "CreateBackup", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-create-server-ext", 
                    "description": "", 
                    "links": [], 
                    "name": "Createserverext", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-deferred-delete", 
                    "description": "Instance deferred delete.", 
                    "links": [], 
                    "name": "DeferredDelete", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-evacuate", 
                    "description": "Enables server evacuation.", 
                    "links": [], 
                    "name": "Evacuate", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-evacuate-find-host", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedEvacuateFindHost", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-floating-ips", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedFloatingIps", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-hypervisors", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedHypervisors", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-networks", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedNetworks", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-quotas", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedQuotas", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-rescue-with-image", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedRescueWithImage", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-services", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedServices", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-services-delete", 
                    "description": "", 
                    "links": [], 
                    "name": "ExtendedServicesDelete", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-status", 
                    "description": "Extended Status support.", 
                    "links": [], 
                    "name": "ExtendedStatus", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-extended-volumes", 
                    "description": "Extended Volumes support.", 
                    "links": [], 
                    "name": "ExtendedVolumes", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-fixed-ips", 
                    "description": "Fixed IPs support.", 
                    "links": [], 
                    "name": "FixedIPs", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-flavor-access", 
                    "description": "Flavor access support.", 
                    "links": [], 
                    "name": "FlavorAccess", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-flavor-extra-specs", 
                    "description": "Flavors extra specs support.", 
                    "links": [], 
                    "name": "FlavorExtraSpecs", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-flavor-manage", 
                    "description": "Flavor create/delete API support.", 
                    "links": [], 
                    "name": "FlavorManage", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-flavor-rxtx", 
                    "description": "Support to show the rxtx status of a flavor.", 
                    "links": [], 
                    "name": "FlavorRxtx", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-flavor-swap", 
                    "description": "", 
                    "links": [], 
                    "name": "FlavorSwap", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-floating-ip-dns", 
                    "description": "Floating IP DNS support.", 
                    "links": [], 
                    "name": "FloatingIpDns", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-floating-ip-pools", 
                    "description": "Floating IPs support.", 
                    "links": [], 
                    "name": "FloatingIpPools", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-floating-ips", 
                    "description": "Floating IPs support.", 
                    "links": [], 
                    "name": "FloatingIps", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-floating-ips-bulk", 
                    "description": "Bulk handling of Floating IPs.", 
                    "links": [], 
                    "name": "FloatingIpsBulk", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-fping", 
                    "description": "Fping Management Extension.", 
                    "links": [], 
                    "name": "Fping", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-hide-server-addresses", 
                    "description": "Support hiding server addresses in certain states.", 
                    "links": [], 
                    "name": "HideServerAddresses", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-hosts", 
                    "description": "Admin-only host administration.", 
                    "links": [], 
                    "name": "Hosts", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-hypervisor-status", 
                    "description": "", 
                    "links": [], 
                    "name": "HypervisorStatus", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-hypervisors", 
                    "description": "Admin-only hypervisor administration.", 
                    "links": [], 
                    "name": "Hypervisors", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-instance-actions", 
                    "description": "View a log of actions and events taken on an instance.", 
                    "links": [], 
                    "name": "InstanceActions", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-instance_usage_audit_log", 
                    "description": "Admin-only Task Log Monitoring.", 
                    "links": [], 
                    "name": "OSInstanceUsageAuditLog", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-keypairs", 
                    "description": "Keypair Support.", 
                    "links": [], 
                    "name": "Keypairs", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-lock-server", 
                    "description": "Enable lock/unlock server actions.", 
                    "links": [], 
                    "name": "LockServer", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-migrate-server", 
                    "description": "Enable migrate and live-migrate server actions.", 
                    "links": [], 
                    "name": "MigrateServer", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-migrations", 
                    "description": "Provide data on migrations.", 
                    "links": [], 
                    "name": "Migrations", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-multiple-create", 
                    "description": "Allow multiple create in the Create Server v2.1 API.", 
                    "links": [], 
                    "name": "MultipleCreate", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-networks", 
                    "description": "Admin-only Network Management Extension.", 
                    "links": [], 
                    "name": "Networks", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-networks-associate", 
                    "description": "Network association support.", 
                    "links": [], 
                    "name": "NetworkAssociationSupport", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-pause-server", 
                    "description": "Enable pause/unpause server actions.", 
                    "links": [], 
                    "name": "PauseServer", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-personality", 
                    "description": "Personality support.", 
                    "links": [], 
                    "name": "Personality", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-preserve-ephemeral-rebuild", 
                    "description": "Allow preservation of the ephemeral partition on rebuild.", 
                    "links": [], 
                    "name": "PreserveEphemeralOnRebuild", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-quota-class-sets", 
                    "description": "Quota classes management support.", 
                    "links": [], 
                    "name": "QuotaClasses", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-quota-sets", 
                    "description": "Quotas management support.", 
                    "links": [], 
                    "name": "Quotas", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-rescue", 
                    "description": "Instance rescue mode.", 
                    "links": [], 
                    "name": "Rescue", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-security-group-default-rules", 
                    "description": "Default rules for security group support.", 
                    "links": [], 
                    "name": "SecurityGroupDefaultRules", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-security-groups", 
                    "description": "Security group support.", 
                    "links": [], 
                    "name": "SecurityGroups", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-server-diagnostics", 
                    "description": "Allow Admins to view server diagnostics through server action.", 
                    "links": [], 
                    "name": "ServerDiagnostics", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-server-external-events", 
                    "description": "Server External Event Triggers.", 
                    "links": [], 
                    "name": "ServerExternalEvents", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-server-group-quotas", 
                    "description": "", 
                    "links": [], 
                    "name": "ServerGroupQuotas", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-server-groups", 
                    "description": "Server group support.", 
                    "links": [], 
                    "name": "ServerGroups", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-server-list-multi-status", 
                    "description": "", 
                    "links": [], 
                    "name": "ServerListMultiStatus", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-server-password", 
                    "description": "Server password support.", 
                    "links": [], 
                    "name": "ServerPassword", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-server-sort-keys", 
                    "description": "", 
                    "links": [], 
                    "name": "ServerSortKeys", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-server-start-stop", 
                    "description": "", 
                    "links": [], 
                    "name": "ServerStartStop", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-services", 
                    "description": "Services support.", 
                    "links": [], 
                    "name": "Services", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-shelve", 
                    "description": "Instance shelve mode.", 
                    "links": [], 
                    "name": "Shelve", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-simple-tenant-usage", 
                    "description": "Simple tenant usage extension.", 
                    "links": [], 
                    "name": "SimpleTenantUsage", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-suspend-server", 
                    "description": "Enable suspend/resume server actions.", 
                    "links": [], 
                    "name": "SuspendServer", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-tenant-networks", 
                    "description": "Tenant-based Network Management Extension.", 
                    "links": [], 
                    "name": "OSTenantNetworks", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-used-limits", 
                    "description": "Provide data on limited resources that are being used.", 
                    "links": [], 
                    "name": "UsedLimits", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-used-limits-for-admin", 
                    "description": "", 
                    "links": [], 
                    "name": "UsedLimitsForAdmin", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-user-data", 
                    "description": "Add user_data to the Create Server API.", 
                    "links": [], 
                    "name": "UserData", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-user-quotas", 
                    "description": "", 
                    "links": [], 
                    "name": "UserQuotas", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-virtual-interfaces", 
                    "description": "Virtual interface support.", 
                    "links": [], 
                    "name": "VirtualInterfaces", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-volume-attachment-update", 
                    "description": "", 
                    "links": [], 
                    "name": "VolumeAttachmentUpdate", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }, 
                  {
                    "alias": "os-volumes", 
                    "description": "Volumes support.", 
                    "links": [], 
                    "name": "Volumes", 
                    "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                    "updated": "2014-12-03T00:00:00Z"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/listExtensions_200"
            }
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists available extensions.", 
        "tags": [
          "extensions-v2.1"
        ], 
        "x-title": "List extensions"
      }
    }, 
    "/v2.1/{tenant_id}/extensions/{alias}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showExtension", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "An alias for the extension name. For example, ``os-server-external-\nevents``.", 
            "format": "", 
            "in": "path", 
            "name": "alias", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "extension": {
                  "alias": "os-server-external-events", 
                  "description": "Server External Event Triggers.", 
                  "links": [], 
                  "name": "ServerExternalEvents", 
                  "namespace": "http://docs.openstack.org/compute/ext/fake_xml", 
                  "updated": "2014-12-03T00:00:00Z"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/showExtension_200"
            }
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for an extension, by alias.", 
        "tags": [
          "extensions-v2.1"
        ], 
        "x-title": "Show extension details"
      }
    }, 
    "/v2.1/{tenant_id}/flavors": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listFlavors", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a minimum disk space, in GB.", 
            "format": "", 
            "in": "query", 
            "name": "minDisk", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Filters the response by a minimum RAM, in MB.", 
            "format": "", 
            "in": "query", 
            "name": "minRam", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Sorts by a server attribute. Default attribute is ``created``. You\ncan specify multiple pairs of sort key and sort direction query\nparameters. If you omit the sort direction in a pair, the API uses\nthe natural sorting direction of the server ``sort_key`` attribute.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sort direction. A valid value is ``asc`` (ascending) or ``desc``\n(descending). Default is ``desc``. You can specify multiple pairs\nof sort key and sort direction query parameters. If you omit the\nsort direction in a pair, the API uses the natural sorting\ndirection of the direction of the server ``sort_key`` attribute.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "flavors": [
                  {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.tiny"
                  }, 
                  {
                    "id": "2", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.small"
                  }, 
                  {
                    "id": "3", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/3", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/3", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.medium"
                  }, 
                  {
                    "id": "4", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/4", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/4", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.large"
                  }, 
                  {
                    "id": "5", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/5", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/5", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.xlarge"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists flavors.", 
        "tags": [
          "flavors"
        ], 
        "x-title": "List flavors"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createFlavor", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "flavor": {
                  "OS-FLV-DISABLED:disabled": false, 
                  "OS-FLV-EXT-DATA:ephemeral": 0, 
                  "disk": 10, 
                  "id": "10", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2.1/flavors/10", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/flavors/10", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "test_flavor", 
                  "os-flavor-access:is_public": true, 
                  "ram": 1024, 
                  "swap": "", 
                  "vcpus": 2
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a flavor.", 
        "tags": [
          "flavors"
        ], 
        "x-title": "Create flavor"
      }
    }, 
    "/v2.1/{tenant_id}/flavors/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listDetailFlavors", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a minimum disk space, in GB.", 
            "format": "", 
            "in": "query", 
            "name": "minDisk", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Filters the response by a minimum RAM, in MB.", 
            "format": "", 
            "in": "query", 
            "name": "minRam", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Sorts by a server attribute. Default attribute is ``created``. You\ncan specify multiple pairs of sort key and sort direction query\nparameters. If you omit the sort direction in a pair, the API uses\nthe natural sorting direction of the server ``sort_key`` attribute.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sort direction. A valid value is ``asc`` (ascending) or ``desc``\n(descending). Default is ``desc``. You can specify multiple pairs\nof sort key and sort direction query parameters. If you omit the\nsort direction in a pair, the API uses the natural sorting\ndirection of the direction of the server ``sort_key`` attribute.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "flavors": [
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 1, 
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.tiny", 
                    "os-flavor-access:is_public": true, 
                    "ram": 512, 
                    "swap": "", 
                    "vcpus": 1
                  }, 
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 20, 
                    "id": "2", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.small", 
                    "os-flavor-access:is_public": true, 
                    "ram": 2048, 
                    "swap": "", 
                    "vcpus": 1
                  }, 
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 40, 
                    "id": "3", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/3", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/3", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.medium", 
                    "os-flavor-access:is_public": true, 
                    "ram": 4096, 
                    "swap": "", 
                    "vcpus": 2
                  }, 
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 80, 
                    "id": "4", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/4", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/4", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.large", 
                    "os-flavor-access:is_public": true, 
                    "ram": 8192, 
                    "swap": "", 
                    "vcpus": 4
                  }, 
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 160, 
                    "id": "5", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/openstack/flavors/5", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/5", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.xlarge", 
                    "os-flavor-access:is_public": true, 
                    "ram": 16384, 
                    "swap": "", 
                    "vcpus": 8
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists flavors with details.", 
        "tags": [
          "flavors"
        ], 
        "x-title": "List flavors with details"
      }
    }, 
    "/v2.1/{tenant_id}/flavors/os-flavor-access": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listFlavorAccess", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "flavor_access": [
                  {
                    "flavor_id": "10", 
                    "tenant_id": "fake_tenant"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists flavor access information.", 
        "tags": [
          "flavor-access"
        ], 
        "x-title": "List flavor access information for given flavor"
      }
    }, 
    "/v2.1/{tenant_id}/flavors/os-flavor-access/{flavor_id}/action": {
      "x-post-addFlavorAccess": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``addTenantAccess`` action and the ``tenant_id`` in the\nrequest body.", 
        "operationId": "addFlavorAccess", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "flavor_access": [
                  {
                    "flavor_id": "10", 
                    "tenant_id": "fake_tenant"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds flavor access to a tenant and flavor.", 
        "tags": [
          "flavor-access"
        ], 
        "x-title": "Add flavor access to tenant"
      }, 
      "x-post-removeFlavorAccess": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``removeTenantAccess`` action and the ``tenant_id`` in\nthe request body.", 
        "operationId": "removeFlavorAccess", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "flavor_access": []
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Removes flavor access from a tenant and flavor.", 
        "tags": [
          "flavor-access"
        ], 
        "x-title": "Remove flavor access from tenant"
      }
    }, 
    "/v2.1/{tenant_id}/flavors/{flavor_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteFlavor", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a flavor.", 
        "tags": [
          "flavors"
        ], 
        "x-title": "Delete flavor"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showFlavor", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "flavor": {
                  "OS-FLV-DISABLED:disabled": false, 
                  "OS-FLV-EXT-DATA:ephemeral": 0, 
                  "disk": 1, 
                  "id": "1", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2.1/openstack/flavors/1", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/1", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "m1.tiny", 
                  "os-flavor-access:is_public": true, 
                  "ram": 512, 
                  "swap": "", 
                  "vcpus": 1
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a flavor.", 
        "tags": [
          "flavors"
        ], 
        "x-title": "Show flavor details"
      }
    }, 
    "/v2.1/{tenant_id}/flavors/{flavor_id}/os-extra_specs": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listFlavorExtraSpecs", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "extra_specs": {
                  "key1": "value1", 
                  "key2": "value2"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists all extra specs for a flavor, by ID.", 
        "tags": [
          "flavor-extra-specs"
        ], 
        "x-title": "List extra specs for a flavor"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createFlavorExtraSpec", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "extra_specs": {
                  "key1": "value1", 
                  "key2": "value2"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates extra specs for a flavor, by ID.", 
        "tags": [
          "flavor-extra-specs"
        ], 
        "x-title": "Create extra specs for a flavor"
      }
    }, 
    "/v2.1/{tenant_id}/flavors/{flavor_id}/os-extra_specs/{flavor_extra_spec_key}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteFlavorExtraSpec", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The extra spec key for the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_extra_spec_key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes an extra spec, by key, for a flavor, by ID.", 
        "tags": [
          "flavor-extra-specs"
        ], 
        "x-title": "Delete an extra spec for a flavor"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showFlavorExtraSpec", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The extra spec key for the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_extra_spec_key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "key1": "value1"
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows an extra spec, by key, for a flavor, by ID.", 
        "tags": [
          "flavor-extra-specs"
        ], 
        "x-title": "Show an extra spec for a flavor"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateFlavorExtraSpec", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The extra spec key for the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_extra_spec_key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "key1": "new_value1"
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Updates an extra spec, by key, for a flavor, by ID.", 
        "tags": [
          "flavor-extra-specs"
        ], 
        "x-title": "Update an extra spec for a flavor"
      }
    }, 
    "/v2.1/{tenant_id}/images": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listImages", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a date and time when the image last changed\nstatus.\n\nUse this query parameter to check for changes since a previous\nrequest rather than re-downloading and re-parsing the full status\nat each polling interval. If data has changed, the call returns\nonly the items changed since the ``changes-since`` time. If data\nhas not changed since the ``changes-since`` time, the call returns\nan empty list.\n\nTo enable you to keep track of changes, this filter also displays\nimages that were deleted if the ``changes-since`` value specifies a\ndate in the last 30 days. Items deleted more than 30 days ago might\nbe returned, but it is not guaranteed.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nThe ``\u00b1hh:mm`` value, if included, returns the time zone as an\noffset from UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nIf you omit the time zone, the UTC time zone is assumed.", 
            "format": "", 
            "in": "query", 
            "name": "changes-since", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a server, as a URL.", 
            "format": "uri", 
            "in": "query", 
            "name": "server", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by an image name, as a string.", 
            "format": "", 
            "in": "query", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by an image status, as a string. For example,\n``ACTIVE``.", 
            "format": "", 
            "in": "query", 
            "name": "status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a minimum disk size. For example, ``100``.", 
            "format": "", 
            "in": "query", 
            "name": "minDisk", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Filters the response by a minimum RAM size. For example, ``512``.", 
            "format": "", 
            "in": "query", 
            "name": "minRam", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Filters the response by an image type. For example, ``snapshot`` or\n``backup``.", 
            "format": "", 
            "in": "query", 
            "name": "type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "images": [
                  {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "name": "fakeimage7"
                  }, 
                  {
                    "id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "name": "fakeimage123456"
                  }, 
                  {
                    "id": "a2459075-d96c-40d5-893e-577ff92e721c", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "name": "fakeimage123456"
                  }, 
                  {
                    "id": "a440c04b-79fa-479c-bed1-0b816eaec379", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "name": "fakeimage6"
                  }, 
                  {
                    "id": "c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "name": "fakeimage123456"
                  }, 
                  {
                    "id": "cedef40a-ed67-4d10-800e-17455edce175", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "name": "fakeimage123456"
                  }, 
                  {
                    "id": "76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "name": "fakeimage123456"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/listImages_200"
            }
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists IDs, names, and links for available images.", 
        "tags": [
          "compute_images-v2.1"
        ], 
        "x-title": "List images"
      }
    }, 
    "/v2.1/{tenant_id}/images/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listDetailImages", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a date and time when the image last changed\nstatus.\n\nUse this query parameter to check for changes since a previous\nrequest rather than re-downloading and re-parsing the full status\nat each polling interval. If data has changed, the call returns\nonly the items changed since the ``changes-since`` time. If data\nhas not changed since the ``changes-since`` time, the call returns\nan empty list.\n\nTo enable you to keep track of changes, this filter also displays\nimages that were deleted if the ``changes-since`` value specifies a\ndate in the last 30 days. Items deleted more than 30 days ago might\nbe returned, but it is not guaranteed.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nThe ``\u00b1hh:mm`` value, if included, returns the time zone as an\noffset from UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nIf you omit the time zone, the UTC time zone is assumed.", 
            "format": "", 
            "in": "query", 
            "name": "changes-since", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a server, as a URL.", 
            "format": "uri", 
            "in": "query", 
            "name": "server", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by an image name, as a string.", 
            "format": "", 
            "in": "query", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by an image status, as a string. For example,\n``ACTIVE``.", 
            "format": "", 
            "in": "query", 
            "name": "status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a minimum disk size. For example, ``100``.", 
            "format": "", 
            "in": "query", 
            "name": "minDisk", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Filters the response by a minimum RAM size. For example, ``512``.", 
            "format": "", 
            "in": "query", 
            "name": "minRam", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Filters the response by an image type. For example, ``snapshot`` or\n``backup``.", 
            "format": "", 
            "in": "query", 
            "name": "type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "images": [
                  {
                    "OS-EXT-IMG-SIZE:size": "74185822", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "auto_disk_config": true, 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage7", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "OS-EXT-IMG-SIZE:size": "74185821", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "a2459075-d96c-40d5-893e-577ff92e721c", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "a440c04b-79fa-479c-bed1-0b816eaec379", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "auto_disk_config": false, 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage6", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                      "ramdisk_id": null
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "cedef40a-ed67-4d10-800e-17455edce175", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2.1/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/listDetailImages_200"
            }
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all details for available images.", 
        "tags": [
          "compute_images-v2.1"
        ], 
        "x-title": "List images details"
      }
    }, 
    "/v2.1/{tenant_id}/images/{image_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteImage", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the image.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes an image.", 
        "tags": [
          "compute_images-v2.1"
        ], 
        "x-title": "Delete image"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showImage", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the image.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "image": {
                  "OS-EXT-IMG-SIZE:size": "74185822", 
                  "created": "2011-01-01T01:02:03Z", 
                  "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2.1/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "bookmark"
                    }, 
                    {
                      "href": "http://glance.openstack.example.com/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "alternate", 
                      "type": "application/vnd.openstack.image"
                    }
                  ], 
                  "metadata": {
                    "architecture": "x86_64", 
                    "auto_disk_config": true, 
                    "kernel_id": "nokernel", 
                    "ramdisk_id": "nokernel"
                  }, 
                  "minDisk": 0, 
                  "minRam": 0, 
                  "name": "fakeimage7", 
                  "progress": 100, 
                  "status": "ACTIVE", 
                  "updated": "2011-01-01T01:02:03Z"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for an image.", 
        "tags": [
          "compute_images-v2.1"
        ], 
        "x-title": "Show image details"
      }
    }, 
    "/v2.1/{tenant_id}/images/{image_id}/metadata": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showImageMetadata", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the image.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "architecture": "x86_64", 
                  "auto_disk_config": true, 
                  "kernel_id": "nokernel", 
                  "ramdisk_id": "nokernel"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/showImageMetadata_200"
            }
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows metadata for an image.", 
        "tags": [
          "compute_image_metadata-v2.1"
        ], 
        "x-title": "Show image metadata"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Replaces items that match keys. Does not modify items not in the\nrequest.", 
        "operationId": "updateImageMetadata", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the image.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "Label": "UpdatedImage", 
                  "architecture": "x86_64", 
                  "auto_disk_config": true, 
                  "kernel_id": false, 
                  "ramdisk_id": "nokernel"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateImageMetadata_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Updates metadata items, by key, for an image.", 
        "tags": [
          "compute_image_metadata-v2.1"
        ], 
        "x-title": "Update image metadata items"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Replaces items that match keys. If you omit a key that already\nexists, this key retains its value.", 
        "operationId": "createImageMetadata", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the image.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "Label": "Changed", 
                  "auto_disk_config": true
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createImageMetadata_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates or replaces metadata for an image.", 
        "tags": [
          "compute_image_metadata-v2.1"
        ], 
        "x-title": "Create or replace image metadata"
      }
    }, 
    "/v2.1/{tenant_id}/images/{image_id}/metadata/{key}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteImageMetadataItem", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the image.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The metadata item key, as a string. Maximum length is 255\ncharacters.", 
            "format": "", 
            "in": "path", 
            "name": "key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a metadata item, by key, for an image.", 
        "tags": [
          "compute_image_metadata-v2.1"
        ], 
        "x-title": "Delete image metadata item"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showImageMetadataItem", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the image.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The metadata item key, as a string. Maximum length is 255\ncharacters.", 
            "format": "", 
            "in": "path", 
            "name": "key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "meta": {
                  "architecture": "x86_64", 
                  "auto_disk_config": true, 
                  "kernel_id": "nokernel", 
                  "ramdisk_id": "nokernel"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a metadata item, by key, for an image.", 
        "tags": [
          "compute_image_metadata-v2.1"
        ], 
        "x-title": "Show image metadata item details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "setImageMetadataItem", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the image.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The metadata item key, as a string. Maximum length is 255\ncharacters.", 
            "format": "", 
            "in": "path", 
            "name": "key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "meta": {
                  "auto_disk_config": false
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates or updates a metadata item, by key, for an image.", 
        "tags": [
          "compute_image_metadata-v2.1"
        ], 
        "x-title": "Create or update image metadata item"
      }
    }, 
    "/v2.1/{tenant_id}/limits": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showlimits", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "limits": {
                  "absolute": {
                    "maxImageMeta": 128, 
                    "maxPersonality": 5, 
                    "maxPersonalitySize": 10240, 
                    "maxSecurityGroupRules": 20, 
                    "maxSecurityGroups": 10, 
                    "maxServerGroupMembers": 10, 
                    "maxServerGroups": 10, 
                    "maxServerMeta": 128, 
                    "maxTotalCores": 20, 
                    "maxTotalFloatingIps": 10, 
                    "maxTotalInstances": 10, 
                    "maxTotalKeypairs": 100, 
                    "maxTotalRAMSize": 51200, 
                    "totalCoresUsed": 1, 
                    "totalFloatingIpsUsed": 0, 
                    "totalInstancesUsed": 1, 
                    "totalRAMUsed": 2048, 
                    "totalSecurityGroupsUsed": 1, 
                    "totalServerGroupsUsed": 0
                  }, 
                  "rate": []
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows rate and absolute limits for the tenant.", 
        "tags": [
          "limits"
        ], 
        "x-title": "Show rate and absolute limits"
      }
    }, 
    "/v2.1/{tenant_id}/os-agents": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteBuild", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes an existing agent build.", 
        "tags": [
          "agents"
        ], 
        "x-title": "Delete agent build"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listbuilds", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "agents": [
                  {
                    "agent_id": 1, 
                    "architecture": "x86", 
                    "hypervisor": "hypervisor", 
                    "md5hash": "add6bb58e139be103324d04d82d8f545", 
                    "os": "os", 
                    "url": "http://example.com/path/to/resource", 
                    "version": "8.0"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists agent builds.", 
        "tags": [
          "agents"
        ], 
        "x-title": "List agent builds"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "agentbuild", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "201": {
            "description": "", 
            "examples": {
              "application/json": {
                "agent": {
                  "agent_id": 1, 
                  "architecture": "x86", 
                  "hypervisor": "hypervisor", 
                  "md5hash": "add6bb58e139be103324d04d82d8f545", 
                  "os": "os", 
                  "url": "http://example.com/path/to/resource", 
                  "version": "8.0"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates an agent build.", 
        "tags": [
          "agents"
        ], 
        "x-title": "Create agent build"
      }
    }, 
    "/v2.1/{tenant_id}/os-agents/{agent_build_id}": {
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updatebuild", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updatebuild"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the agent build.", 
            "format": "", 
            "in": "path", 
            "name": "agent_build_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "agent": {
                  "agent_id": "1", 
                  "md5hash": "add6bb58e139be103324d04d82d8f545", 
                  "url": "http://example.com/path/to/resource", 
                  "version": "7.0"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updatebuild_200"
            }
          }
        }, 
        "summary": "Updates an agent build.", 
        "tags": [
          "agents"
        ], 
        "x-title": "Update agent build"
      }
    }, 
    "/v2.1/{tenant_id}/os-aggregates": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listAggregates", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "aggregates": [
                  {
                    "availability_zone": "nova", 
                    "created_at": "2013-08-18T12:17:56.856455", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "hosts": [], 
                    "id": 1, 
                    "metadata": {
                      "availability_zone": "nova"
                    }, 
                    "name": "name", 
                    "updated_at": null
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists all aggregates. Includes the ID, name, and availability zone for each aggregate.", 
        "tags": [
          "aggregates"
        ], 
        "x-title": "List aggregates"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createAggregate", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2013-08-18T12:17:55.751757", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "id": 1, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates an aggregate in an availability zone.", 
        "tags": [
          "aggregates"
        ], 
        "x-title": "Create aggregate"
      }
    }, 
    "/v2.1/{tenant_id}/os-aggregates/{aggregate_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteAggregate", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The aggregate ID.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes an aggregate.", 
        "tags": [
          "aggregates"
        ], 
        "x-title": "Delete aggregate"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showAggregate", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The aggregate ID.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2013-08-18T12:17:56.380226", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova"
                  }, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for an aggregate. Details include hosts and metadata.", 
        "tags": [
          "aggregates"
        ], 
        "x-title": "Show aggregate details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateAggregate", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The aggregate ID.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova2", 
                  "created_at": "2013-08-18T12:17:56.259751", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova2"
                  }, 
                  "name": "newname", 
                  "updated_at": "2013-08-18T12:17:56.286720"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Updates either or both the name and availability zone for an aggregate.", 
        "tags": [
          "aggregates"
        ], 
        "x-title": "Update aggregate"
      }
    }, 
    "/v2.1/{tenant_id}/os-aggregates/{aggregate_id}/action": {
      "x-post-addAggregateMetadata": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``set_metadata`` action in the request body.", 
        "operationId": "addAggregateMetadata", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The aggregate ID.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2013-08-18T12:17:55.959571", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova", 
                    "key": "value"
                  }, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates or replaces metadata for an aggregate.", 
        "tags": [
          "aggregates"
        ], 
        "x-title": "Create or update aggregate metadata"
      }, 
      "x-post-addHost": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``add_host`` action in the request body.", 
        "operationId": "addHost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The aggregate ID.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2013-08-18T12:17:56.297823", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [
                    "21549b2f665945baaa7101926a00143c"
                  ], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova"
                  }, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds a host to an aggregate.", 
        "tags": [
          "aggregates"
        ], 
        "x-title": "Add host"
      }, 
      "x-post-removeAggregateHost": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``remove_host`` action in the request body.", 
        "operationId": "removeAggregateHost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The aggregate ID.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2013-08-18T12:17:56.990581", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova"
                  }, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Removes a host from an aggregate.", 
        "tags": [
          "aggregates"
        ], 
        "x-title": "Remove host"
      }
    }, 
    "/v2.1/{tenant_id}/os-assisted-volume-snapshots": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createsnapshots", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createsnapshots"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshot": {
                  "id": 100, 
                  "volume_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createsnapshots_200"
            }
          }
        }, 
        "summary": "Creates an assisted volume snapshot.", 
        "tags": [
          "os-assisted-volume-snapshots-v2.1"
        ], 
        "x-title": "Create assisted volume snapshots"
      }
    }, 
    "/v2.1/{tenant_id}/os-assisted-volume-snapshots/{snapshot_id}": {
      "delete": {
        "consumes": [], 
        "description": "To make this request, add the ``delete_info`` query parameter to\nthe URI, as follows:\n\n.. code-block:: json\n\n   DELETE /os-assisted-volume-snapshots?delete_info='{\"volume_id\": \"521752a6-acf6-4b2d-bc7a-119f9148cd8c\"}'", 
        "operationId": "deletesnapshots", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Information for snapshot deletion. Include the ID of the associated\nvolume. For example:\n\n.. code-block:: json\n\n   DELETE /os-assisted-volume-snapshots?delete_info='{\"volume_id\": \"521752a6-acf6-4b2d-bc7a-119f9148cd8c\"}'", 
            "format": "", 
            "in": "query", 
            "name": "delete_info", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes an assisted volume snapshot.", 
        "tags": [
          "os-assisted-volume-snapshots-v2.1"
        ], 
        "x-title": "Delete assisted volume snapshot"
      }
    }, 
    "/v2.1/{tenant_id}/os-availability-zone": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showAvailabilityZone", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "availabilityZoneInfo": [
                  {
                    "hosts": null, 
                    "zoneName": "nova", 
                    "zoneState": {
                      "available": true
                    }
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Gets availability zone information.", 
        "tags": [
          "availability-zone"
        ], 
        "x-title": "Get availability zone information"
      }
    }, 
    "/v2.1/{tenant_id}/os-availability-zone/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showAvailabilityZoneDetails", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "availabilityZoneInfo": [
                  {
                    "hosts": {
                      "test-host": {
                        "nova-cert": {
                          "active": true, 
                          "available": true, 
                          "updated_at": "2015-04-16T08:58:55.000000"
                        }, 
                        "nova-conductor": {
                          "active": true, 
                          "available": true, 
                          "updated_at": "2015-04-16T08:58:55.000000"
                        }, 
                        "nova-consoleauth": {
                          "active": true, 
                          "available": true, 
                          "updated_at": "2015-04-16T08:58:55.000000"
                        }, 
                        "nova-network": {
                          "active": true, 
                          "available": true, 
                          "updated_at": "2015-04-16T08:58:54.000000"
                        }, 
                        "nova-scheduler": {
                          "active": true, 
                          "available": true, 
                          "updated_at": "2015-04-16T08:58:55.000000"
                        }
                      }
                    }, 
                    "zoneName": "internal", 
                    "zoneState": {
                      "available": true
                    }
                  }, 
                  {
                    "hosts": {
                      "test-host": {
                        "nova-compute": {
                          "active": true, 
                          "available": true, 
                          "updated_at": "2015-04-16T08:58:56.000000"
                        }
                      }
                    }, 
                    "zoneName": "nova", 
                    "zoneState": {
                      "available": true
                    }
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Gets detailed availability zone information.", 
        "tags": [
          "availability-zone"
        ], 
        "x-title": "Get detailed availability zone information"
      }
    }, 
    "/v2.1/{tenant_id}/os-cells": {
      "x-get-listCells": {
        "consumes": [
          "application/json"
        ], 
        "description": "When cells are not enabled, the call returns the ``Not Implemented\n(501)`` response code.", 
        "operationId": "listCells", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cells": [
                  {
                    "name": "cell1", 
                    "rpc_host": null, 
                    "rpc_port": null, 
                    "type": "child", 
                    "username": "username1"
                  }, 
                  {
                    "name": "cell3", 
                    "rpc_host": null, 
                    "rpc_port": null, 
                    "type": "child", 
                    "username": "username3"
                  }, 
                  {
                    "name": "cell5", 
                    "rpc_host": null, 
                    "rpc_port": null, 
                    "type": "child", 
                    "username": "username5"
                  }, 
                  {
                    "name": "cell2", 
                    "rpc_host": null, 
                    "rpc_port": null, 
                    "type": "parent", 
                    "username": "username2"
                  }, 
                  {
                    "name": "cell4", 
                    "rpc_host": null, 
                    "rpc_port": null, 
                    "type": "parent", 
                    "username": "username4"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }, 
          "501": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists cells.", 
        "tags": [
          "cells"
        ], 
        "x-title": "List cells"
      }, 
      "x-get-listCellssDetail": {
        "consumes": [
          "application/json"
        ], 
        "description": "When cells are not enabled, the call returns the ``Not Implemented\n(501)`` response code.", 
        "operationId": "listCellssDetail", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cells": []
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }, 
          "501": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists cells with details.", 
        "tags": [
          "cells"
        ], 
        "x-title": "List cells with details"
      }
    }, 
    "/v2.1/{tenant_id}/os-cells/{cell_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "When cells are not enabled, the call returns the ``Not Implemented\n(501)`` response code.", 
        "operationId": "showCellData", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the cell.", 
            "format": "", 
            "in": "path", 
            "name": "cell_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cell": {
                  "name": "cell3", 
                  "rpc_host": null, 
                  "rpc_port": null, 
                  "type": "child", 
                  "username": "username3"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }, 
          "501": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows data for a cell.", 
        "tags": [
          "cells"
        ], 
        "x-title": "Show cell data"
      }
    }, 
    "/v2.1/{tenant_id}/os-cells/{cell_id}/capacities": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "When cells are not enabled, the call returns the ``Not Implemented\n(501)`` response code.", 
        "operationId": "showCellCapacities", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the cell.", 
            "format": "", 
            "in": "path", 
            "name": "cell_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cell": {
                  "capacities": {
                    "disk_free": {
                      "total_mb": 1052672, 
                      "units_by_mb": {
                        "0": 0, 
                        "163840": 5, 
                        "20480": 46, 
                        "40960": 23, 
                        "81920": 11
                      }
                    }, 
                    "ram_free": {
                      "total_mb": 7680, 
                      "units_by_mb": {
                        "16384": 0, 
                        "2048": 3, 
                        "4096": 1, 
                        "512": 13, 
                        "8192": 0
                      }
                    }
                  }
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "501": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows capacities for a cell.", 
        "tags": [
          "cells"
        ], 
        "x-title": "Show cell capacities"
      }
    }, 
    "/v2.1/{tenant_id}/os-certificates": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createCertificate", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "certificate": {
                  "data": "Certificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number: 1018 (0x3fa)\n    Signature Algorithm: md5WithRSAEncryption\n        Issuer: O=NOVA ROOT, L=Mountain View, ST=California, C=US\n        Validity\n            Not Before: Aug 12 07:20:30 2013 GMT\n            Not After : Aug 12 07:20:30 2014 GMT\n        Subject: C=US, ST=California, O=OpenStack, OU=NovaDev, CN=openstack-fake-2013-08-12T07:20:30Z\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (1024 bit)\n                Modulus:\n                    00:ac:ff:b1:d1:ed:54:4e:35:6c:34:b4:8f:0b:04:\n                    50:25:a3:e2:4f:02:4c:4f:26:59:bd:f3:fd:eb:da:\n                    18:c2:36:aa:63:42:72:1f:88:4f:3a:ec:e7:9f:8e:\n                    44:2a:d3:b8:94:7b:20:41:f8:48:02:57:91:4c:16:\n                    62:f1:21:d4:f2:40:b5:86:50:d9:61:f0:be:ff:d8:\n                    8d:9f:4b:aa:6a:07:38:a2:7f:87:21:fc:e6:6e:1d:\n                    0a:95:1a:90:0e:60:c2:24:e9:8e:e8:68:1b:e9:f3:\n                    c6:b0:7c:da:c5:20:66:9b:85:ea:f5:c9:a7:de:ee:\n                    16:b1:51:a0:4d:e3:95:98:df\n                Exponent: 65537 (0x10001)\n    Signature Algorithm: md5WithRSAEncryption\n         15:42:ca:71:cc:32:af:dc:cf:45:91:df:8a:b8:30:c4:7f:78:\n         80:a7:25:c2:d9:81:3e:b3:dd:22:cc:3b:f8:94:e7:8f:04:f6:\n         93:04:9e:85:d4:10:40:ff:5a:07:47:24:b5:ae:93:ad:8d:e1:\n         e6:54:4a:8d:4a:29:53:c4:8d:04:6b:0b:f6:af:38:78:02:c5:\n         05:19:89:82:2d:ba:fd:11:3c:1e:18:c9:0c:3d:03:93:6e:bc:\n         66:70:34:ee:03:78:8a:1d:3d:64:e8:20:2f:90:81:8e:49:1d:\n         07:37:15:66:42:cb:58:39:ad:56:ce:ed:47:c6:78:0b:0e:75:\n         29:ca\n-----BEGIN CERTIFICATE-----\nMIICNDCCAZ0CAgP6MA0GCSqGSIb3DQEBBAUAME4xEjAQBgNVBAoTCU5PVkEgUk9P\nVDEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzETMBEGA1UECBMKQ2FsaWZvcm5pYTEL\nMAkGA1UEBhMCVVMwHhcNMTMwODEyMDcyMDMwWhcNMTQwODEyMDcyMDMwWjB2MQsw\nCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTESMBAGA1UECgwJT3BlblN0\nYWNrMRAwDgYDVQQLDAdOb3ZhRGV2MSwwKgYDVQQDDCNvcGVuc3RhY2stZmFrZS0y\nMDEzLTA4LTEyVDA3OjIwOjMwWjCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA\nrP+x0e1UTjVsNLSPCwRQJaPiTwJMTyZZvfP969oYwjaqY0JyH4hPOuznn45EKtO4\nlHsgQfhIAleRTBZi8SHU8kC1hlDZYfC+/9iNn0uqagc4on+HIfzmbh0KlRqQDmDC\nJOmO6Ggb6fPGsHzaxSBmm4Xq9cmn3u4WsVGgTeOVmN8CAwEAATANBgkqhkiG9w0B\nAQQFAAOBgQAVQspxzDKv2.1M9Fkd+KuDDEf3iApyXC2YE+s90izDv4lOePBPaTBJ6F\n1BBA/1oHRyS1rpOtjeHmVEqNSilTxI0Eawv2rzh4AsUFGYmCLbr9ETweGMkMPQOT\nbrxmcDTuA3iKHT1k6CAvkIGOSR0HNxVmQstYOa1Wzu1HxngLDnUpyg==\n-----END CERTIFICATE-----\n", 
                  "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIICXgIBAAKBgQCs/7HR7VRONWw0tI8LBFAlo+JPAkxPJlm98/3r2hjCNqpjQnIf\niE867OefjkQq07iUeyBB+EgCV5FMFmLxIdTyQLWGUNlh8L7/2I2fS6pqBziif4ch\n/OZuHQqVGpAOYMIk6Y7oaBvp88awfNrFIGabher1yafe7haxUaBN45WY3wIDAQAB\nAoGBAIrcr2I/KyWf0hw4Nn10V9TuyE/9Gz2JHg3QFKjFJox2DqygADT5WAeHc6Bq\nNKNf0NA2SL1LSpm+ql01tvOw4VjE5TF6OHiIzHuTTnXggG6vuA8rxp6L24HtkAcC\n0CBno9ggSX6jVornJPBfxpkwITYSvH57BUFVD7ovbPyWGzS5AkEA1JeUtL6zxwps\nWRr1aJ8Ill2uQk/RUIvSZOU61s+B190zvHikFy8LD8CI6vvBmjC/IZuZVedufjqs\n4vX82uDO3QJBANBSh2b2dyB4AGVFY9vXMRtALAspJHbLHy+zTKxlGPFiuz7Se3ps\n8Kehz4C/CBXgQkk194dwFSGE19/PQfyJROsCQQCFFDJZhrtBUMwMZ2zSRiN5BUGt\nbwuncS+OS1Su3Yz5VRYq2BZYEPHKtYrAFkLWQ8eRwTaWaN5pFE/fb38OgQXdAkA4\nDm0W/K0zlHbuyUxEpNQ28/6mBi0ktiWvLT0tioq6sYmXLwZA/D2JrhXrG/xt/ol3\nr8jqrfNRsLByLhAgh0N/AkEAl2eR0O97lTEgFNqzIQwVmIAn9mBO3cnf3tycvlDU\nm6eb2CS242y4QalfCCAEjxoJURdfsm3/D1iFo00X+IWF+A==\n-----END RSA PRIVATE KEY-----\n"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a certificate.", 
        "tags": [
          "certificates"
        ], 
        "x-title": "Create certificate"
      }
    }, 
    "/v2.1/{tenant_id}/os-certificates/{certificate_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showCertificate", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The certificate ID, as a string. The only valid value is ``root``.", 
            "format": "", 
            "in": "path", 
            "name": "certificate_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "certificate": {
                  "data": "-----BEGIN CERTIFICATE-----\nMIICyzCCAjSgAwIBAgIJAJ8zSIxUp/m4MA0GCSqGSIb3DQEBBAUAME4xEjAQBgNV\nBAoTCU5PVkEgUk9PVDEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzETMBEGA1UECBMK\nQ2FsaWZvcm5pYTELMAkGA1UEBhMCVVMwHhcNMTIxMDE3MDEzMzM5WhcNMTMxMDE3\nMDEzMzM5WjBOMRIwEAYDVQQKEwlOT1ZBIFJPT1QxFjAUBgNVBAcTDU1vdW50YWlu\nIFZpZXcxEzARBgNVBAgTCkNhbGlmb3JuaWExCzAJBgNVBAYTAlVTMIGfMA0GCSqG\nSIb3DQEBAQUAA4GNADCBiQKBgQDXW4QfQQxJG4MqurqK8nU/Lge0mfNKxXj/Gwvg\n2sQVwxzmKfoxih8Nn6yt0yHMNjhoji1UoWI03TXUnPZRAZmsypGKZeBd7Y1ZOCPB\nXGZVGrQm+PB2kZU+3cD8fVKcueMLLeZ+LRt5d0njnoKhc5xjqMlfFPimHMba4OL6\nTnYzPQIDAQABo4GwMIGtMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYEFKyoKu4SMOFM\ngx5Ec7p0nrCkabvxMH4GA1UdIwR3MHWAFKyoKu4SMOFMgx5Ec7p0nrCkabvxoVKk\nUDBOMRIwEAYDVQQKEwlOT1ZBIFJPT1QxFjAUBgNVBAcTDU1vdW50YWluIFZpZXcx\nEzARBgNVBAgTCkNhbGlmb3JuaWExCzAJBgNVBAYTAlVTggkAnzNIjFSn+bgwDQYJ\nKoZIhvcNAQEEBQADgYEAXuvXlu1o/SVvykSLhHW8QiAY00yzN/eDzYmZGomgiuoO\n/x+ayVzbrz1UWZnBD+lC4hll2iELSmf22LjLoF+s/9NyPqHxGL3FrfatBkndaiF8\nAx/TMEyCPl7IQWi+3zzatqOKHSHiG7a9SGn/7o2aNTIWKVulfy5GvmbBjBM/0UE=\n-----END CERTIFICATE-----\n", 
                  "private_key": null
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a certificate.", 
        "tags": [
          "certificates"
        ], 
        "x-title": "Show certificate details"
      }
    }, 
    "/v2.1/{tenant_id}/os-cloudpipe": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listCloudpipes", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cloudpipes": [
                  {
                    "created_at": "2012-11-27T17:18:01Z", 
                    "instance_id": "27deecdb-baa3-4a26-9c82-32994b815b01", 
                    "internal_ip": "192.168.0.3", 
                    "project_id": "fa1765bd-a352-49c7-a6b7-8ee108a3cb0c", 
                    "public_ip": "127.0.0.1", 
                    "public_port": 22, 
                    "state": "down"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists cloudpipes.", 
        "tags": [
          "os-cloudpipe-v2.1"
        ], 
        "x-title": "List cloudpipes"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createCloudpipe", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createCloudpipe"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "instance_id": "1e9b8425-34af-488e-b969-4d46f4a6382e"
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a cloudpipe.", 
        "tags": [
          "os-cloudpipe-v2.1"
        ], 
        "x-title": "Create cloudpipe"
      }
    }, 
    "/v2.1/{tenant_id}/os-cloudpipe/configure-project": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateCloudpipe", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateCloudpipe"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Updates the virtual private network (VPN) IP address and port for a cloudpipe instance.", 
        "tags": [
          "os-cloudpipe-v2.1"
        ], 
        "x-title": "Update cloudpipe"
      }
    }, 
    "/v2.1/{tenant_id}/os-extended-services/{service_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the service by its host name and binary name.", 
        "operationId": "deleteRetiredService", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/deleteRetiredService"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the service.", 
            "format": "", 
            "in": "path", 
            "name": "service_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a retired service.", 
        "tags": [
          "services"
        ], 
        "x-title": "Delete retired service"
      }
    }, 
    "/v2.1/{tenant_id}/os-fixed-ips/{fixed_ip}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showIP", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The fixed IP of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "fixed_ip", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "fixed_ip": {
                  "address": "192.168.1.1", 
                  "cidr": "192.168.1.0/24", 
                  "host": "host", 
                  "hostname": "openstack"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a fixed IP address.", 
        "tags": [
          "os-fixed-ips-v2.1"
        ], 
        "x-title": "Show fixed IP details"
      }
    }, 
    "/v2.1/{tenant_id}/os-fixed-ips/{fixed_ip}/action": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "To reserve a fixed IP address, specify ``reserve`` in the request\nbody. To release a fixed IP address, specify ``unreserve`` in the\nrequest body.", 
        "operationId": "reserveIP", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The fixed IP of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "fixed_ip", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Reserves or releases a fixed IP.", 
        "tags": [
          "os-fixed-ips-v2.1"
        ], 
        "x-title": "Reserve or release a fixed IP"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ip-dns": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "ListDomains", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "domain_entries": [
                  {
                    "availability_zone": null, 
                    "domain": "domain1.example.org", 
                    "project": "project1", 
                    "scope": "public"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists registered DNS domains published by the DNS drivers.", 
        "tags": [
          "floating-ip-dns"
        ], 
        "x-title": "List DNS domains"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ip-dns/{domain}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "DeleteDomain", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The registered DNS domain that the DNS drivers publish.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a DNS domain and all associated host entries.", 
        "tags": [
          "floating-ip-dns"
        ], 
        "x-title": "Delete DNS domain"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "CreateDomain", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The registered DNS domain that the DNS drivers publish.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "domain_entry": {
                  "availability_zone": null, 
                  "domain": "domain1.example.org", 
                  "project": "project1", 
                  "scope": "public"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates or updates a DNS domain.", 
        "tags": [
          "floating-ip-dns"
        ], 
        "x-title": "Create or update DNS domain"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ip-dns/{domain}/entries/{ip}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "FindEntriesbyIP", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The registered DNS domain that the DNS drivers publish.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The IP address.", 
            "format": "", 
            "in": "path", 
            "name": "ip", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "dns_entries": [
                  {
                    "domain": "domain1.example.org", 
                    "id": null, 
                    "ip": "192.168.1.1", 
                    "name": "instance1", 
                    "type": null
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists DNS entries for a domain and IP.", 
        "tags": [
          "floating-ip-dns"
        ], 
        "x-title": "List DNS entries"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ip-dns/{domain}/entries/{name}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "DeleteEntry", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the DNS entry.", 
            "format": "", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The registered DNS domain that the DNS drivers publish.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a DNS entry.", 
        "tags": [
          "floating-ip-dns"
        ], 
        "x-title": "Delete DNS entry"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "FindUniqueEntry", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the DNS entry.", 
            "format": "", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The registered DNS domain that the DNS drivers publish.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "dns_entry": {
                  "domain": "domain1.example.org", 
                  "id": null, 
                  "ip": "192.168.1.1", 
                  "name": "instance1", 
                  "type": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Finds a unique DNS entry for a domain and name.", 
        "tags": [
          "floating-ip-dns"
        ], 
        "x-title": "Find unique DNS entry"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "CreateEntry", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the DNS entry.", 
            "format": "", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The registered DNS domain that the DNS drivers publish.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "dns_entry": {
                  "domain": "domain1.example.org", 
                  "id": null, 
                  "ip": "192.168.1.1", 
                  "name": "instance1", 
                  "type": "A"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates or updates a DNS entry.", 
        "tags": [
          "floating-ip-dns"
        ], 
        "x-title": "Create or update DNS entry"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ip-pools": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "listFloatingIpPools", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "floating_ip_pools": [
                  {
                    "name": "pool1"
                  }, 
                  {
                    "name": "pool2"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listFloatingIpPools_200"
            }
          }
        }, 
        "summary": "Lists floating IP pools.", 
        "tags": [
          "floating-ip-pools"
        ], 
        "x-title": "List floating IP pools"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ips": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "listfloatingipsObject", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "floatingips": [
                  {
                    "fixed_ip_address": "10.0.0.3", 
                    "floating_ip_address": "172.24.4.228", 
                    "floating_network_id": "376da547-b977-4cfe-9cba-275c80debf57", 
                    "id": "2f245a7b-796b-4f26-9cf9-9e82d248fda7", 
                    "port_id": "ce705c24-c1ef-408a-bda3-7bbd946164ab", 
                    "router_id": "d23abc8d-2991-4a55-ba98-2aaea84cc72f", 
                    "status": "ACTIVE", 
                    "tenant_id": "4969c491a3c74ee4af974e6d800c62de"
                  }, 
                  {
                    "fixed_ip_address": null, 
                    "floating_ip_address": "172.24.4.227", 
                    "floating_network_id": "376da547-b977-4cfe-9cba-275c80debf57", 
                    "id": "61cea855-49cb-4846-997d-801b70c71bdd", 
                    "port_id": null, 
                    "router_id": null, 
                    "status": "DOWN", 
                    "tenant_id": "4969c491a3c74ee4af974e6d800c62de"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists floating IP addresses associated with the tenant or account.", 
        "tags": [
          "floating-ips"
        ], 
        "x-title": "List floating IP addresses"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "If more than one floating IP address pool is available, use the\n``pool`` parameter to specify from which pool to allocate the IP\naddress.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "createFloatingIP", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createFloatingIP"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "floating_ip": {
                  "fixed_ip": null, 
                  "id": "c9c04158-3ed4-449c-953a-aa21fb47cde7", 
                  "instance_id": null, 
                  "ip": "172.24.4.4", 
                  "pool": "public"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates, or allocates, a floating IP address for the current project. By default, the floating IP address is allocated from the public pool.", 
        "tags": [
          "floating-ips"
        ], 
        "x-title": "Create (allocate) floating IP address"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ips-bulk": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "ListfloatingipsObjectBulk", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "floating_ip_info": [
                  {
                    "address": "10.10.10.1", 
                    "fixed_ip": null, 
                    "instance_uuid": null, 
                    "interface": "eth0", 
                    "pool": "nova", 
                    "project_id": null
                  }, 
                  {
                    "address": "10.10.10.2", 
                    "fixed_ip": null, 
                    "instance_uuid": null, 
                    "interface": "eth0", 
                    "pool": "nova", 
                    "project_id": null
                  }, 
                  {
                    "address": "10.10.10.3", 
                    "fixed_ip": null, 
                    "instance_uuid": null, 
                    "interface": "eth0", 
                    "pool": "nova", 
                    "project_id": null
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all floating IPs.", 
        "tags": [
          "floating-ips-bulk"
        ], 
        "x-title": "List floating IPs"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "CreatefloatingipsObjectBulk", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/CreatefloatingipsObjectBulk"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "floating_ips_bulk_create": {
                  "interface": "eth0", 
                  "ip_range": "192.168.1.0/24", 
                  "pool": "nova"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Bulk-creates floating IPs.", 
        "tags": [
          "floating-ips-bulk"
        ], 
        "x-title": "Create floating IPs"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ips-bulk/delete": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "DeleteFloatingIPBulk", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/DeleteFloatingIPBulk"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "floating_ips_bulk_delete": "192.168.1.0/24"
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Bulk-deletes floating IPs.", 
        "tags": [
          "floating-ips-bulk"
        ], 
        "x-title": "Bulk-delete floating IPs"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ips-bulk/{host_name}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "ListfloatingipsObjectBulkbyHost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the host.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "floating_ip_info": [
                  {
                    "address": "10.10.10.3", 
                    "fixed_ip": null, 
                    "instance_uuid": null, 
                    "interface": "eth0", 
                    "pool": "nova", 
                    "project_id": null
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all floating IPs for a host.", 
        "tags": [
          "floating-ips-bulk"
        ], 
        "x-title": "List floating IPs by host"
      }
    }, 
    "/v2.1/{tenant_id}/os-floating-ips/{floating_ip_id}": {
      "delete": {
        "consumes": [], 
        "description": "If the IP address is still associated with a running instance, it\nis automatically disassociated from that instance.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "deleteFloatingIP", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the floating IP address.", 
            "format": "", 
            "in": "path", 
            "name": "floating_ip_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes, or deallocates, a floating IP address from the current project and returns it to the pool from which it was allocated.", 
        "tags": [
          "floating-ips"
        ], 
        "x-title": "Delete (deallocate) floating IP address"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "showFloatingIP", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the floating IP address.", 
            "format": "", 
            "in": "path", 
            "name": "floating_ip_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "floating_ip": {
                  "fixed_ip": null, 
                  "id": "b310fff3-c467-4950-9b00-038afebd151c", 
                  "instance_id": null, 
                  "ip": "172.24.4.3", 
                  "pool": "public"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a floating IP address, by ID, that is associated with the tenant or account.", 
        "tags": [
          "floating-ips"
        ], 
        "x-title": "Show floating IP address details"
      }
    }, 
    "/v2.1/{tenant_id}/os-fping": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``all_tenants=1`` query parameter to ping instances for\nall tenants. For example:\n\n.. code-block:: json\n\n   GET /os-fping?all_tenants=1\n\nSpecify the ``include`` and ``exclude`` query parameters to filter\nthe results. For example:\n\n.. code-block:: json\n\n   GET /os-fping?all_tenants=1\n   &\n   include=uuid1,uuid2\n   &\n   exclude=uuid3,uuid4\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "list-fping", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Specify the ``all_tenants=1`` query parameter to ping instances for\nall tenants.", 
            "format": "", 
            "in": "query", 
            "name": "all_tenants", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Specify ``include=uuid[,uuid...]`` to include the instances in the\nresults.", 
            "format": "", 
            "in": "query", 
            "name": "include", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Specify ``exclude=uuid[,uuid...]`` to exclude the instances from\nthe results.", 
            "format": "", 
            "in": "query", 
            "name": "exclude", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "alive": false, 
                    "id": "1d1aea35-472b-40cf-9337-8eb68480aaa1", 
                    "project_id": "openstack"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Run the fping utility to ping instances and report which ones are alive.", 
        "tags": [
          "fping"
        ], 
        "x-title": "Ping instances"
      }
    }, 
    "/v2.1/{tenant_id}/os-fping/{instance_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "show-fping", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the instance.", 
            "format": "", 
            "in": "path", 
            "name": "instance_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "server": {
                  "alive": false, 
                  "id": "f5e6fd6d-c0a3-4f9e-aabf-d69196b6d11a", 
                  "project_id": "openstack"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Run the fping utility to ping an instance and report whether it is alive.", 
        "tags": [
          "fping"
        ], 
        "x-title": "Ping an instance"
      }
    }, 
    "/v2.1/{tenant_id}/os-hosts": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listallhosts", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "hosts": [
                  {
                    "host_name": "b6e4adbc193d428ea923899d07fb001e", 
                    "service": "conductor", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "09c025b0efc64211bd23fc50fa974cdf", 
                    "service": "compute", 
                    "zone": "nova"
                  }, 
                  {
                    "host_name": "a942ebfa00064d9d89a9e5a175cb9ba8", 
                    "service": "cert", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "e73ec0bd35c64de4a1adfa8b8969a1f6", 
                    "service": "consoleauth", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "396a8a0a234f476eb05fb9fbc5802ba7", 
                    "service": "network", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "abffda96592c4eacaf4111c28fddee17", 
                    "service": "scheduler", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "a8820f04962a4b4ba9fe2e9540c24094", 
                    "service": "cells", 
                    "zone": "internal"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists hosts.", 
        "tags": [
          "hosts"
        ], 
        "x-title": "List hosts"
      }
    }, 
    "/v2.1/{tenant_id}/os-hosts/{host_name}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showinfo", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the host.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "host": [
                  {
                    "resource": {
                      "cpu": 1, 
                      "disk_gb": 1028, 
                      "host": "c1a7de0ac9d94e4baceae031d05caae3", 
                      "memory_mb": 8192, 
                      "project": "(total)"
                    }
                  }, 
                  {
                    "resource": {
                      "cpu": 0, 
                      "disk_gb": 0, 
                      "host": "c1a7de0ac9d94e4baceae031d05caae3", 
                      "memory_mb": 512, 
                      "project": "(used_now)"
                    }
                  }, 
                  {
                    "resource": {
                      "cpu": 0, 
                      "disk_gb": 0, 
                      "host": "c1a7de0ac9d94e4baceae031d05caae3", 
                      "memory_mb": 0, 
                      "project": "(used_max)"
                    }
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a host.", 
        "tags": [
          "hosts"
        ], 
        "x-title": "Show host details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "enablehost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the host.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "host": "65c5d5b7e3bd44308e67fc50f362aee6", 
                "maintenance_mode": "off_maintenance", 
                "status": "enabled"
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Enables or puts a host in maintenance mode.", 
        "tags": [
          "hosts"
        ], 
        "x-title": "Enable host"
      }
    }, 
    "/v2.1/{tenant_id}/os-hosts/{host_name}/reboot": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "reboothost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the host.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "host": "9557750dbc464741a89c907921c1cb31", 
                "power_action": "reboot"
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Reboots a host.", 
        "tags": [
          "hosts"
        ], 
        "x-title": "Reboot host"
      }
    }, 
    "/v2.1/{tenant_id}/os-hosts/{host_name}/shutdown": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "shutdownhost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the host.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "host": "77cfa0002e4d45fe97f185968111b27b", 
                "power_action": "shutdown"
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shuts down a host.", 
        "tags": [
          "hosts"
        ], 
        "x-title": "Shut down host"
      }
    }, 
    "/v2.1/{tenant_id}/os-hosts/{host_name}/startup": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "startshost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The name of the host.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "host": "4b392b27930343bbaa27fd5d8328a564", 
                "power_action": "startup"
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Starts a host.", 
        "tags": [
          "hosts"
        ], 
        "x-title": "Start host"
      }
    }, 
    "/v2.1/{tenant_id}/os-hypervisors": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listHypervisors", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "hypervisors": [
                  {
                    "hypervisor_hostname": "fake-mini", 
                    "id": 1, 
                    "state": "up", 
                    "status": "enabled"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists hypervisors.", 
        "tags": [
          "hypervisors"
        ], 
        "x-title": "List hypervisors"
      }
    }, 
    "/v2.1/{tenant_id}/os-hypervisors/statistics": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showHypervisorStatistics", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "hypervisor_statistics": {
                  "count": 1, 
                  "current_workload": 0, 
                  "disk_available_least": 140, 
                  "free_disk_gb": 157, 
                  "free_ram_mb": 7468, 
                  "local_gb": 157, 
                  "local_gb_used": 0, 
                  "memory_mb": 7980, 
                  "memory_mb_used": 512, 
                  "running_vms": 0, 
                  "vcpus": 8, 
                  "vcpus_used": 0
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows summary statistics for all hypervisors over all compute nodes.", 
        "tags": [
          "hypervisors"
        ], 
        "x-title": "Show hypervisor statistics"
      }
    }, 
    "/v2.1/{tenant_id}/os-hypervisors/{hypervisor_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showHypervisor", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the hypervisor.", 
            "format": "", 
            "in": "path", 
            "name": "hypervisor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "hypervisor": {
                  "cpu_info": "{\"vendor\": \"Intel\", \"model\": \"gate64\", \"arch\": \"x86_64\", \"features\": [\"pge\", \"clflush\", \"sep\", \"syscall\", \"vme\", \"msr\", \"cmov\", \"fpu\", \"pat\", \"lm\", \"tsc\", \"nx\", \"fxsr\", \"sse4.1\", \"pae\", \"sse4.2\", \"pclmuldq\", \"tsc-deadline\", \"mmx\", \"cx8\", \"mce\", \"de\", \"rdtscp\", \"mca\", \"pse\", \"pni\", \"popcnt\", \"apic\", \"sse\", \"lahf_lm\", \"aes\", \"sse2\", \"hypervisor\", \"ssse3\", \"cx16\", \"mtrr\", \"x2apic\"], \"topology\": {\"cores\": 1, \"cells\": 1, \"threads\": 1, \"sockets\": 8}}", 
                  "current_workload": 0, 
                  "disk_available_least": 140, 
                  "free_disk_gb": 157, 
                  "free_ram_mb": 7468, 
                  "host_ip": "23.253.248.171", 
                  "hypervisor_hostname": "fake-mini", 
                  "hypervisor_type": "QEMU", 
                  "hypervisor_version": 2000000, 
                  "id": 1, 
                  "local_gb": 157, 
                  "local_gb_used": 0, 
                  "memory_mb": 7980, 
                  "memory_mb_used": 512, 
                  "running_vms": 0, 
                  "service": {
                    "disabled_reason": null, 
                    "host": "fake-mini", 
                    "id": 6
                  }, 
                  "state": "up", 
                  "status": "enabled", 
                  "vcpus": 8, 
                  "vcpus_used": 0
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a hypervisor.", 
        "tags": [
          "hypervisors"
        ], 
        "x-title": "Show hypervisor details"
      }
    }, 
    "/v2.1/{tenant_id}/os-hypervisors/{hypervisor_id}/uptime": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showHypervisorUptime", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the hypervisor.", 
            "format": "", 
            "in": "path", 
            "name": "hypervisor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "hypervisor": {
                  "hypervisor_hostname": "fake-mini", 
                  "id": 1, 
                  "state": "up", 
                  "status": "enabled", 
                  "uptime": " 16:09:43 up 8 days, 19:58,  1 user,  load average: 0.86, 0.63, 0.55\n"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows the uptime for a hypervisor.", 
        "tags": [
          "hypervisors"
        ], 
        "x-title": "Show hypervisor uptime"
      }
    }, 
    "/v2.1/{tenant_id}/os-instance_usage_audit_log": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listusageaudits", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "instance_usage_audit_logs": {
                  "hosts_not_run": [
                    "f4eb7cfd155f4574967f8b55a7faed75"
                  ], 
                  "log": {}, 
                  "num_hosts": 1, 
                  "num_hosts_done": 0, 
                  "num_hosts_not_run": 1, 
                  "num_hosts_running": 0, 
                  "overall_status": "0 of 1 hosts done. 0 errors.", 
                  "period_beginning": "2012-12-01 00:00:00", 
                  "period_ending": "2013-01-01 00:00:00", 
                  "total_errors": 0, 
                  "total_instances": 0
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists usage audits for an instance.", 
        "tags": [
          "instance-usage-audit-log"
        ], 
        "x-title": "List usage audits for an instance"
      }
    }, 
    "/v2.1/{tenant_id}/os-instance_usage_audit_log/{before_timestamp}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listinstanceusage", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by the date and time before which to list\nusage audits.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nThe ``\u00b1hh:mm`` value, if included, returns the time zone as an\noffset from UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nIf you omit the time zone, the UTC time zone is assumed.", 
            "format": "", 
            "in": "query", 
            "name": "before_timestamp", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "instance_usage_audit_log": {
                  "hosts_not_run": [
                    "8e33da2b48684ef3ab165444d6a7384c"
                  ], 
                  "log": {}, 
                  "num_hosts": 1, 
                  "num_hosts_done": 0, 
                  "num_hosts_not_run": 1, 
                  "num_hosts_running": 0, 
                  "overall_status": "0 of 1 hosts done. 0 errors.", 
                  "period_beginning": "2012-06-01 00:00:00", 
                  "period_ending": "2012-07-01 00:00:00", 
                  "total_errors": 0, 
                  "total_instances": 0
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists usage audits that occurred before a specified time.", 
        "tags": [
          "instance-usage-audit-log"
        ], 
        "x-title": "List usage audits before specified time"
      }
    }, 
    "/v2.1/{tenant_id}/os-keypairs": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listKeypairs", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "keypairs": [
                  {
                    "keypair": {
                      "fingerprint": "7e:eb:ab:24:ba:d1:e1:88:ae:9a:fb:66:53:df:d3:bd", 
                      "name": "keypair-50ca852e-273f-4cdc-8949-45feba200837", 
                      "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkF3MX59OrlBs3dH5CU7lNmvpbrgZxSpyGjlnE8Flkirnc/Up22lpjznoxqeoTAwTW034k7Dz6aYIrZGmQwe2TkE084yqvlj45Dkyoj95fW/sZacm0cZNuL69EObEGHdprfGJQajrpz22NQoCD8TFB8Wv+8om9NH9Le6s+WPe98WC77KLw8qgfQsbIey+JawPWl4O67ZdL5xrypuRjfIPWjgy/VH85IXg/Z/GONZ2nxHgSShMkwqSFECAC5L3PHB+0+/12M/iikdatFSVGjpuHvkLOs3oe7m6HlOfluSJ85BzLWBbvva93qkGmLg4ZAc8rPh2O+YIsBUHNLLMM/oQp Generated-by-Nova\n"
                    }
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists keypairs that are associated with the account.", 
        "tags": [
          "keypairs"
        ], 
        "x-title": "List keypairs"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createKeypair", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createKeypair"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "keypair": {
                  "fingerprint": "1e:2c:9b:56:79:4b:45:77:f9:ca:7a:98:2c:b0:d5:3c", 
                  "name": "keypair-803a1926-af78-4b05-902a-1d6f7a8d9d3e", 
                  "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDx8nkQv/zgGgB4rMYmIf+6A4l6Rr+o/6lHBQdW5aYd44bd8JttDCE/F/pNRr0lRE+PiqSPO8nDPHw0010JeMH9gYgnnFlyY3/OcJ02RhIPyyxYpv9FhY+2YiUkpwFOcLImyrxEsYXpD/0d3ac30bNH6Sw9JD9UZHYcpSxsIbECHw== Generated-by-Nova", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Generates or imports a keypair.", 
        "tags": [
          "keypairs"
        ], 
        "x-title": "Create or import keypair"
      }
    }, 
    "/v2.1/{tenant_id}/os-keypairs/{keypair_name}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteKeypair", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The keypair name.", 
            "format": "", 
            "in": "path", 
            "name": "keypair_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a keypair.", 
        "tags": [
          "keypairs"
        ], 
        "x-title": "Delete keypair"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showKeypair", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The keypair name.", 
            "format": "", 
            "in": "path", 
            "name": "keypair_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "keypair": {
                  "created_at": "2014-05-07T12:06:13.681238", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "fingerprint": "44:fe:29:6e:23:14:b9:53:5b:65:82:58:1c:fe:5a:c3", 
                  "id": 1, 
                  "name": "keypair-6638abdb-c4e8-407c-ba88-c8dd7cc3c4f1", 
                  "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1HTrHCbb9NawNLSV8N6tSa8i637+EC2dA+lsdHHfQlT54t+N0nHhJPlKWDLhc579j87vp6RDFriFJ/smsTnDnf64O12z0kBaJpJPH2zXrBkZFK6q2rmxydURzX/z0yLSCP77SFJ0fdXWH2hMsAusflGyryHGX20n+mZK6mDrxVzGxEz228dwQ5G7Az5OoZDWygH2pqPvKjkifRw0jwUKf3BbkP0QvANACOk26cv16mNFpFJfI1N3OC5lUsZQtKGR01ptJoWijYKccqhkAKuo902tg/qup58J5kflNm7I61sy1mJon6SGqNUSfoQagqtBH6vd/tU1jnlwZ03uUroAL Generated-by-Nova\n", 
                  "updated_at": null, 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a keypair that is associated with the account.", 
        "tags": [
          "keypairs"
        ], 
        "x-title": "Show keypair details"
      }
    }, 
    "/v2.1/{tenant_id}/os-migrations": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "listMigrations", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "migrations": [
                  {
                    "created_at": "2012-10-29T13:42:02.000000", 
                    "dest_compute": "compute2", 
                    "dest_host": "192.0.2.0", 
                    "dest_node": "node2", 
                    "id": 1234, 
                    "instance_uuid": "instance_id_123", 
                    "new_instance_type_id": 2, 
                    "old_instance_type_id": 1, 
                    "source_compute": "compute1", 
                    "source_node": "node1", 
                    "status": "Done", 
                    "updated_at": "2012-10-29T13:42:02.000000"
                  }, 
                  {
                    "created_at": "2013-10-22T13:42:02.000000", 
                    "dest_compute": "compute20", 
                    "dest_host": "5.6.7.8", 
                    "dest_node": "node20", 
                    "id": 5678, 
                    "instance_uuid": "instance_id_456", 
                    "new_instance_type_id": 6, 
                    "old_instance_type_id": 5, 
                    "source_compute": "compute10", 
                    "source_node": "node10", 
                    "status": "Done", 
                    "updated_at": "2013-10-22T13:42:02.000000"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists in-progress migrations.", 
        "tags": [
          "migrations"
        ], 
        "x-title": "List migrations"
      }
    }, 
    "/v2.1/{tenant_id}/os-networks": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable all users to perform this operation. Cloud\nproviders can change these permissions through the ``policy.json``\nfile.", 
        "operationId": "listNetworks", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "networks": [
                  {
                    "bridge": "br100", 
                    "bridge_interface": "eth0", 
                    "broadcast": "10.0.0.7", 
                    "cidr": "10.0.0.0/29", 
                    "cidr_v6": null, 
                    "created_at": "2011-08-15T06:19:19.387525", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "dhcp_server": "10.0.0.1", 
                    "dhcp_start": "10.0.0.3", 
                    "dns1": null, 
                    "dns2": null, 
                    "enable_dhcp": true, 
                    "gateway": "10.0.0.1", 
                    "gateway_v6": null, 
                    "host": "nsokolov-desktop", 
                    "id": "20c8acc0-f747-4d71-a389-46d078ebf047", 
                    "injected": false, 
                    "label": "mynet_0", 
                    "mtu": null, 
                    "multi_host": false, 
                    "netmask": "255.255.255.248", 
                    "netmask_v6": null, 
                    "priority": null, 
                    "project_id": "1234", 
                    "rxtx_base": null, 
                    "share_address": false, 
                    "updated_at": "2011-08-16T09:26:13.048257", 
                    "vlan": 100, 
                    "vpn_private_address": "10.0.0.2", 
                    "vpn_public_address": "127.0.0.1", 
                    "vpn_public_port": 1000
                  }, 
                  {
                    "bridge": "br101", 
                    "bridge_interface": "eth0", 
                    "broadcast": "10.0.0.15", 
                    "cidr": "10.0.0.10/29", 
                    "cidr_v6": null, 
                    "created_at": "2011-08-15T06:19:19.885495", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "dhcp_server": "10.0.0.9", 
                    "dhcp_start": "10.0.0.11", 
                    "dns1": null, 
                    "dns2": null, 
                    "enable_dhcp": true, 
                    "gateway": "10.0.0.9", 
                    "gateway_v6": null, 
                    "host": null, 
                    "id": "20c8acc0-f747-4d71-a389-46d078ebf000", 
                    "injected": false, 
                    "label": "mynet_1", 
                    "mtu": null, 
                    "multi_host": false, 
                    "netmask": "255.255.255.248", 
                    "netmask_v6": null, 
                    "priority": null, 
                    "project_id": null, 
                    "rxtx_base": null, 
                    "share_address": false, 
                    "updated_at": null, 
                    "vlan": 101, 
                    "vpn_private_address": "10.0.0.10", 
                    "vpn_public_address": null, 
                    "vpn_public_port": 1001
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists networks for the project.", 
        "tags": [
          "networks"
        ], 
        "x-title": "List networks"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "createNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "network": {
                  "bridge": null, 
                  "bridge_interface": null, 
                  "broadcast": "10.20.105.255", 
                  "cidr": "10.20.105.0/24", 
                  "cidr_v6": null, 
                  "created_at": null, 
                  "deleted": null, 
                  "deleted_at": null, 
                  "dhcp_server": "10.20.105.2", 
                  "dhcp_start": "10.20.105.2", 
                  "dns1": null, 
                  "dns2": null, 
                  "enable_dhcp": false, 
                  "gateway": "10.20.105.1", 
                  "gateway_v6": null, 
                  "host": null, 
                  "id": "d7a17c0c-457e-4ab4-a99c-4fa1762f5359", 
                  "injected": null, 
                  "label": "new net 111", 
                  "mtu": 9000, 
                  "multi_host": null, 
                  "netmask": "255.255.255.0", 
                  "netmask_v6": null, 
                  "priority": null, 
                  "project_id": null, 
                  "rxtx_base": null, 
                  "share_address": true, 
                  "updated_at": null, 
                  "vlan": null, 
                  "vpn_private_address": null, 
                  "vpn_public_address": null, 
                  "vpn_public_port": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a network.", 
        "tags": [
          "networks"
        ], 
        "x-title": "Create network"
      }
    }, 
    "/v2.1/{tenant_id}/os-networks/add": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role to\nperform this operation. Cloud providers can change these\npermissions through the ``policy.json`` file.", 
        "operationId": "addNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds a network to a project.", 
        "tags": [
          "networks"
        ], 
        "x-title": "Add network"
      }
    }, 
    "/v2.1/{tenant_id}/os-networks/{network_id}": {
      "delete": {
        "consumes": [], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "deleteNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a network.", 
        "tags": [
          "networks"
        ], 
        "x-title": "Delete network"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable all users to perform this operation. Cloud\nproviders can change these permissions through the ``policy.json``\nfile.", 
        "operationId": "showNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "network": {
                  "bridge": "br100", 
                  "bridge_interface": "eth0", 
                  "broadcast": "10.0.0.7", 
                  "cidr": "10.0.0.0/29", 
                  "cidr_v6": null, 
                  "created_at": "2011-08-15T06:19:19.387525", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "dhcp_server": "10.0.0.1", 
                  "dhcp_start": "10.0.0.3", 
                  "dns1": null, 
                  "dns2": null, 
                  "enable_dhcp": true, 
                  "gateway": "10.0.0.1", 
                  "gateway_v6": null, 
                  "host": "nsokolov-desktop", 
                  "id": "20c8acc0-f747-4d71-a389-46d078ebf047", 
                  "injected": false, 
                  "label": "mynet_0", 
                  "mtu": null, 
                  "multi_host": false, 
                  "netmask": "255.255.255.248", 
                  "netmask_v6": null, 
                  "priority": null, 
                  "project_id": "1234", 
                  "rxtx_base": null, 
                  "share_address": false, 
                  "updated_at": "2011-08-16T09:26:13.048257", 
                  "vlan": 100, 
                  "vpn_private_address": "10.0.0.2", 
                  "vpn_public_address": "127.0.0.1", 
                  "vpn_public_port": 1000
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a network.", 
        "tags": [
          "networks"
        ], 
        "x-title": "Show network details"
      }
    }, 
    "/v2.1/{tenant_id}/os-networks/{network_id}/action": {
      "x-post-associateHost": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "associateHost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Associates a network with a host.", 
        "tags": [
          "networks"
        ], 
        "x-title": "Associate host"
      }, 
      "x-post-disassociateHost": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "disassociateHost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Disassociates a host from a network.", 
        "tags": [
          "networks"
        ], 
        "x-title": "Disassociate host"
      }, 
      "x-post-disassociateNetwork": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "disassociateNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Disassociates a network from a project. You can then reuse the network.", 
        "tags": [
          "networks"
        ], 
        "x-title": "Disassociate network"
      }, 
      "x-post-disassociateProject": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "disassociateProject", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Disassociates a project from a network.", 
        "tags": [
          "networks"
        ], 
        "x-title": "Disassociate project"
      }
    }, 
    "/v2.1/{tenant_id}/os-quota-class-sets/{class_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showquota", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the quota class.", 
            "format": "", 
            "in": "path", 
            "name": "class_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_class_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "id": "test_class", 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/showquota_200"
            }
          }
        }, 
        "summary": "Shows the quota for a class.", 
        "tags": [
          "quota-class-sets"
        ], 
        "x-title": "Show quota"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updatequota", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the quota class.", 
            "format": "", 
            "in": "path", 
            "name": "class_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_class_set": {
                  "cores": 50, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 50, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updatequota_200"
            }
          }
        }, 
        "summary": "Updates quota for a class.", 
        "tags": [
          "quota-class-sets"
        ], 
        "x-title": "Update quota"
      }
    }, 
    "/v2.1/{tenant_id}/os-security-group-default-rules": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listSecGroupDefaultRules", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_group_default_rules": [
                  {
                    "from_port": 80, 
                    "id": 1, 
                    "ip_protocol": "TCP", 
                    "ip_range": {
                      "cidr": "10.10.10.0/24"
                    }, 
                    "to_port": 80
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listSecGroupDefaultRules_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists default security group rules.", 
        "tags": [
          "os-security-group-default-rules-v2.1"
        ], 
        "x-title": "List default security group rules"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "If you specify a source port (``from_port``) or destination port\n(``to_port``) value, you must specify an IP protocol\n(``ip_protocol``) value. Otherwise, the operation returns the ``Bad\nRequest (400)`` response code.", 
        "operationId": "createSecGroupDefaultRule", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSecGroupDefaultRule"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_group_default_rule": {
                  "from_port": 80, 
                  "id": 1, 
                  "ip_protocol": "TCP", 
                  "ip_range": {
                    "cidr": "10.10.10.0/24"
                  }, 
                  "to_port": 80
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createSecGroupDefaultRule_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a default security group rule.", 
        "tags": [
          "os-security-group-default-rules-v2.1"
        ], 
        "x-title": "Create default security group rule"
      }
    }, 
    "/v2.1/{tenant_id}/os-security-group-default-rules/{security_group_default_rule_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteSecGroupDefaultRule", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the security group rule.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_default_rule_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a security group rule.", 
        "tags": [
          "os-security-group-default-rules-v2.1"
        ], 
        "x-title": "Delete default security group rule"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showSecGroupDefaultRule", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the security group rule.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_default_rule_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_group_default_rule": {
                  "from_port": 80, 
                  "id": 1, 
                  "ip_protocol": "TCP", 
                  "ip_range": {
                    "cidr": "10.10.10.0/24"
                  }, 
                  "to_port": 80
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showSecGroupDefaultRule_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a security group rule.", 
        "tags": [
          "os-security-group-default-rules-v2.1"
        ], 
        "x-title": "Show default security group rule details"
      }
    }, 
    "/v2.1/{tenant_id}/os-security-group-rules": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createSecGroupRule", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSecGroupRule"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_group_rule": {
                  "from_port": 443, 
                  "group": {}, 
                  "id": "1", 
                  "ip_protocol": "tcp", 
                  "ip_range": {
                    "cidr": "0.0.0.0/0"
                  }, 
                  "parent_group_id": "48700ff3-30b8-4e63-845f-a79c9633e9fb", 
                  "to_port": 443
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createSecGroupRule_200"
            }
          }
        }, 
        "summary": "Creates a rule for a security group.", 
        "tags": [
          "os-security-group-rules-v2.1"
        ], 
        "x-title": "Create security group rule"
      }
    }, 
    "/v2.1/{tenant_id}/os-security-group-rules/{security_group_rule_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteSecGroupRule", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the security group rule.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_rule_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a security group rule.", 
        "tags": [
          "os-security-group-rules-v2.1"
        ], 
        "x-title": "Delete security group rule"
      }
    }, 
    "/v2.1/{tenant_id}/os-security-groups": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listSecGroups", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_groups": [
                  {
                    "description": "default", 
                    "id": 1, 
                    "name": "default", 
                    "rules": [], 
                    "tenant_id": "openstack"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listSecGroups_200"
            }
          }
        }, 
        "summary": "Lists security groups.", 
        "tags": [
          "security-groups"
        ], 
        "x-title": "List security groups"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createSecGroup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSecGroup"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_group": {
                  "description": "default", 
                  "id": 1, 
                  "name": "default", 
                  "rules": [], 
                  "tenant_id": "openstack"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createSecGroup_200"
            }
          }
        }, 
        "summary": "Creates a security group.", 
        "tags": [
          "security-groups"
        ], 
        "x-title": "Create security group"
      }
    }, 
    "/v2.1/{tenant_id}/os-security-groups/{security_group_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteSecGroup", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the security group.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a security group.", 
        "tags": [
          "security-groups"
        ], 
        "x-title": "Delete security group"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showSecGroup", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the security group.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_group": {
                  "description": "default", 
                  "id": 1, 
                  "name": "default", 
                  "rules": [], 
                  "tenant_id": "openstack"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showSecGroup_200"
            }
          }
        }, 
        "summary": "Shows details for a security group.", 
        "tags": [
          "security-groups"
        ], 
        "x-title": "Show security group details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateSecGroup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateSecGroup"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the security group.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_group": {
                  "description": "my security group", 
                  "id": 1, 
                  "name": "mysecgroup", 
                  "rules": [], 
                  "tenant_id": "a52cdb9cc7854a39a23d3af73a40899e"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateSecGroup_200"
            }
          }
        }, 
        "summary": "Updates a security group.", 
        "tags": [
          "security-groups"
        ], 
        "x-title": "Update security group"
      }
    }, 
    "/v2.1/{tenant_id}/os-server-external-events": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "You must assign this instance to a host. Otherwise, this call does\nnot dispatch the event to the instance.", 
        "operationId": "createEvents", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createEvents"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "events": [
                  {
                    "code": 200, 
                    "name": "network-changed", 
                    "server_uuid": "ff1df7b2-6772-45fd-9326-c0a3b05591c2", 
                    "status": "completed", 
                    "tag": "foo"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createEvents_200"
            }
          }
        }, 
        "summary": "Creates one or more external events, which the API dispatches to the instance.", 
        "tags": [
          "os-server-external-events-v2.1"
        ], 
        "x-title": "Run events"
      }
    }, 
    "/v2.1/{tenant_id}/os-server-groups": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Administrative users can use the ``all_projects`` query parameter\nto list all server groups for all projects.", 
        "operationId": "listServerGroups", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Administrator only. Lists server groups for all projects. For\nexample:\n\n.. code-block:: json\n\n   GET /v2.1/\u200b{admin_tenant_id}\u200b/os-server-groups?all_projects=true\n\nIf you specify a tenant ID for a non-administrative user with this\nquery parameter, the call lists all server groups for the tenant,\nor project, rather than for all projects.", 
            "format": "", 
            "in": "query", 
            "name": "all_projects", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "server_groups": [
                  {
                    "id": "616fb98f-46ca-475e-917e-2563e5a8cd19", 
                    "members": [], 
                    "metadata": {}, 
                    "name": "test", 
                    "policies": [
                      "anti-affinity"
                    ], 
                    "project_id": "test-project", 
                    "user_id": "test-user"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listServerGroups_200"
            }
          }
        }, 
        "summary": "Lists all server groups for the tenant.", 
        "tags": [
          "server-groups"
        ], 
        "x-title": "List server groups"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createServerGroup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServerGroup"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "server_group": {
                  "id": "5bbcc3c4-1da2-4437-a48a-66f15b1b13f9", 
                  "members": [], 
                  "metadata": {}, 
                  "name": "test", 
                  "policies": [
                    "anti-affinity"
                  ], 
                  "project_id": "test-project", 
                  "user_id": "test-user"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createServerGroup_200"
            }
          }
        }, 
        "summary": "Creates a server group.", 
        "tags": [
          "server-groups"
        ], 
        "x-title": "Create server group"
      }
    }, 
    "/v2.1/{tenant_id}/os-server-groups/{server_group_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteServerGroup", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server group.", 
            "format": "", 
            "in": "path", 
            "name": "server_group_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a server group.", 
        "tags": [
          "server-groups"
        ], 
        "x-title": "Delete server group"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showServerGroup", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server group.", 
            "format": "", 
            "in": "path", 
            "name": "server_group_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "server_group": {
                  "id": "5bbcc3c4-1da2-4437-a48a-66f15b1b13f9", 
                  "members": [], 
                  "metadata": {}, 
                  "name": "test", 
                  "policies": [
                    "anti-affinity"
                  ], 
                  "project_id": "test-project", 
                  "user_id": "test-user"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showServerGroup_200"
            }
          }
        }, 
        "summary": "Shows details for a server group.", 
        "tags": [
          "server-groups"
        ], 
        "x-title": "Show server group details"
      }
    }, 
    "/v2.1/{tenant_id}/os-services": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Includes reasons, if available, for why any services were disabled.", 
        "operationId": "listServices", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "services": [
                  {
                    "binary": "nova-scheduler", 
                    "disabled_reason": "test1", 
                    "forced_down": false, 
                    "host": "host1", 
                    "id": 1, 
                    "state": "up", 
                    "status": "disabled", 
                    "updated_at": "2012-10-29T13:42:02.000000", 
                    "zone": "internal"
                  }, 
                  {
                    "binary": "nova-compute", 
                    "disabled_reason": "test2", 
                    "forced_down": false, 
                    "host": "host1", 
                    "id": 2, 
                    "state": "up", 
                    "status": "disabled", 
                    "updated_at": "2012-10-29T13:42:05.000000", 
                    "zone": "nova"
                  }, 
                  {
                    "binary": "nova-scheduler", 
                    "disabled_reason": null, 
                    "forced_down": false, 
                    "host": "host2", 
                    "id": 3, 
                    "state": "down", 
                    "status": "enabled", 
                    "updated_at": "2012-09-19T06:55:34.000000", 
                    "zone": "internal"
                  }, 
                  {
                    "binary": "nova-compute", 
                    "disabled_reason": "test4", 
                    "forced_down": false, 
                    "host": "host2", 
                    "id": 4, 
                    "state": "down", 
                    "status": "disabled", 
                    "updated_at": "2012-09-18T08:03:38.000000", 
                    "zone": "nova"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listServices_200"
            }
          }
        }, 
        "summary": "Lists all running Compute services for a tenant.", 
        "tags": [
          "services"
        ], 
        "x-title": "List Compute services"
      }
    }, 
    "/v2.1/{tenant_id}/os-services/disable": {
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the service by its host name and binary name.", 
        "operationId": "disableScheduling", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/disableScheduling"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "service": {
                  "binary": "nova-compute", 
                  "host": "host1", 
                  "status": "disabled"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/disableScheduling_200"
            }
          }
        }, 
        "summary": "Disables scheduling for a Compute service.", 
        "tags": [
          "services"
        ], 
        "x-title": "Disable scheduling for a Compute service"
      }
    }, 
    "/v2.1/{tenant_id}/os-services/disable-log-reason": {
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the service by its host name and binary name.", 
        "operationId": "disableLogReason", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/disableLogReason"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "service": {
                  "binary": "nova-compute", 
                  "disabled_reason": "test2", 
                  "host": "host1", 
                  "status": "disabled"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/disableLogReason_200"
            }
          }
        }, 
        "summary": "Logs information to the Compute service table about why a Compute service was disabled.", 
        "tags": [
          "services"
        ], 
        "x-title": "Log disabled Compute service information"
      }
    }, 
    "/v2.1/{tenant_id}/os-services/enable": {
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the service by its host name and binary name.", 
        "operationId": "enableScheduling", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/enableScheduling"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "service": {
                  "binary": "nova-compute", 
                  "host": "host1", 
                  "status": "enabled"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/enableScheduling_200"
            }
          }
        }, 
        "summary": "Enables scheduling for a Compute service.", 
        "tags": [
          "services"
        ], 
        "x-title": "Enable scheduling for a Compute service"
      }
    }, 
    "/v2.1/{tenant_id}/os-services/{service_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the service by its host name and binary name.", 
        "operationId": "deleteService", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/deleteService"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the service.", 
            "format": "", 
            "in": "path", 
            "name": "service_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a Compute service.", 
        "tags": [
          "services"
        ], 
        "x-title": "Delete Compute service"
      }
    }, 
    "/v2.1/{tenant_id}/os-simple-tenant-usage": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listUsageInformation", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "tenant_usages": [
                  {
                    "start": "2012-10-08T21:10:44.587336", 
                    "stop": "2012-10-08T22:10:44.587336", 
                    "tenant_id": "openstack", 
                    "total_hours": 1.0, 
                    "total_local_gb_usage": 1.0, 
                    "total_memory_mb_usage": 512.0, 
                    "total_vcpus_usage": 1.0
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists usage information for all tenants.", 
        "tags": [
          "os-simple-tenant-usage-v2.1"
        ], 
        "x-title": "List tenant usage for all tenants"
      }
    }, 
    "/v2.1/{tenant_id}/os-simple-tenant-usage/{tenant_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listUsageSpecific", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "tenant_usage": {
                  "server_usages": [
                    {
                      "ended_at": null, 
                      "flavor": "m1.tiny", 
                      "hours": 1.0, 
                      "instance_id": "1f1deceb-17b5-4c04-84c7-e0d4499c8fe0", 
                      "local_gb": 1, 
                      "memory_mb": 512, 
                      "name": "new-server-test", 
                      "started_at": "2012-10-08T20:10:44.541277", 
                      "state": "active", 
                      "tenant_id": "openstack", 
                      "uptime": 3600, 
                      "vcpus": 1
                    }
                  ], 
                  "start": "2012-10-08T20:10:44.587336", 
                  "stop": "2012-10-08T21:10:44.587336", 
                  "tenant_id": "openstack", 
                  "total_hours": 1.0, 
                  "total_local_gb_usage": 1.0, 
                  "total_memory_mb_usage": 512.0, 
                  "total_vcpus_usage": 1.0
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows usage details for a tenant.", 
        "tags": [
          "os-simple-tenant-usage-v2.1"
        ], 
        "x-title": "Show usage details for tenant"
      }
    }, 
    "/v2.1/{tenant_id}/os-snapshots": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listSnapshots", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshots": [
                  {
                    "createdAt": "2013-02-25T16:27:54.684999", 
                    "displayDescription": "Default description", 
                    "displayName": "Default name", 
                    "id": 100, 
                    "size": 100, 
                    "status": "available", 
                    "volumeId": 12
                  }, 
                  {
                    "createdAt": "2013-02-25T16:27:54.685005", 
                    "displayDescription": "Default description", 
                    "displayName": "Default name", 
                    "id": 101, 
                    "size": 100, 
                    "status": "available", 
                    "volumeId": 12
                  }, 
                  {
                    "createdAt": "2013-02-25T16:27:54.685008", 
                    "displayDescription": "Default description", 
                    "displayName": "Default name", 
                    "id": 102, 
                    "size": 100, 
                    "status": "available", 
                    "volumeId": 12
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists snapshots.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "List snapshots"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createSnapshot", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSnapshot"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshot": {
                  "createdAt": "2013-02-25T16:27:54.724209", 
                  "displayDescription": "Default description", 
                  "displayName": "Default name", 
                  "id": "100", 
                  "size": 100, 
                  "status": "available", 
                  "volumeId": 12
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a snapshot.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "Create snapshot"
      }
    }, 
    "/v2.1/{tenant_id}/os-snapshots/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listSnapshotsDetailed", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshots": [
                  {
                    "createdAt": "2013-02-25T16:27:54.684999", 
                    "displayDescription": "Default description", 
                    "displayName": "Default name", 
                    "id": 100, 
                    "size": 100, 
                    "status": "available", 
                    "volumeId": 12
                  }, 
                  {
                    "createdAt": "2013-02-25T16:27:54.685005", 
                    "displayDescription": "Default description", 
                    "displayName": "Default name", 
                    "id": 101, 
                    "size": 100, 
                    "status": "available", 
                    "volumeId": 12
                  }, 
                  {
                    "createdAt": "2013-02-25T16:27:54.685008", 
                    "displayDescription": "Default description", 
                    "displayName": "Default name", 
                    "id": 102, 
                    "size": 100, 
                    "status": "available", 
                    "volumeId": 12
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all snapshots with details.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "List snapshots with details"
      }
    }, 
    "/v2.1/{tenant_id}/os-snapshots/{snapshot_id}": {
      "delete": {
        "consumes": [], 
        "description": "This operation is asynchronous. You must list snapshots repeatedly\nto determine whether the snapshot was deleted.", 
        "operationId": "deleteSnapshot", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "text/plain": "HTTP/1.1 202 Accepted\nContent-Type: text/html; charset=UTF-8\nContent-Length: 0\nDate: Mon, 01 Dec 2014 16:23:10 GMT\n"
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a snapshot from the account.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "Delete snapshot"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showSnapshot", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshot": {
                  "createdAt": "2013-02-25T16:27:54.724209", 
                  "displayDescription": "Default description", 
                  "displayName": "Default name", 
                  "id": "100", 
                  "size": 100, 
                  "status": "available", 
                  "volumeId": 12
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a snapshot.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "Show snapshot details"
      }
    }, 
    "/v2.1/{tenant_id}/os-tenant-networks": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "listProjectNetworks", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "networks": [
                  {
                    "bridge": "br100", 
                    "bridge_interface": "eth0", 
                    "broadcast": "10.0.0.7", 
                    "cidr": "10.0.0.0/29", 
                    "cidr_v6": null, 
                    "created_at": "2011-08-15T06:19:19.387525", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "dhcp_server": "10.0.0.1", 
                    "dhcp_start": "10.0.0.3", 
                    "dns1": null, 
                    "dns2": null, 
                    "enable_dhcp": true, 
                    "gateway": "10.0.0.1", 
                    "gateway_v6": null, 
                    "host": "nsokolov-desktop", 
                    "id": "20c8acc0-f747-4d71-a389-46d078ebf047", 
                    "injected": false, 
                    "label": "mynet_0", 
                    "mtu": null, 
                    "multi_host": false, 
                    "netmask": "255.255.255.248", 
                    "netmask_v6": null, 
                    "priority": null, 
                    "project_id": "1234", 
                    "rxtx_base": null, 
                    "share_address": false, 
                    "updated_at": "2011-08-16T09:26:13.048257", 
                    "vlan": 100, 
                    "vpn_private_address": "10.0.0.2", 
                    "vpn_public_address": "127.0.0.1", 
                    "vpn_public_port": 1000
                  }, 
                  {
                    "bridge": "br101", 
                    "bridge_interface": "eth0", 
                    "broadcast": "10.0.0.15", 
                    "cidr": "10.0.0.10/29", 
                    "cidr_v6": null, 
                    "created_at": "2011-08-15T06:19:19.885495", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "dhcp_server": "10.0.0.9", 
                    "dhcp_start": "10.0.0.11", 
                    "dns1": null, 
                    "dns2": null, 
                    "enable_dhcp": true, 
                    "gateway": "10.0.0.9", 
                    "gateway_v6": null, 
                    "host": null, 
                    "id": "20c8acc0-f747-4d71-a389-46d078ebf000", 
                    "injected": false, 
                    "label": "mynet_1", 
                    "mtu": null, 
                    "multi_host": false, 
                    "netmask": "255.255.255.248", 
                    "netmask_v6": null, 
                    "priority": null, 
                    "project_id": null, 
                    "rxtx_base": null, 
                    "share_address": false, 
                    "updated_at": null, 
                    "vlan": 101, 
                    "vpn_private_address": "10.0.0.10", 
                    "vpn_public_address": null, 
                    "vpn_public_port": 1001
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all project networks.", 
        "tags": [
          "tenant-networks"
        ], 
        "x-title": "List project networks"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "createProjectNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "network": {
                  "cidr": "172.0.0.0/24", 
                  "id": "5bbcc3c4-1da2-4437-a48a-66f15b1b13f9", 
                  "label": "public"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a project network.", 
        "tags": [
          "tenant-networks"
        ], 
        "x-title": "Create project network"
      }
    }, 
    "/v2.1/{tenant_id}/os-tenant-networks/{network_id}": {
      "delete": {
        "consumes": [], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "deleteProjectNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a project network.", 
        "tags": [
          "tenant-networks"
        ], 
        "x-title": "Delete project network"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "showProjectNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "networks": [
                  {
                    "cidr": "10.0.0.0/29", 
                    "id": "616fb98f-46ca-475e-917e-2563e5a8cd19", 
                    "label": "test_0"
                  }, 
                  {
                    "cidr": "10.0.0.8/29", 
                    "id": "616fb98f-46ca-475e-917e-2563e5a8cd20", 
                    "label": "test_1"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a project network.", 
        "tags": [
          "tenant-networks"
        ], 
        "x-title": "Show project network details"
      }
    }, 
    "/v2.1/{tenant_id}/os-tenant-networks/{network_id}/action": {
      "x-post-associateHost": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "associateHost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Associates a network with a host.", 
        "tags": [
          "tenant-networks"
        ], 
        "x-title": "Associate host"
      }, 
      "x-post-disassociateHost": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "disassociateHost", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Disassociates a host from a network.", 
        "tags": [
          "tenant-networks"
        ], 
        "x-title": "Disassociate host"
      }, 
      "x-post-disassociateNetwork": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "disassociateNetwork", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Disassociates a network from a project so that the network can be reused.", 
        "tags": [
          "tenant-networks"
        ], 
        "x-title": "Disassociate network"
      }, 
      "x-post-disassociateProject": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "disassociateProject", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the network.", 
            "format": "", 
            "in": "path", 
            "name": "network_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Disassociates a project from a network.", 
        "tags": [
          "tenant-networks"
        ], 
        "x-title": "Disassociate project"
      }
    }, 
    "/v2.1/{tenant_id}/os-volume-types": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumeTypes", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume_types": [
                  {
                    "extra_specs": {
                      "capabilities": "gpu"
                    }, 
                    "id": "289da7f8-6440-407c-9fb4-7db01ec49164", 
                    "name": "vol-type-001"
                  }, 
                  {
                    "extra_specs": {}, 
                    "id": "96c3bda7-c82a-4f50-be73-ca7621794835", 
                    "name": "vol-type-002"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listVolumeTypes_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists volume types.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "List volume types"
      }
    }, 
    "/v2.1/{tenant_id}/os-volume-types/{volume_type_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showVolumeType", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The unique ID for a volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume_type": {
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "289da7f8-6440-407c-9fb4-7db01ec49164", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a volume type.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "Show volume type details"
      }
    }, 
    "/v2.1/{tenant_id}/os-volumes": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumes", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volumes": [
                  {
                    "attachments": [], 
                    "availability_zone": "us-east1", 
                    "created_at": "2012-02-14T20:53:07Z", 
                    "display_description": "Another volume.", 
                    "display_name": "vol-001", 
                    "id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
                    "metadata": {
                      "contents": "junk"
                    }, 
                    "size": 30, 
                    "snapshot_id": null, 
                    "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
                  }, 
                  {
                    "attachments": [], 
                    "availability_zone": "us-east2", 
                    "created_at": "2012-03-15T19:10:03Z", 
                    "display_description": "Yet another volume.", 
                    "display_name": "vol-002", 
                    "id": "76b8950a-8594-4e5b-8dce-0dfa9c696358", 
                    "metadata": {}, 
                    "size": 25, 
                    "snapshot_id": null, 
                    "volume_type": "96c3bda7-c82a-4f50-be73-ca7621794835"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists the volumes associated with the account.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "List volumes"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolume"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "us-east1", 
                  "created_at": "2012-02-14T20:53:07Z", 
                  "display_description": "Another volume.", 
                  "display_name": "vol-001", 
                  "id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
                  "metadata": {
                    "contents": "junk"
                  }, 
                  "size": 30, 
                  "snapshot_id": null, 
                  "status": "active", 
                  "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a volume.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "Create volume"
      }
    }, 
    "/v2.1/{tenant_id}/os-volumes/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumesDetailed", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volumes": [
                  {
                    "attachments": [
                      {
                        "device": "/", 
                        "id": "a26887c6-c47b-4654-abb5-dfadf7d3f803", 
                        "serverId": "3912f2b4-c5ba-4aec-9165-872876fe202e", 
                        "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
                      }
                    ], 
                    "availabilityZone": "zone1:host1", 
                    "createdAt": "1999-01-01T01:01:01.000000", 
                    "displayDescription": "Volume Description", 
                    "displayName": "Volume Name", 
                    "id": "a26887c6-c47b-4654-abb5-dfadf7d3f803", 
                    "metadata": {}, 
                    "size": 100, 
                    "snapshotId": null, 
                    "status": "in-use", 
                    "volumeType": "Backup"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all volumes with details.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "List volumes with details"
      }
    }, 
    "/v2.1/{tenant_id}/os-volumes/{volume_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteVolume", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The unique ID for a volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "text/plain": "HTTP/1.1 202 Accepted\nContent-Type: text/html; charset=UTF-8\nContent-Length: 0\nDate: Fri, 05 Dec 2014 00:39:32 GMT\n"
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a volume.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "Delete volume"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showVolume", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The unique ID for a volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "us-east1", 
                  "created_at": "2012-02-14T20:53:07Z", 
                  "display_description": "Another volume.", 
                  "display_name": "vol-001", 
                  "id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
                  "metadata": {
                    "contents": "junk"
                  }, 
                  "size": 30, 
                  "snapshot_id": null, 
                  "status": "active", 
                  "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a volume.", 
        "tags": [
          "os-volumes"
        ], 
        "x-title": "Show volume details"
      }
    }, 
    "/v2.1/{tenant_id}/servers": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Servers contain a status attribute that indicates the current\nserver state. You can filter on the server status when you complete\na list servers request. The server status is returned in the\nresponse body. The possible server status values are:\n\n **Server status values**\n\n- ``ACTIVE``. The server is active.\n\n- ``BUILDING``. The server has not finished the original build\n  process.\n\n- ``DELETED``. The server is permanently deleted.\n\n- ``ERROR``. The server is in error.\n\n- ``HARD_REBOOT``. The server is hard rebooting. This is equivalent\n  to pulling the power plug on a physical server, plugging it back\n  in, and rebooting it.\n\n- ``MIGRATING``. The server is being migrated to a new host.\n\n- ``PASSWORD``. The password is being reset on the server.\n\n- ``PAUSED``. In a paused state, the state of the server is stored\n  in RAM. A paused server continues to run in frozen state.\n\n- ``REBOOT``. The server is in a soft reboot state. A reboot command\n  was passed to the operating system.\n\n- ``REBUILD``. The server is currently being rebuilt from an image.\n\n- ``RESCUED``. The server is in rescue mode. A rescue image is\n  running with the original server image attached.\n\n- ``RESIZED``. Server is performing the differential copy of data\n  that changed during its initial copy. Server is down for this\n  stage.\n\n- ``REVERT_RESIZE``. The resize or migration of a server failed for\n  some reason. The destination server is being cleaned up and the\n  original source server is restarting.\n\n- ``SOFT_DELETED``. The server is marked as deleted but the disk\n  images are still available to restore.\n\n- ``STOPPED``. The server is powered off and the disk image still\n  persists.\n\n- ``SUSPENDED``. The server is suspended, either by request or\n  necessity. This status appears for only the XenServer/XCP, KVM,\n  and ESXi hypervisors. Administrative users can suspend an\n  instance if it is infrequently used or to perform system\n  maintenance. When you suspend an instance, its VM state is stored\n  on disk, all memory is written to disk, and the virtual machine\n  is stopped. Suspending an instance is similar to placing a device\n  in hibernation; memory and vCPUs become available to create other\n  instances.\n\n- ``UNKNOWN``. The state of the server is unknown. Contact your\n  cloud provider.\n\n- ``VERIFY_RESIZE``. System is awaiting confirmation that the server\n  is operational after a move or resize.", 
        "operationId": "listServers", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a date and time stamp when the server last\nchanged status.", 
            "format": "", 
            "in": "query", 
            "name": "changes-since", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by an image, as a UUID.", 
            "format": "", 
            "in": "query", 
            "name": "image", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a flavor, as a UUID. A flavor is a\ncombination of memory, disk size, and CPUs.", 
            "format": "", 
            "in": "query", 
            "name": "flavor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a server name, as a string.\n\nYou can use regular expressions in the query. For example, the\n``?name=bob`` regular expression returns both bob and bobb. If you\nmust match on only bob, you can use a regular expression that\nmatches the syntax of the underlying database server that is\nimplemented for Compute, such as MySQL or PostgreSQL.", 
            "format": "regexp", 
            "in": "query", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a server status, as a string. For example,\n``ACTIVE``.", 
            "format": "", 
            "in": "query", 
            "name": "status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a host name, as a string. This query\nparameter is typically available to only administrative users. If\nyou are a non-administrative user, the API ignores this parameter.", 
            "format": "", 
            "in": "query", 
            "name": "host", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "id": "a291599e-6de2-41a6-88df-c443ddcef70d", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/a291599e-6de2-41a6-88df-c443ddcef70d", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/a291599e-6de2-41a6-88df-c443ddcef70d", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "new-server-test"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/listServers_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists IDs, names, and links for all servers.", 
        "tags": [
          "servers-v2.1"
        ], 
        "x-title": "List servers"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "The progress of this operation depends on the location of the\nrequested image, network I/O, host load, selected flavor, and other\nfactors.\n\nTo check the progress of the request, make a ``GET /servers/{id}``\nrequest. This call returns a progress attribute, which is a\npercentage value from 0 to 100.\n\nThe ``Location`` header returns the full URL to the newly created\nserver and is available as a ``self`` and ``bookmark`` link in the\nserver representation.\n\nWhen you create a server, the response shows only the server ID,\nits links, and the admin password. You can get additional\nattributes through subsequent GET requests on the server.\n\nInclude the ``block-device-mapping-v2`` parameter in the create\nrequest body to boot a server from a volume.\n\nInclude the ``key_name`` parameter in the create request body to\nadd a keypair to the server when you create it. To create a\nkeypair, make a `create keypair <http://developer.openstack.org\n/api-ref-compute-v2.1.html#createKeypair>`_ request.\n\nPreconditions\n\n- The user must have sufficient server quota to create the number of\n  servers requested.\n\n- The connection to the Image service is valid.\n\nAsynchronous postconditions\n\n- With correct permissions, you can see the server status as\n  ``ACTIVE`` through API calls.\n\n- With correct access, you can see the created server in the compute\n  node that OpenStack Compute manages.\n\nTroubleshooting\n\n- If the server status remains ``BUILDING`` or shows another error\n  status, the request failed. Ensure you meet the preconditions\n  then investigate the compute node.\n\n- The server is not created in the compute node that OpenStack\n  Compute manages.\n\n- The compute node needs enough free resource to match the resource\n  of the server creation request.\n\n- Ensure that the scheduler selection filter can fulfill the request\n  with the available compute nodes that match the selection\n  criteria of the filter.", 
        "operationId": "createServer", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServer"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "server": {
                  "OS-DCF:diskConfig": "AUTO", 
                  "adminPass": "zPnp2GseTqG4", 
                  "id": "8195065c-fea4-4d57-b93f-5c5c63fe90e8", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/8195065c-fea4-4d57-b93f-5c5c63fe90e8", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/8195065c-fea4-4d57-b93f-5c5c63fe90e8", 
                      "rel": "bookmark"
                    }
                  ], 
                  "security_groups": [
                    {
                      "name": "default"
                    }
                  ]
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createServer_202"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a server.", 
        "tags": [
          "servers-v2.1"
        ], 
        "x-title": "Create server"
      }, 
      "x-post-createServers": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createServers", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServers"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "server": {
                  "OS-DCF:diskConfig": "AUTO", 
                  "adminPass": "zPnp2GseTqG4", 
                  "id": "8195065c-fea4-4d57-b93f-5c5c63fe90e8", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/8195065c-fea4-4d57-b93f-5c5c63fe90e8", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/8195065c-fea4-4d57-b93f-5c5c63fe90e8", 
                      "rel": "bookmark"
                    }
                  ], 
                  "security_groups": [
                    {
                      "name": "default"
                    }
                  ]
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createServers_202"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates one or more servers.", 
        "tags": [
          "multiple-create"
        ], 
        "x-title": "Create multiple servers"
      }, 
      "x-post-createServersResId": {
        "consumes": [
          "application/json"
        ], 
        "description": "Set ``\"return_reservation_id\": \"True\"`` in the request body to\nrequest that a reservation ID be returned instead of the newly\ncreated instance information. With this parameter, the response\nshows only the reservation ID.", 
        "operationId": "createServersResId", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServersResId"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "reservation_id": "r-3fhpjulh"
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createServersResId_202"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates one or more servers with a reservation ID.", 
        "tags": [
          "multiple-create"
        ], 
        "x-title": "Create multiple servers with reservation ID"
      }
    }, 
    "/v2.1/{tenant_id}/servers/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "The compute provisioning algorithm has an anti-affinity property\nthat attempts to spread customer VMs across hosts. Under certain\nsituations, VMs from the same customer might be placed on the same\nhost. The hostId property shows the host that your server runs on\nand can be used to determine this scenario if it is relevant to\nyour application.\n\nFor each server, shows server details including configuration\ndrive, extended status, and server usage information.\n\nThe extended status information appears in the ``OS-EXT-\nSTS:vm_state``, ``OS-EXT-STS:power_state``, and ``OS-EXT-\nSTS:task_state`` attributes.\n\nThe server usage information appears in the ``OS-SRV-\nUSG:launched_at`` and ``OS-SRV-USG:terminated_at`` attributes.\n\nTo hide ``addresses`` information for instances in a certain state,\nset the ``osapi_hide_server_address_states`` configuration option.\nSet this option to a valid VM state in the ``nova.conf``\nconfiguration file.\n\nHostId is unique **per account** and is not globally unique.", 
        "operationId": "listServersDetailed", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a date and time stamp when the server last\nchanged status.", 
            "format": "", 
            "in": "query", 
            "name": "changes-since", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by an image, as a UUID.", 
            "format": "", 
            "in": "query", 
            "name": "image", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a flavor, as a UUID. A flavor is a\ncombination of memory, disk size, and CPUs.", 
            "format": "", 
            "in": "query", 
            "name": "flavor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a server name, as a string.\n\nYou can use regular expressions in the query. For example, the\n``?name=bob`` regular expression returns both bob and bobb. If you\nmust match on only bob, you can use a regular expression that\nmatches the syntax of the underlying database server that is\nimplemented for Compute, such as MySQL or PostgreSQL.", 
            "format": "regexp", 
            "in": "query", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a server status, as a string. For example,\n``ACTIVE``.", 
            "format": "", 
            "in": "query", 
            "name": "status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the response by a host name, as a string. This query\nparameter is typically available to only administrative users. If\nyou are a non-administrative user, the API ignores this parameter.", 
            "format": "", 
            "in": "query", 
            "name": "host", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "OS-DCF:diskConfig": "AUTO", 
                    "OS-EXT-AZ:availability_zone": "nova", 
                    "OS-EXT-SRV-ATTR:host": "c3f14e9812ad496baf92ccfb3c61e15f", 
                    "OS-EXT-SRV-ATTR:hypervisor_hostname": "fake-mini", 
                    "OS-EXT-SRV-ATTR:instance_name": "instance-00000001", 
                    "OS-EXT-STS:power_state": 1, 
                    "OS-EXT-STS:task_state": null, 
                    "OS-EXT-STS:vm_state": "active", 
                    "OS-SRV-USG:launched_at": "2013-09-23T13:53:12.774549", 
                    "OS-SRV-USG:terminated_at": null, 
                    "accessIPv4": "", 
                    "accessIPv6": "", 
                    "addresses": {
                      "private": [
                        {
                          "OS-EXT-IPS-MAC:mac_addr": "aa:bb:cc:dd:ee:ff", 
                          "OS-EXT-IPS:type": "fixed", 
                          "addr": "192.168.0.3", 
                          "version": 4
                        }
                      ]
                    }, 
                    "config_drive": "", 
                    "created": "2013-09-23T13:53:12Z", 
                    "flavor": {
                      "id": "1", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/flavors/1", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "hostId": "f1e160ad2bf07084f3d3e0dfdd0795d80da18a60825322c15775c0dd", 
                    "host_status": "UP", 
                    "id": "9cbefc35-d372-40c5-88e2-9fda1b6ea12c", 
                    "image": {
                      "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "key_name": null, 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/9cbefc35-d372-40c5-88e2-9fda1b6ea12c", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/9cbefc35-d372-40c5-88e2-9fda1b6ea12c", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "My Server Name": "Apache1"
                    }, 
                    "name": "new-server-test", 
                    "os-extended-volumes:volumes_attached": [], 
                    "progress": 0, 
                    "security_groups": [
                      {
                        "name": "default"
                      }
                    ], 
                    "status": "ACTIVE", 
                    "tenant_id": "openstack", 
                    "updated": "2013-10-31T06:32:32Z", 
                    "user_id": "fake"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listServersDetailed_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all servers with details.", 
        "tags": [
          "servers-v2.1"
        ], 
        "x-title": "List details for servers"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}": {
      "delete": {
        "consumes": [], 
        "description": "Preconditions\n\n- The server must exist.\n\n- Anyone can delete a server when the status of the server is not\n  locked and when the policy allows.\n\n- If the server is locked, you must have administrator privileges to\n  delete the server.\n\nAsynchronous postconditions\n\n- With correct permissions, you can see the server status as\n  ``DELETED`` through API calls.\n\n- The port attached to the server is deleted.\n\n- The server does not appear in the list servers response.\n\n- The server managed by OpenStack Compute is deleted on the compute\n  node.\n\nTroubleshooting\n\n- If server status remains in ``deleting`` status or another error\n  status, the request failed. Ensure that you meet the\n  preconditions. Then, investigate the compute back end.\n\n- The request returns the HTTP 409 response code when the server is\n  locked even if you have correct permissions. Ensure that you meet\n  the preconditions then investigate the server status.\n\n- The server managed by OpenStack Compute is not deleted from the\n  compute node.", 
        "operationId": "deleteServer", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a server.", 
        "tags": [
          "servers-v2.1"
        ], 
        "x-title": "Delete server"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Includes server details including configuration drive, extended\nstatus, and server usage information.\n\nThe extended status information appears in the ``OS-EXT-\nSTS:vm_state``, ``OS-EXT-STS:power_state``, and ``OS-EXT-\nSTS:task_state`` attributes.\n\nThe server usage information appears in the ``OS-SRV-\nUSG:launched_at`` and ``OS-SRV-USG:terminated_at`` attributes.\n\nTo hide ``addresses`` information for instances in a certain state,\nset the ``osapi_hide_server_address_states`` configuration option.\nSet this option to a valid VM state in the ``nova.conf``\nconfiguration file.\n\nHostId is unique **per account** and is not globally unique.\n\nPreconditions\n\n- The server must exist.", 
        "operationId": "showServer", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "server": {
                  "OS-DCF:diskConfig": "AUTO", 
                  "OS-EXT-AZ:availability_zone": "nova", 
                  "OS-EXT-SRV-ATTR:host": "b8b357f7100d4391828f2177c922ef93", 
                  "OS-EXT-SRV-ATTR:hypervisor_hostname": "fake-mini", 
                  "OS-EXT-SRV-ATTR:instance_name": "instance-00000001", 
                  "OS-EXT-STS:power_state": 1, 
                  "OS-EXT-STS:task_state": null, 
                  "OS-EXT-STS:vm_state": "active", 
                  "OS-SRV-USG:launched_at": "2013-09-23T13:37:00.880302", 
                  "OS-SRV-USG:terminated_at": null, 
                  "accessIPv4": "192.0.2.0", 
                  "accessIPv6": "2002:0:0:0:0:0:c000:20e", 
                  "addresses": {
                    "private": [
                      {
                        "OS-EXT-IPS-MAC:mac_addr": "aa:bb:cc:dd:ee:ff", 
                        "OS-EXT-IPS:type": "fixed", 
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "config_drive": "", 
                  "created": "2013-09-23T13:37:00Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "9cc36101a27c2a69c1a18241f6228454d9d7f466bd90c62db8e8b856", 
                  "host_status": "UP", 
                  "id": "f474386b-4fb6-4e1f-b1d5-d6bf4437f7d5", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "key_name": null, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/f474386b-4fb6-4e1f-b1d5-d6bf4437f7d5", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/f474386b-4fb6-4e1f-b1d5-d6bf4437f7d5", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "os-extended-volumes:volumes_attached": [], 
                  "progress": 0, 
                  "security_groups": [
                    {
                      "name": "default"
                    }
                  ], 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2013-10-31T07:31:30Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique ID for tracking the request. The request ID associated\nwith the request appears in the log lines for that request. By\ndefault, the middleware configuration ensures that the request ID\nappears in the log files.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {
              "$ref": "#/definitions/showServer_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a server.", 
        "tags": [
          "servers-v2.1"
        ], 
        "x-title": "Show server details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- The server must exist.\n\n- You can edit the ``accessIPv4``, ``accessIPv6``, ``diskConfig``\n  and ``name`` attributes.", 
        "operationId": "updateServer", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateServer"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "server": {
                  "accessIPv4": "192.0.2.0", 
                  "accessIPv6": "2002:0:0:0:0:0:c000:20e", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "198.51.100.0", 
                        "version": 4
                      }, 
                      {
                        "addr": "2002:0:0:0:0:0:c633:640e", 
                        "version": 6
                      }
                    ], 
                    "public": [
                      {
                        "addr": "192.0.2.0", 
                        "version": 4
                      }, 
                      {
                        "addr": "2002:0:0:0:0:0:c000:20e", 
                        "version": 6
                      }
                    ]
                  }, 
                  "created": "2010-11-11T12:00:00Z", 
                  "flavor": {
                    "id": "52415800-8b69-11e0-9b19-734f1195ff37", 
                    "links": [
                      {
                        "href": "http://servers.api.openstack.org/v2/1234/flavors/52415800-8b69-11e0-9b19-734f1195ff37", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://servers.api.openstack.org/1234/flavors/52415800-8b69-11e0-9b19-734f1195ff37", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "256 MB Server"
                  }, 
                  "hostId": "e4d909c290d0fb1ca068ffaddf22cbd0", 
                  "id": "52415800-8b69-11e0-9b19-734f565bc83b", 
                  "image": {
                    "id": "52415800-8b69-11e0-9b19-734f6f006e54", 
                    "links": [
                      {
                        "href": "http://servers.api.openstack.org/v2/1234/images/52415800-8b69-11e0-9b19-734f6f006e54", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://servers.api.openstack.org/1234/images/52415800-8b69-11e0-9b19-734f6f006e54", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "CentOS 5.2"
                  }, 
                  "links": [
                    {
                      "href": "http://servers.api.openstack.org/v2/1234/servers/52415800-8b69-11e0-9b19-734fcece0043", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://servers.api.openstack.org/1234/servers/52415800-8b69-11e0-9b19-734fcece0043", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "1234", 
                  "updated": "2010-11-12T12:44:44Z", 
                  "user_id": "5678"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateServer_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Updates the editable attributes of a server.", 
        "tags": [
          "servers-v2.1"
        ], 
        "x-title": "Update server"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/action": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``os-getConsoleOutput`` action in the request body.", 
        "operationId": "showConsoleOutput", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/showConsoleOutput"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "output": "FAKE CONSOLE OUTPUT\nANOTHER\nLAST LINE"
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows console output for a server instance.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Show console output (os-getConsoleOutput action)"
      }, 
      "x-post-addFixedIp": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``addFixedIp`` action and the network ID in the request\nbody.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "addFixedIp", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/addFixedIp"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds a fixed IP address to a server instance, which associates that address with the server. The fixed IP address is retrieved from the network that you specify in the request.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Add (associate) fixed IP (addFixedIp action)"
      }, 
      "x-post-addFloatingIp": {
        "consumes": [
          "application/json"
        ], 
        "description": "A pool of floating IP addresses, configured by the cloud\nadministrator, is available in OpenStack Compute. The project quota\ndefines the maximum number of floating IP addresses that you can\nallocate to the project. After you `create (allocate) a floating IP\naddress <http://developer.openstack.org/api-ref-\ncompute-v2.1.html#createFloatingIP>`_ for a project, you can\nassociate that address with the server. Specify the\n``addFloatingIp`` action in the request body.\n\nIf an instance is connected to multiple networks, you can associate\na floating IP address with a specific fixed IP address by using the\noptional ``fixed_address`` parameter.\n\nPreconditions\n\n- The server must exist.\n\n- You can only add a floating IP address to the server when its\n  status is ``available``.", 
        "operationId": "addFloatingIp", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/addFloatingIp"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds a floating IP address to a server, which associates that address with the server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Add (associate) floating IP (addFloatingIp action)"
      }, 
      "x-post-addSecurityGroup": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``addSecurityGroup`` action in the request body.", 
        "operationId": "addSecurityGroup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/addSecurityGroup"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds a security group to a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Add security group to a server (addSecurityGroup action)"
      }, 
      "x-post-changePassword": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``changePassword`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "changePassword", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/changePassword"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Changes the administrative password for a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Change administrative password (changePassword action)"
      }, 
      "x-post-confirmResize": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``confirmResize`` action in the request body.\n\nAfter you make this request, you typically must keep polling the\nserver status to determine whether the request succeeded. A\nsuccessfully confirming resize operation shows a status of\n``ACTIVE`` or ``SHUTOFF`` and a migration_status of ``confirmed``.\nYou can also see the resized server in the compute node that\nOpenStack Compute manages.\n\nPreconditions\n\n- You can only confirm the resized server where the status is\n  ``VERIFY_RESIZED``, the vm_status is ``RESIZED``, and the\n  migration_status is ``finished`` or ``confirming``.\n\n- If the server is locked, you must have administrator privileges to\n  confirm the server.\n\nTroubleshooting\n\n- If the server status remains ``RESIZED``, the request failed.\n  Ensure you meet the preconditions and run the request again. If\n  the request fails again, investigate the compute back end or ask\n  your cloud provider.", 
        "operationId": "confirmResize", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/confirmResize"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Confirms a pending resize action for a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Confirm resized server (confirmResize action)"
      }, 
      "x-post-createBackup": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``createBackup`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "createBackup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createBackup"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a back up of a server.", 
        "tags": [
          "admin-actions"
        ], 
        "x-title": "Create server back up (createBackup action)"
      }, 
      "x-post-createImage": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``createImage`` action in the request body.\n\nAfter you make this request, you typically must keep polling the\nstatus of the created image to determine whether the request\nsucceeded.\n\nIf the operation succeeds, the created image has a status of\n``active`` and the server status returns to the original status.\nYou can also see the new image in the image back end that OpenStack\nImage service manages.\n\nPreconditions\n\n- The server must exist.\n\n- You can only create a new image from the server when its status is\n  ``ACTIVE``, ``SHUTOFF``, ``PAUSED``, or ``SUSPENDED``.\n\n- The connection to the Image service is valid.\n\nTroubleshooting\n\n- If the image status remains uploading or shows another error\n  status, the request failed. Ensure you meet the preconditions and\n  run the request again. If the request fails again, investigate\n  the image back end.\n\n- If the server status does not go back to an original server's\n  status, the request failed. Ensure you meet the preconditions, or\n  check if there is another operation that causes race conditions\n  for the server, then run the request again. If the request fails\n  again, investigate the compute back end or ask your cloud\n  provider.\n\n- If the request fails due to an error on OpenStack Compute service,\n  the image is purged from the image store that OpenStack Image\n  service manages. Ensure you meet the preconditions and run the\n  request again. If the request fails again, investigate OpenStack\n  Compute service or ask your cloud provider.", 
        "operationId": "createImage", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createImage"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates an image from a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Create image (createImage action)"
      }, 
      "x-post-evacuate": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``evacuate`` action in the request body.", 
        "operationId": "evacuate", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/evacuate"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "adminPass": "MySecretPass"
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Evacuates a server from a failed host to a new one.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Evacuate server (evacuate action)"
      }, 
      "x-post-forceDelete": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``forceDelete`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "forceDelete", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/forceDelete"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Force-deletes a server before deferred cleanup.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Force-delete server (forceDelete action)"
      }, 
      "x-post-getRDPConsole": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``os-getRDPConsole`` action in the request body.", 
        "operationId": "getRDPConsole", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/getRDPConsole"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "console": {
                  "type": "rdp-html5", 
                  "url": "http://127.0.0.1:6083/?token=191996c3-7b0f-42f3-95a7-f1839f2da6ed"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Gets an `RDP <https://technet.microsoft.com/en-us/windowsserver/ee236407>`_ console for a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Get RDP console (os-getRDPConsole action)"
      }, 
      "x-post-getSPICEConsole": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``os-getSPICEConsole`` action in the request body.", 
        "operationId": "getSPICEConsole", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/getSPICEConsole"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "console": {
                  "type": "spice-html5", 
                  "url": "http://127.0.0.1:6082/spice_auto.html?token=a30e5d08-6a20-4043-958f-0852440c6af4"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Gets a SPICE console for a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Get SPICE console (os-getSPICEConsole action)"
      }, 
      "x-post-getSerialConsole": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``os-getSerialConsole`` action in the request body.", 
        "operationId": "getSerialConsole", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/getSerialConsole"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "console": {
                  "type": "serial", 
                  "url": "ws://127.0.0.1:6083/?token=f9906a48-b71e-4f18-baca-c987da3ebdb3"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Gets a serial console for a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Get serial console (os-getSerialConsole action)"
      }, 
      "x-post-getVNCConsole": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``os-getVNCConsole`` action in the request body.", 
        "operationId": "getVNCConsole", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/getVNCConsole"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "console": {
                  "type": "novnc", 
                  "url": "http://127.0.0.1:6080/vnc_auto.html?token=191996c3-7b0f-42f3-95a7-f1839f2da6ed"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Gets a VNC console for a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Get VNC console (os-getVNCConsole action)"
      }, 
      "x-post-injectNetworkInfo": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``injectNetworkInfo`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "injectNetworkInfo", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/injectNetworkInfo"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Injects network information into a server.", 
        "tags": [
          "admin-actions"
        ], 
        "x-title": "Inject network information (injectNetworkInfo action)"
      }, 
      "x-post-lock": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``lock`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "lock", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/lock"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Locks a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Lock server (lock action)"
      }, 
      "x-post-migrate": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``migrate`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "migrate", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/migrate"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Migrates a server to a host. The scheduler chooses the host.", 
        "tags": [
          "admin-actions"
        ], 
        "x-title": "Migrate server (migrate action)"
      }, 
      "x-post-migrateLive": {
        "consumes": [
          "application/json"
        ], 
        "description": "Use the ``host`` parameter to specify the destination host. If you\nomit this parameter, the scheduler chooses a host. If a scheduled\nhost is not suitable, the scheduler tries up to\n``migrate_max_retries`` rescheduling attempts.\n\nIf both source and destination hosts provide local disks, you can\nset the ``block_migration`` parameter to ``true``. If either host\nuses shared storage, the migration fails if you set this parameter\nto ``true``.\n\nPolicy defaults enable only users with the administrative role to\nperform this operation. Cloud providers can change these\npermissions through the ``policy.json`` file.", 
        "operationId": "migrateLive", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/migrateLive"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Live-migrates a server to a new host without rebooting.", 
        "tags": [
          "admin-actions"
        ], 
        "x-title": "Live-migrate server (os-migrateLive action)"
      }, 
      "x-post-pause": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``pause`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "pause", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/pause"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Pauses a server. Changes its status to ``PAUSED``.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Pause server (pause action)"
      }, 
      "x-post-reboot": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``reboot`` action in the request body.", 
        "operationId": "reboot", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/reboot"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "422": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Reboots a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Reboot server (reboot action)"
      }, 
      "x-post-rebuild": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``rebuild`` action in the request body.\n\nTo rebuild the server with preservation of the ephemeral partition,\nset the ``preserve_ephemeral`` parameter to ``true``.", 
        "operationId": "rebuild", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/rebuild"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "server": {
                  "accessIPv4": "192.0.2.0", 
                  "accessIPv6": "2002:0:0:0:0:0:c000:20e", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "adminPass": "seekr3t", 
                  "created": "2013-11-14T06:29:00Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "28d8d56f0e3a77e20891f455721cbb68032e017045e20aa5dfc6cb66", 
                  "id": "a0a80a94-3d81-4a10-822a-daa0cf9e870b", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2.1/servers/a0a80a94-3d81-4a10-822a-daa0cf9e870b", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/a0a80a94-3d81-4a10-822a-daa0cf9e870b", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "meta_var": "meta_val"
                  }, 
                  "name": "foobar", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2013-11-14T06:29:02Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Rebuilds a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Rebuild server (rebuild action)"
      }, 
      "x-post-removeFixedIp": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``removeFixedIp`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "removeFixedIp", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/removeFixedIp"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Removes, or disassociates, a fixed IP address from a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Remove (disassociate) fixed IP (removeFixedIp action)"
      }, 
      "x-post-removeFloatingIp": {
        "consumes": [
          "application/json"
        ], 
        "description": "The IP address is returned to the pool of IP addresses that is\navailable for all projects. When you remove a floating IP address\nand that IP address is still associated with a running instance, it\nis automatically disassociated from that instance.\n\nSpecify the ``removeFloatingIp`` action in the request body.", 
        "operationId": "removeFloatingIp", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/removeFloatingIp"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Removes, or disassociates, a floating IP address from a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Remove (disassociate) floating IP (removeFloatingIp action)"
      }, 
      "x-post-removeSecurityGroup": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``removeSecurityGroup`` action in the request body.", 
        "operationId": "removeSecurityGroup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/removeSecurityGroup"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Removes a security group from a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Remove security group from a server (removeSecurityGroup action)"
      }, 
      "x-post-rescue": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``rescue`` action in the request body.\n\nIf you specify the ``rescue_image_ref`` extended attribute, the\nimage is used to rescue the instance. If you omit an image\nreference, the base image reference is used by default.\n\nAsynchronous Postconditions\n\n- After you successfully rescue a server and make a ``GET\n  /v2.1/\u200b{tenant_id}\u200b/servers/\u200b{server_id}\u200b`` request, its status\n  changes to ``RESCUE``.", 
        "operationId": "rescue", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/rescue"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "adminPass": "MySecretPass"
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/rescue_202"
            }
          }
        }, 
        "summary": "Puts a server in rescue mode and changes its status to ``RESCUE``.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Rescue server (rescue action)"
      }, 
      "x-post-resetNetwork": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``resetNetwork`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "resetNetwork", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/resetNetwork"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Resets networking on a server.", 
        "tags": [
          "admin-actions"
        ], 
        "x-title": "Reset networking on a server (resetNetwork action)"
      }, 
      "x-post-resetState": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``os-resetState`` action and the ``state`` in the\nrequest body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "resetState", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/resetState"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Resets the state of a server.", 
        "tags": [
          "admin-actions"
        ], 
        "x-title": "Reset server state (os-resetState action)"
      }, 
      "x-post-resize": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``resize`` action in the request body.\n\nA successfully resized server shows a ``VERIFY_RESIZE`` status,\n``RESIZED`` VM status, and ``finished`` migration status. If you\nset the ``resize_confirm_window`` option of the Compute service to\nan integer value, the Compute service automatically confirms the\nresize operation after the set interval in seconds.\n\nPreconditions\n\n- You can only resize a server when its status is ``ACTIVE`` or\n  ``SHUTOFF``.\n\n- If the server is locked, you must have administrator privileges to\n  resize the server.", 
        "operationId": "resize", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/resize"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Resizes a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Resize server (resize action)"
      }, 
      "x-post-restore": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``restore`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "restore", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/restore"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Restores a previously soft-deleted server instance. You cannot use this method to restore deleted instances.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Restore soft-deleted instance (restore action)"
      }, 
      "x-post-resume": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``resume`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "resume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/resume"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Resumes a suspended server and changes its status to ``ACTIVE``.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Resume suspended server (resume action)"
      }, 
      "x-post-revertResize": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``revertResize`` action in the request body.\n\nAfter you make this request, you typically must keep polling the\nserver status to determine whether the request succeeded. A\nsuccessfully reverting resize operation shows a status of\n``ACTIVE`` or ``SHUTOFF`` and a migration_status of ``reverted``.\nYou can also see the reverted server in the compute node that\nOpenStack Compute manages.\n\nPreconditions\n\n- You can only confirm the resized server where the status is\n  ``VERIFY_RESIZE`` and the vm_status is ``RESIZED``.\n\n- If the server is locked, you must have administrator privileges to\n  revert the resizing.\n\nTroubleshooting\n\n- If the server status remains ``RESIZED``, the request failed.\n  Ensure you meet the preconditions and run the request again. If\n  the request fails again, investigate the compute back end.\n\n- The server is not reverted in the compute node that OpenStack\n  Compute manages.", 
        "operationId": "revertResize", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/revertResize"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Cancels and reverts a pending resize action for a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Revert resized server (revertResize action)"
      }, 
      "x-post-shelve": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``shelve`` action in the request body.\n\nAll associated data and resources are kept but anything still in\nmemory is not retained. To restore a shelved instance, use the\n``unshelve`` action. To remove a shelved instance, use the\n``shelveOffload`` action.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.\n\nPreconditions\n\n- The server status must be ``ACTIVE``, ``SHUTOFF``, ``PAUSED``, or\n  ``SUSPENDED``.\n\n- If the server is locked, you must have administrator privileges to\n  shelve the server.\n\nAsynchronous Postconditions\n\n- After you successfully shelve a server, its status changes to\n  ``SHELVED`` and the image status is ``ACTIVE``. The server\n  instance data appears on the compute node that the Compute\n  service manages.\n\n- If you boot the server from volumes or set the\n  ``shelved_offload_time`` option to 0, the Compute service\n  automatically deletes the instance on compute nodes and changes\n  the server status to ``SHELVED_OFFLOADED``.\n\nTroubleshooting\n\n- If the server status does not change to ``SHELVED`` or\n  ``SHELVED_OFFLOADED``, the shelve operation failed. Ensure that\n  you meet the preconditions and run the request again. If the\n  request fails again, investigate whether another operation is\n  running that causes a race condition.", 
        "operationId": "shelve", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/shelve"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shelves a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Shelve server (shelve action)"
      }, 
      "x-post-shelveOffload": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``shelveOffload`` action in the request body.\n\nData and resource associations are deleted. If an instance is no\nlonger needed, you can remove that instance from the hypervisor to\nminimize resource usage.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.\n\nPreconditions\n\n- The server status must be ``SHELVED``.\n\n- If the server is locked, you must have administrator privileges to\n  shelve-offload the server.\n\nAsynchronous Postconditions\n\n- After you successfully shelve-offload a server, its status changes\n  to ``SHELVED_OFFLOADED``. The server instance data appears on the\n  compute node.\n\nTroubleshooting\n\n- If the server status does not change to ``SHELVED_OFFLOADED``, the\n  shelve-offload operation failed. Ensure that you meet the\n  preconditions and run the request again. If the request fails\n  again, investigate whether another operation is running that\n  causes a race condition.", 
        "operationId": "shelveOffload", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/shelveOffload"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shelf-offloads, or removes, a shelved server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Shelf-offload (remove) server (shelveOffload action)"
      }, 
      "x-post-start": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``os-start`` action in the request body.\n\nPreconditions\n\n- The server status must be ``SHUTOFF``.\n\n- If the server is locked, you must have administrator privileges to\n  start the server.\n\nAsynchronous Postconditions\n\n- After you successfully start a server, its status changes to\n  ``ACTIVE``. The server appears on the compute node that the\n  Compute service manages.\n\nTroubleshooting\n\n- If the server status does not change to ``ACTIVE``, the start\n  operation failed. Ensure that you meet the preconditions and run\n  the request again. If the request fails again, investigate\n  whether another operation is running that causes a race\n  condition.", 
        "operationId": "start", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/start"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Starts a stopped server and changes its status to ``ACTIVE``.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Start server (os-start action)"
      }, 
      "x-post-stop": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``os-stop`` action in the request body.\n\nPreconditions\n\n- The server status must be ``ACTIVE`` or ``ERROR``.\n\n- If the server is locked, you must have administrator privileges to\n  stop the server.\n\nAsynchronous Postconditions\n\n- After you successfully stop a server, its status changes to\n  ``SHUTOFF``. The server instance data appears only on the compute\n  node that Compute service manages.", 
        "operationId": "stop", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/stop"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Stops a running server and changes its status to ``SHUTOFF``.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Stop server (os-stop action)"
      }, 
      "x-post-suspend": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``suspend`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "suspend", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/suspend"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Suspends a server and changes its status to ``SUSPENDED``.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Suspend server (suspend action)"
      }, 
      "x-post-triggerCrashDump": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``trigger_crash_dump`` action in the request body.\n\nWhen a crash dump is triggered for a virtual server, it causes a\nsystem reboot. This action can cause data loss. Also, network\nconnectivity can be lost. Once the server comes back online, you\ncan find a Kernel Crash Dump file in a certain location of the\nfilesystem. For example, for Ubuntu you can find it in the\n``/var/crash`` directory.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "triggerCrashDump", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/triggerCrashDump"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Trigger a crash dump in a server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Trigger crash dump in server (trigger_crash_dump action)"
      }, 
      "x-post-unlock": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``unlock`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "unlock", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unlock"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Unlocks a locked server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Unlock server (unlock action)"
      }, 
      "x-post-unpause": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``unpause`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "unpause", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unpause"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Unpauses a paused server and changes its status to ``ACTIVE``.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Unpause server (unpause action)"
      }, 
      "x-post-unrescue": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``unrescue`` action in the request body.\n\nPreconditions\n\n- The server must exist.\n\n- You can only unrescue a server when its status is ``RESCUE``.\n\nAsynchronous Postconditions\n\n- After you successfully unrescue a server and make a ``GET\n  /v2.1/\u200b{tenant_id}\u200b/servers/\u200b{server_id}\u200b`` request, its status\n  changes to ``ACTIVE``.", 
        "operationId": "unrescue", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unrescue"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Unrescues a server. Changes status to ``ACTIVE``.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Unrescue server (unrescue action)"
      }, 
      "x-post-unshelve": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the ``unshelve`` action in the request body.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.\n\nPreconditions\n\n- The server status must be ``SHELVED`` or ``SHELVED_OFFLOADED``.\n\n- If the server is locked, you must have administrator privileges to\n  unshelve the server.\n\nAsynchronous Postconditions\n\n- After you successfully shelve a server, its status changes to\n  ``ACTIVE``. The server appears on the compute node.\n\n- The shelved image is deleted from the list of images returned by\n  an API call.\n\nTroubleshooting\n\n- If the server status does not change to ``ACTIVE``, the unshelve\n  operation failed. Ensure that you meet the preconditions and run\n  the request again. If the request fails again, investigate\n  whether another operation is running that causes a race\n  condition.", 
        "operationId": "unshelve", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unshelve"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Unshelves, or restores, a shelved server.", 
        "tags": [
          "server-actions"
        ], 
        "x-title": "Unshelve (restore) shelved server (unshelve action)"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/consoles": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listConsoles", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "consoles": [
                  {
                    "console": {
                      "console_type": "fake", 
                      "id": 1
                    }
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all consoles for a server instance.", 
        "tags": [
          "os-consoles-v2.1"
        ], 
        "x-title": "Lists consoles"
      }, 
      "post": {
        "consumes": [], 
        "description": "", 
        "operationId": "createConsole", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a console for a server instance.", 
        "tags": [
          "os-consoles-v2.1"
        ], 
        "x-title": "Create console"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/consoles/{console_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteConsole", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the console.", 
            "format": "", 
            "in": "path", 
            "name": "console_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a console for a server instance.", 
        "tags": [
          "os-consoles-v2.1"
        ], 
        "x-title": "Delete console"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showConsole", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the console.", 
            "format": "", 
            "in": "path", 
            "name": "console_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "consoles": [
                  {
                    "console": {
                      "console_type": "fake", 
                      "id": 1
                    }
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a console for a server instance.", 
        "tags": [
          "os-consoles-v2.1"
        ], 
        "x-title": "Show console details"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/diagnostics": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "showDiagnostics", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cpu0_time": 17300000000, 
                "memory": 524288, 
                "vda_errors": -1, 
                "vda_read": 262144, 
                "vda_read_req": 112, 
                "vda_write": 5778432, 
                "vda_write_req": 488, 
                "vnet1_rx": 2070139, 
                "vnet1_rx_drop": 0, 
                "vnet1_rx_errors": 0, 
                "vnet1_rx_packets": 26701, 
                "vnet1_tx": 140208, 
                "vnet1_tx_drop": 0, 
                "vnet1_tx_errors": 0, 
                "vnet1_tx_packets": 662
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows basic usage data for a server.", 
        "tags": [
          "diagnostics"
        ], 
        "x-title": "Show server diagnostics"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/ips": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "list-ips", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "addresses": {
                  "private": [
                    {
                      "addr": "192.168.0.3", 
                      "version": 4
                    }
                  ]
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists IP addresses that are assigned to an instance.", 
        "tags": [
          "server-ips"
        ], 
        "x-title": "List IPs"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/ips/{network_label}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "show-ip", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The network label, such as ``public`` or ``private``.", 
            "format": "", 
            "in": "path", 
            "name": "network_label", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "private": [
                  {
                    "addr": "192.168.0.3", 
                    "version": 4
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows IP addresses details for a network label of a server instance.", 
        "tags": [
          "server-ips"
        ], 
        "x-title": "Show IP details"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/metadata": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "listServerMetadata", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "foo": "Foo Value"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists all metadata for a server.", 
        "tags": [
          "server-metadata-v2.1"
        ], 
        "x-title": "List all metadata"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Replaces metadata items that match keys. Does not modify items that\nare not in the request.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "updateServerMetadata", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "foo": "Foo Value"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Updates one or more metadata items for a server.", 
        "tags": [
          "server-metadata-v2.1"
        ], 
        "x-title": "Update metadata items"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates any metadata items that do not already exist in the server.\nRemoves and completely replaces any metadata items that already\nexist in the server with the metadata items in the request.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "createServerMetadata", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "foo": "Foo Value"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates or replaces one or more metadata items for a server.", 
        "tags": [
          "server-metadata-v2.1"
        ], 
        "x-title": "Create or replace metadata items"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/metadata/{key}": {
      "delete": {
        "consumes": [], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "deleteServerMetadataItem", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The metadata item key, as a string. Maximum length is 255\ncharacters.", 
            "format": "", 
            "in": "path", 
            "name": "key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a metadata item, by key, from a server.", 
        "tags": [
          "server-metadata-v2.1"
        ], 
        "x-title": "Delete metadata item"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "showServerMetadataItem", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The metadata item key, as a string. Maximum length is 255\ncharacters.", 
            "format": "", 
            "in": "path", 
            "name": "key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "meta": {
                  "foo": "Foo Value"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a metadata item, by key, for a server.", 
        "tags": [
          "server-metadata-v2.1"
        ], 
        "x-title": "Show metadata item details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a metadata item that does not already exist in the server.\nRemoves and completely replaces a metadata item that already exists\nin the server with the metadata item in the request.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "setServerMetadataItem", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The metadata item key, as a string. Maximum length is 255\ncharacters.", 
            "format": "", 
            "in": "path", 
            "name": "key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "meta": {
                  "foo": "Bar Value"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates or replaces a metadata item, by key, for a server.", 
        "tags": [
          "server-metadata-v2.1"
        ], 
        "x-title": "Create or update metadata item"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-baremetal-nodes": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listBaremetalNodes", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "nodes": [
                  {
                    "cpus": 8, 
                    "id": 1, 
                    "instance_uuid": null, 
                    "interfaces": [
                      {
                        "address": "aa:aa:aa:aa:aa:aa", 
                        "datapath_id": null, 
                        "id": 1, 
                        "port_no": null
                      }
                    ], 
                    "local_gb": 128, 
                    "memory_mb": 8192, 
                    "pm_address": "10.1.2.3", 
                    "pm_user": "pm_user", 
                    "pxe_config_path": null, 
                    "service_host": "host", 
                    "task_state": null, 
                    "terminal_port": 8000, 
                    "updated_at": null, 
                    "uuid": "6fae68da-108b-4a9d-87c4-88831ee1241b"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists the bare metal nodes that are associated with a server.", 
        "tags": [
          "os-baremetal-nodes-v2.1"
        ], 
        "x-title": "List bare metal nodes"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- You can add a bare metal node to a server with an ``ACTIVE``,\n  ``PAUSED``, ``SHUTOFF``, ``VERIFY_RESIZE``, or ``SOFT_DELETED``\n  status.\n\n- You can add a bare metal node to a server with a status that is\n  not locked.", 
        "operationId": "addBaremetalNode", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "node": {
                  "cpus": 8, 
                  "id": 1, 
                  "instance_uuid": null, 
                  "interfaces": [
                    {
                      "address": "12:34:56:78:90:ab", 
                      "datapath_id": null, 
                      "id": 1, 
                      "port_no": null
                    }
                  ], 
                  "local_gb": 128, 
                  "memory_mb": 8192, 
                  "pm_address": "10.1.2.3", 
                  "pm_user": "pm_user", 
                  "pxe_config_path": null, 
                  "service_host": "host", 
                  "task_state": null, 
                  "terminal_port": 8000, 
                  "updated_at": null, 
                  "uuid": "0a130464-bccc-4e36-b9d3-9a8c98e636ae"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds a bare metal node to a server.", 
        "tags": [
          "os-baremetal-nodes-v2.1"
        ], 
        "x-title": "Add bare metal node"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-baremetal-nodes/action": {
      "x-post-addInterfaceToBaremetalNode": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "addInterfaceToBaremetalNode", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "interface": {
                  "address": "aa:aa:aa:aa:aa:aa", 
                  "datapath_id": null, 
                  "id": 1, 
                  "port_no": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds an interface to a bare metal node that is associated with a server.", 
        "tags": [
          "os-baremetal-nodes-v2.1"
        ], 
        "x-title": "Add interface to bare metal node"
      }, 
      "x-post-deleteInterfaceFromBaremetalNode": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "deleteInterfaceFromBaremetalNode", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes an interface from a bare metal node that is associated with a server.", 
        "tags": [
          "os-baremetal-nodes-v2.1"
        ], 
        "x-title": "Delete interface from bare metal node"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-baremetal-nodes/{node_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteBaremetalNode", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The node ID.", 
            "format": "", 
            "in": "path", 
            "name": "node_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a bare metal node from a server.", 
        "tags": [
          "os-baremetal-nodes-v2.1"
        ], 
        "x-title": "Delete bare metal node"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- The bare metal node must be associated with the server.", 
        "operationId": "showBaremetalNodeDetails", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The node ID.", 
            "format": "", 
            "in": "path", 
            "name": "node_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "node": {
                  "cpus": 8, 
                  "id": 1, 
                  "instance_uuid": null, 
                  "interfaces": [
                    {
                      "address": "aa:aa:aa:aa:aa:aa", 
                      "datapath_id": null, 
                      "id": 1, 
                      "port_no": null
                    }
                  ], 
                  "local_gb": 128, 
                  "memory_mb": 8192, 
                  "pm_address": "10.1.2.3", 
                  "pm_user": "pm_user", 
                  "pxe_config_path": null, 
                  "service_host": "host", 
                  "task_state": null, 
                  "terminal_port": 8000, 
                  "updated_at": null, 
                  "uuid": "c862b836-c7c1-4f7f-8081-6766fa9cf38b"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a bare metal node.", 
        "tags": [
          "os-baremetal-nodes-v2.1"
        ], 
        "x-title": "Show bare metal node details"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-console-auth-token": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "This feature is available for ``rdp-html5`` console type only.", 
        "operationId": "showConsoleAuth", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "console": {
                  "host": "localhost", 
                  "instance_uuid": "b48316c5-71e8-45e4-9884-6c78055b9b13", 
                  "internal_access_path": "51af38c3-555e-4884-a314-6c8cdde37444", 
                  "port": 5900
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows the authentication token for a console for a server instance.", 
        "tags": [
          "os-consoles-v2.1"
        ], 
        "x-title": "Show console authentication token"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-instance-actions": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listServerActions", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "instanceActions": [
                  {
                    "action": "resize", 
                    "instance_uuid": "b48316c5-71e8-45e4-9884-6c78055b9b13", 
                    "message": "", 
                    "project_id": "842", 
                    "request_id": "req-25517360-b757-47d3-be45-0e8d2a01b36a", 
                    "start_time": "2012-12-05T01:00:00.000000", 
                    "user_id": "789"
                  }, 
                  {
                    "action": "reboot", 
                    "instance_uuid": "b48316c5-71e8-45e4-9884-6c78055b9b13", 
                    "message": "", 
                    "project_id": "147", 
                    "request_id": "req-3293a3f1-b44c-4609-b8d2-d81b105636b8", 
                    "start_time": "2012-12-05T00:00:00.000000", 
                    "user_id": "789"
                  }
                ]
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Lists actions for a server.", 
        "tags": [
          "instance-actions"
        ], 
        "x-title": "List actions for server"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-instance-actions/{request_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showServerAction", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The ID of the request.", 
            "format": "", 
            "in": "path", 
            "name": "request_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "instanceAction": {
                  "action": "reboot", 
                  "events": [
                    {
                      "event": "schedule", 
                      "finish_time": "2012-12-05T01:02:00.000000", 
                      "result": "Success", 
                      "start_time": "2012-12-05T01:00:02.000000", 
                      "traceback": ""
                    }, 
                    {
                      "event": "compute_create", 
                      "finish_time": "2012-12-05T01:04:00.000000", 
                      "result": "Success", 
                      "start_time": "2012-12-05T01:03:00.000000", 
                      "traceback": ""
                    }
                  ], 
                  "instance_uuid": "b48316c5-71e8-45e4-9884-6c78055b9b13", 
                  "message": "", 
                  "project_id": "147", 
                  "request_id": "req-3293a3f1-b44c-4609-b8d2-d81b105636b8", 
                  "start_time": "2012-12-05T00:00:00.000000", 
                  "user_id": "789"
                }
              }
            }, 
            "headers": {
              "x-openstack-request-id": {
                "description": "A unique request ID that provides tracking for the request.\nProvider must configure middleware to return a request ID header in\na response.", 
                "format": "", 
                "type": "string"
              }
            }, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a server action.", 
        "tags": [
          "instance-actions"
        ], 
        "x-title": "Show server action details"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-interface": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listAttachedInterfaces", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "interfaceAttachments": [
                  {
                    "fixed_ips": [
                      {
                        "ip_address": "192.168.1.3", 
                        "subnet_id": "f8a6e8f8-c2ec-497c-9f23-da9616de54ef"
                      }
                    ], 
                    "mac_addr": "fa:16:3e:4c:2c:30", 
                    "net_id": "3cb9bc59-5699-4588-a4b1-b87f96708bc6", 
                    "port_id": "ce531f90-199f-48c0-816c-13e38010b442", 
                    "port_state": "ACTIVE"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listAttachedInterfaces_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists port interfaces that are attached to a server.", 
        "tags": [
          "os-interface-v2.1"
        ], 
        "x-title": "List port interfaces"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createAttachInterface", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createAttachInterface"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "interfaceAttachment": {
                  "fixed_ips": [
                    {
                      "ip_address": "192.168.1.3", 
                      "subnet_id": "f8a6e8f8-c2ec-497c-9f23-da9616de54ef"
                    }
                  ], 
                  "mac_addr": "fa:16:3e:4c:2c:30", 
                  "net_id": "3cb9bc59-5699-4588-a4b1-b87f96708bc6", 
                  "port_id": "ce531f90-199f-48c0-816c-13e38010b442", 
                  "port_state": "ACTIVE"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createAttachInterface_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a port interface and uses it to attach a port to a server instance.", 
        "tags": [
          "os-interface-v2.1"
        ], 
        "x-title": "Create interface"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-interface/{port_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteAttachedInterface", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the port.", 
            "format": "", 
            "in": "path", 
            "name": "port_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Detaches a port interface.", 
        "tags": [
          "os-interface-v2.1"
        ], 
        "x-title": "Detach interface"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showAttachedInterface", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the port.", 
            "format": "", 
            "in": "path", 
            "name": "port_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "interfaceAttachment": {
                  "fixed_ips": [
                    {
                      "ip_address": "192.168.1.3", 
                      "subnet_id": "f8a6e8f8-c2ec-497c-9f23-da9616de54ef"
                    }
                  ], 
                  "mac_addr": "fa:16:3e:4c:2c:30", 
                  "net_id": "3cb9bc59-5699-4588-a4b1-b87f96708bc6", 
                  "port_id": "ce531f90-199f-48c0-816c-13e38010b442", 
                  "port_state": "ACTIVE"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a port interface that is attached to a server.", 
        "tags": [
          "os-interface-v2.1"
        ], 
        "x-title": "Show port interface details"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-security-groups": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listSecGroupsByServer", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "security_groups": [
                  {
                    "description": "default", 
                    "id": 1, 
                    "name": "default", 
                    "rules": [], 
                    "tenant_id": "openstack"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists security groups for a server.", 
        "tags": [
          "security-groups"
        ], 
        "x-title": "List security groups by server"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-server-password": {
      "delete": {
        "consumes": [], 
        "description": "This action does not actually change the instance server password.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "clearPassword", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Clears the encrypted administrative password for a server, which removes it from the metadata server.", 
        "tags": [
          "server-password"
        ], 
        "x-title": "Clear admin password"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "This operation calls the metadata service to query metadata\ninformation and does not read password information from the server\nitself.\n\nPolicy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Cloud providers\ncan change these permissions through the ``policy.json`` file.", 
        "operationId": "showPassword", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "password": "xlozO3wLCBRWAa2yDjCCVx8vwNPypxnypmRYDa/zErlQ+EzPe1S/Gz6nfmC52mOlOSCRuUOmG7kqqgejPof6M7bOezS387zjq4LSvvwp28zUknzy4YzfFGhnHAdai3TxUJ26pfQCYrq8UTzmKF2Bq8ioSEtVVzM0A96pDh8W2i7BOz6MdoiVyiev/I1K2LsuipfxSJR7Wdke4zNXJjHHP2RfYsVbZ/k9ANu+Nz4iIH8/7Cacud/pphH7EjrY6a4RZNrjQskrhKYed0YERpotyjYk1eDtRe72GrSiXteqCM4biaQ5w3ruS+AcX//PXk3uJ5kC7d67fPXaVz4WaQRYMg=="
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows the administrative password for a server.", 
        "tags": [
          "server-password"
        ], 
        "x-title": "Show server password"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-virtual-interfaces": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Policy defaults enable only users with the administrative role or\nthe owner of the server to perform this operation. Change these\npermissions through the ``policy.json`` file.\n\nThe API v2 returns the network ID in the ``OS-EXT-VIF-NET:net_id``\nresponse attribute.\n\nThe API v2.1 base version does not return the network ID.\n\nThe API v2.12 microversion returns the network ID in the ``net_id``\nresponse attribute.", 
        "operationId": "listVirtualInterfaces", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "virtual_interfaces": [
                  {
                    "id": "cec8b9bb-5d22-4104-b3c8-4c35db3210a6", 
                    "mac_address": "fa:16:3e:3c:ce:6f"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listVirtualInterfaces_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists the virtual interfaces for an instance.", 
        "tags": [
          "virtual-interfaces"
        ], 
        "x-title": "List virtual interfaces"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-volume_attachments": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumeAttachments", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volumeAttachments": [
                  {
                    "device": "/dev/sdd", 
                    "id": "a26887c6-c47b-4654-abb5-dfadf7d3f803", 
                    "serverId": "4d8c3732-a248-40ed-bebc-539a6ffd25c0", 
                    "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
                  }, 
                  {
                    "device": "/dev/sdc", 
                    "id": "a26887c6-c47b-4654-abb5-dfadf7d3f804", 
                    "serverId": "4d8c3732-a248-40ed-bebc-539a6ffd25c0", 
                    "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f804"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists the volume attachments for a server.", 
        "tags": [
          "os-volume-attachments-v2.1"
        ], 
        "x-title": "List volume attachments"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- You can attach a volume to a server with an ``ACTIVE``,\n  ``PAUSED``, ``SHUTOFF``, ``VERIFY_RESIZE``, or ``SOFT_DELETED``\n  status.\n\n- You can attach a volume to a server with a status that is not\n  locked.\n\n- You can attach a volume with a ``available`` status.\n\n- You can attach a volume when its volume type supports volume\n  attaching.\n\nAsynchronous Postconditions\n\n- After successfully attaching a volume to a server, the volume\n  status changes to ``in-use``.\n\n- You can see the attached volume when you log in to the server.\n\nTroubleshooting\n\n- If the volume status remains in ``available`` state, the request\n  failed. Ensure that you meet the preconditions and run the\n  request again. If the request fails again, investigate the server\n  and the volume status.", 
        "operationId": "attachVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/attachVolume"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volumeAttachment": {
                  "device": "/dev/vdd", 
                  "id": "a26887c6-c47b-4654-abb5-dfadf7d3f803", 
                  "serverId": "0c92f3f6-c253-4c9b-bd43-e880a8d2eb0a", 
                  "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Attaches a volume to a server.", 
        "tags": [
          "os-volume-attachments-v2.1"
        ], 
        "x-title": "Attach volume to server"
      }
    }, 
    "/v2.1/{tenant_id}/servers/{server_id}/os-volume_attachments/{attachment_id}": {
      "delete": {
        "consumes": [], 
        "description": "Preconditions\n\n- The volume must be attached to the server.\n\n- You can detach a volume when the server status is ``ACTIVE``,\n  ``PAUSED``, ``SHUTOFF``, ``VERIFY_RESIZE``, or ``SOFT_DELETED``.\n\n- You can detach a volume when its status is ``in-use``.\n\n- You can detach a volume from a server with a status that is not\n  locked.\n\n- You cannot detach a root device volume.\n\nAsynchronous Postconditions\n\n- After successfully detaching a volume, its status changes to\n  ``available``.\n\n- The detached volume is no longer visible on the server.\n\nTroubleshooting\n\n- If the volume status remains in ``in-use`` state, the request\n  failed. Ensure that you meet the preconditions and run the\n  request again. If the request fails again, investigate whether\n  another operation is running that causes a race condition.\n\n- If you attempt to detach a root device volume, this operation\n  returns the ``Forbidden (403)`` response code.", 
        "operationId": "deleteVolumeAttachment", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the attachment.", 
            "format": "", 
            "in": "path", 
            "name": "attachment_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Detaches a volume from a server.", 
        "tags": [
          "os-volume-attachments-v2.1"
        ], 
        "x-title": "Detach volume"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- The volume must be attached to the server.", 
        "operationId": "getVolumeAttachmentDetails", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the attachment.", 
            "format": "", 
            "in": "path", 
            "name": "attachment_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volumeAttachment": {
                  "device": "/dev/sdd", 
                  "id": "a26887c6-c47b-4654-abb5-dfadf7d3f803", 
                  "serverId": "2390fb4d-1693-45d7-b309-e29c4af16538", 
                  "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "409": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "415": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a volume attachment.", 
        "tags": [
          "os-volume-attachments-v2.1"
        ], 
        "x-title": "Show volume attachment details"
      }
    }
  }, 
  "produces": [
    "application/json"
  ], 
  "swagger": "2.0", 
  "tags": [
    {
      "description": "API versions", 
      "name": "versions", 
      "x-summary": "Lists information for all API versions."
    }, 
    {
      "description": "Servers (servers)", 
      "name": "servers-v2.1", 
      "x-summary": "Lists, creates, shows details for, updates, and deletes servers.\n\n**Passwords**\n\nWhen you create a server, you can specify a password through the\noptional adminPass attribute. The password must meet the complexity\nrequirements set by your OpenStack Compute provider. The server\nmight enter an ``ERROR`` state if the complexity requirements are\nnot met. In this case, a client might issue a change password\naction to reset the server password.\n\nIf you do not specify a password, the API generates and assigns a\nrandom password that it returns in the response object. This\npassword meets the security requirements set by the compute\nprovider. For security reasons, subsequent GET calls do not require\nthis password.\n\n**Server metadata**\n\nYou can specify custom server metadata at server launch time. The\nmaximum size for each metadata key-value pair is 255 bytes. The\ncompute provider determines the maximum number of key-value pairs\nfor each server. You can query this value through the\n``maxServerMeta`` absolute limit.\n\n**Server networks**\n\nYou can specify one or more networks to which the server connects\nat launch time. Users can also specify a specific port on the\nnetwork or the fixed IP address to assign to the server interface.\n\nYou can use both IPv4 and IPv6 addresses as access addresses and\nyou can assign both addresses simultaneously. You can update access\naddresses after you create a server.\n\n**Server personality**\n\nTo customize the personality of a server instance, you can inject\ndata into its file system. For example, you might insert ssh keys,\nset configuration files, or store data that you want to retrieve\nfrom inside the instance. This customization method provides\nminimal launch-time personalization. If you require significant\ncustomization, create a custom image.\n\nFollow these guidelines when you inject files:\n\n- The maximum size of the file path data is 255 bytes.\n\n- Encode the file contents as a Base64 string. The compute provider\n  determines the maximum size of the file contents. The image that\n  you use to create the server determines this value.\n\n  The maximum limit refers to the number of bytes in the decoded\n  data and not to the number of characters in the encoded data.\n\n- The ``maxPersonality`` absolute limit defines the maximum number\n  of file path and content pairs that you can supply. The compute\n  provider determines this value.\n\n- The ``maxPersonalitySize`` absolute limit is a byte limit that\n  applies to all images in the deployment. Providers can set\n  additional per-image personality limits.\n\nThe file injection might not occur until after the server builds\nand boots.\n\nAfter file injection, only system administrators can access\npersonality files. For example, on Linux, all files have root as\nthe owner and the root group as the group owner, and allow only\nuser and group read access (``chmod 440``).\n\n**Server access addresses**\n\nIn a hybrid environment, the underlying implementation might not\ncontrol the IP address of a server. Instead, the access IP address\nmight be part of the dedicated hardware; for example, a router/NAT\ndevice. In this case, you cannot use the addresses that the\nimplementation provides to access the server from outside the local\nLAN. Instead, the API might assign a separate access address at\ncreation time to provide access to the server. This address might\nnot be directly bound to a network interface on the server and\nmight not necessarily appear when you query the server addresses.\nHowever, clients should use an access address to access the server\ndirectly."
    }, 
    {
      "description": "Servers multiple create (servers)", 
      "name": "multiple-create", 
      "x-summary": "Creates one or more servers.\n\nOptionally, you can set ``\"return_reservation_id\": \"True\"`` in the\nrequest body to request that a reservation ID be returned instead\nof the newly created instance information. With this parameter, the\nresponse shows only the reservation ID."
    }, 
    {
      "description": "Servers - run an action (servers, action)", 
      "name": "server-actions", 
      "x-summary": "Enables all users to performs an action on a server. Specify the\naction in the request body.\n\nYou can associate a fixed or floating IP address with a server\ninstance, or disassociate a fixed or floating IP address from a\nserver instance. You can attach a volume to a server.\n\nYou can create an image from a server, evacuate a server from a\nfailed host to a new host, and force-delete a server before\ndeferred cleanup. You can lock, pause, reboot, rebuild, rescue,\nresize, resume, confirm the resize of, revert a pending resize for,\nshelve, shelf-offload, unshelve, start, stop, unlock, unpause, and\nunrescue a server. You can also change the password of the server\nand add a security group to or remove a security group from a\nserver. You can also trigger a crash dump into a server since\nMitaka release.\n\nYou can get an RDP, serial, SPICE, or VNC console for a server."
    }, 
    {
      "description": "Servers - run an administrative action (servers, action)", 
      "name": "admin-actions", 
      "x-summary": "Enables administrators to perform an action on a server. Specify\nthe action in the request body.\n\nYou can change the administrative password for, create a back up\nof, and inject network information into a server.\n\nYou can migrate, live-migrate, reset networking on, and reset the\nstate of a server."
    }, 
    {
      "description": "Servers diagnostics (servers, diagnostics)", 
      "name": "diagnostics", 
      "x-summary": "Shows the usage data for a server."
    }, 
    {
      "description": "Servers IPs (servers, ips)", 
      "name": "server-ips", 
      "x-summary": "Lists the IP addresses for an instance and shows details for an IP\naddress."
    }, 
    {
      "description": "Server metadata (servers, metadata)", 
      "name": "server-metadata-v2.1", 
      "x-summary": "Lists metadata, creates or replaces one or more metadata items, and\nupdates one or more metadata items for a server.\n\nShows details for, creates or replaces, and updates a metadata\nitem, by key, for a server."
    }, 
    {
      "description": "Servers - list actions (servers, os-instance-actions)", 
      "name": "instance-actions", 
      "x-summary": "All users can list available actions for a server.\n\nAll users can show details for a server action; however, only\nadministrators can view server events in server action details."
    }, 
    {
      "description": "Port interfaces (servers, os-interface)", 
      "name": "os-interface-v2.1", 
      "x-summary": "Creates a port interface and uses it to attach a port to a server\nand detaches a port interface from a server. Also, lists all port\ninterfaces and shows details for a port interface."
    }, 
    {
      "description": "Servers password (servers, os-server-password)", 
      "name": "server-password", 
      "x-summary": "Shows the encrypted administrative password. Also, clears the\nencrypted administrative password for a server, which removes it\nfrom the metadata server."
    }, 
    {
      "description": "Servers virtual interfaces (servers, os-virtual-interfaces)", 
      "name": "virtual-interfaces", 
      "x-summary": "Lists virtual interfaces for a server instance."
    }, 
    {
      "description": "Servers with volume attachments (servers, os-volume_attachments)", 
      "name": "os-volume-attachments-v2.1", 
      "x-summary": "Attaches volumes that are created through the volume API to server\ninstances. Also, lists volume attachments for a server instance,\nshows details for a volume attachment, and detaches a volume."
    }, 
    {
      "description": "Flavors with extended attributes (flavors)", 
      "name": "flavors", 
      "x-summary": "Shows information about flavors."
    }, 
    {
      "description": "Flavors access (flavors, os-flavor-access, action)", 
      "name": "flavor-access", 
      "x-summary": "Lists tenants who have access to a private flavor and adds private\nflavor access to and removes private flavor access from tenants. By\ndefault, only administrators can manage private flavor access. A\nprivate flavor has ``is_public`` set to ``false`` while a public\nflavor has ``is_public`` set to ``true``."
    }, 
    {
      "description": "Flavors extra-specs (flavors, os-flavor-extra-specs)", 
      "name": "flavor-extra-specs", 
      "x-summary": "Lists, creates, deletes, and updates the extra-specs or keys for a\nflavor."
    }, 
    {
      "description": "Keypairs (keypairs)", 
      "name": "keypairs", 
      "x-summary": "Generates, imports, and deletes SSH keys."
    }, 
    {
      "description": "Limits (limits)", 
      "name": "limits", 
      "x-summary": "Shows rate and absolute limits for the tenant."
    }, 
    {
      "description": "Extensions (extensions)", 
      "name": "extensions-v2.1", 
      "x-summary": "Lists available extensions and shows information for an extension,\nby alias.\n\nOpenStack Compute API v2.0 supports extensions. However, extensions\nare deprecated in Compute API v2.1. For information about\nextensions, see `Extensions <http://developer.openstack.org/api-\nguide/compute/extensions.html>`_."
    }, 
    {
      "description": "Images", 
      "name": "compute_images-v2.1", 
      "x-summary": "Lists, shows details for, and deletes images. Also sets, lists,\nshows details for, and deletes image metadata.\n\nAn image is a collection of files that you use to create and\nrebuild a server. By default, operators provide pre-built operating\nsystem images. You can also create custom images. See Compute\nserver actions.\n\nBy default, the ``policy.json`` file authorizes all users to view\nthe image size in the ``OS-EXT-IMG-SIZE:size`` extended attribute."
    }, 
    {
      "description": "Image metadata", 
      "name": "compute_image_metadata-v2.1", 
      "x-summary": "Shows details for, sets, updates, and deletes image metadata or\nmetadata items."
    }, 
    {
      "description": "Guest agents (os-agents)", 
      "name": "agents", 
      "x-summary": "Creates, lists, updates, and deletes guest agent builds. Use guest\nagents to access files on the disk, configure networking, or run\nother applications or scripts in the guest while the agent runs.\nThis hypervisor-specific extension is not currently enabled for\nKVM. Use of guest agents is possible only if the underlying service\nprovider uses the Xen driver."
    }, 
    {
      "description": "Host aggregates (os-aggregates, action)", 
      "name": "aggregates", 
      "x-summary": "Creates and manages host aggregates. An aggregate assigns metadata\nto groups of compute nodes. Aggregates are only visible to the\ncloud provider."
    }, 
    {
      "description": "Assisted volume snapshots (os-assisted-volume-snapshots)", 
      "name": "os-assisted-volume-snapshots-v2.1", 
      "x-summary": "Creates and deletes snapshots through an emulator/hypervisor. The\nqcow2 file format is supported.\n\nAn internal snapshot that lacks storage such as NFS or GlusterFS\ncan use an emulator/hypervisor to add the snapshot feature."
    }, 
    {
      "description": "Availability zones (os-availability-zone)", 
      "name": "availability-zone", 
      "x-summary": "Shows availability zone information."
    }, 
    {
      "description": "Bare metal nodes (os-baremetal-nodes)", 
      "name": "os-baremetal-nodes-v2.1", 
      "x-summary": "Bare metal nodes."
    }, 
    {
      "description": "Cells (os-cells, capacities)", 
      "name": "cells", 
      "x-summary": "Adds neighbor cells, lists neighbor cells, and shows the\ncapabilities of the local cell."
    }, 
    {
      "description": "Root certificates (os-certificates)", 
      "name": "certificates", 
      "x-summary": "Creates and shows details for a root certificate."
    }, 
    {
      "description": "Cloudpipe (os-cloudpipe)", 
      "name": "os-cloudpipe-v2.1", 
      "x-summary": "Manages virtual VPNs for projects."
    }, 
    {
      "description": "Server consoles (servers, os-consoles, os-console-auth-token)", 
      "name": "os-consoles-v2.1", 
      "x-summary": "Manages server consoles."
    }, 
    {
      "description": "Fixed IPs (os-fixed-ips)", 
      "name": "os-fixed-ips-v2.1", 
      "x-summary": "Shows data for a fixed IP, such as host name, CIDR, and address.\nAlso, reserves and frees a fixed IP address."
    }, 
    {
      "description": "Floating IP DNS records (os-floating-ip-dns)", 
      "name": "floating-ip-dns", 
      "x-summary": "Manages DNS records associated with floating IP addresses. The API\ndispatches requests to a DNS driver that is selected at startup."
    }, 
    {
      "description": "Floating IP pools (os-floating-ip-pools)", 
      "name": "floating-ip-pools", 
      "x-summary": "Manages groups of floating IPs."
    }, 
    {
      "description": "Floating IPs (os-floating-ips)", 
      "name": "floating-ips", 
      "x-summary": "Lists floating IP addresses for a project. Also, creates\n(allocates) a floating IP address for a project, shows floating IP\naddress details, and deletes (deallocates) a floating IP address\nfrom a project.\n\nThe cloud administrator configures a pool of floating IP addresses\nin OpenStack Compute. The project quota defines the maximum number\nof floating IP addresses that you can allocate to the project.\nAfter you `allocate a floating IP address\n<http://developer.openstack.org/api-ref-\ncompute-v2.1.html#createFloatingIP>`_ for a project, you can:\n\n- `Add (associate) the floating IP address\n  <http://developer.openstack.org/api-ref-\n  compute-v2.1.html#addFloatingIp>`_ with an instance in the\n  project. You can associate only one floating IP address with an\n  instance at a time.\n\n- `Remove (disassociate) the floating IP address\n  <http://developer.openstack.org/api-ref-\n  compute-v2.1.html#removeFloatingIp>`_ from an instance in the\n  project.\n\n- Delete, or deallocate, a floating IP from the project, which\n  automatically deletes any associations for that IP address."
    }, 
    {
      "description": "Floating IPs bulk (os-floating-ips-bulk)", 
      "name": "floating-ips-bulk", 
      "x-summary": "(nova-network only) Bulk-creates, deletes, and lists floating IPs.\nDefault pool name is ``nova``.\n\nTo view available pools, use the ``os-floating-ip-pools``\nextension."
    }, 
    {
      "description": "Ping instances (os-fping)", 
      "name": "fping", 
      "x-summary": "Pings instances and reports which ones are alive."
    }, 
    {
      "description": "Hosts (os-hosts)", 
      "name": "hosts", 
      "x-summary": "Manages physical hosts. Some virt drivers don not support all host\nfunctions. For more information, see `nova virt support matrix\n<http://docs.openstack.org/developer/nova/support-matrix.html>`_"
    }, 
    {
      "description": "Hypervisors (os-hypervisors)", 
      "name": "hypervisors", 
      "x-summary": "Lists all hypervisors, shows summary statistics for all hypervisors\nover all compute nodes, shows details for a hypervisor, and shows\nthe uptime for a hypervisor."
    }, 
    {
      "description": "Instance usage audit log (os-instance-usage-audit-log)", 
      "name": "instance-usage-audit-log", 
      "x-summary": "Administrator only. Monitors task logs."
    }, 
    {
      "description": "Migrations (os-migrations)", 
      "name": "migrations", 
      "x-summary": "Shows data on migrations."
    }, 
    {
      "description": "Networks (os-networks)", 
      "name": "networks", 
      "x-summary": "Creates, lists, shows information for, and deletes networks.\n\nAdds network to a project, disassociates a network from a project,\nand disassociates a project from a network.\n\nAssociates host with and disassociates host from a network."
    }, 
    {
      "description": "Quota class (os-quota-class-sets)", 
      "name": "quota-class-sets", 
      "x-summary": "Provides quota classes management support."
    }, 
    {
      "description": "Quota sets (os-quota-sets)", 
      "name": "quota-sets", 
      "x-summary": "Permits administrators, depending on policy settings, to view\ndefault quotas, view details for quotas, revert quotas to defaults,\nand update the quotas for a project or a project and user."
    }, 
    {
      "description": "Security groups (os-security-groups)", 
      "name": "security-groups", 
      "x-summary": "Lists, shows information for, creates, and deletes security groups."
    }, 
    {
      "description": "Rules for default security group (os-security-group-default-rules)", 
      "name": "os-security-group-default-rules-v2.1", 
      "x-summary": "Lists, shows information for, and creates default security group\nrules."
    }, 
    {
      "description": "Rules for security group (os-security-group-rules)", 
      "name": "os-security-group-rules-v2.1", 
      "x-summary": "Creates and deletes security group rules."
    }, 
    {
      "description": "Create external events (os-server-external-events)", 
      "name": "os-server-external-events-v2.1", 
      "x-summary": "Creates one or more external events. The API dispatches each event\nto a server instance."
    }, 
    {
      "description": "Server groups (os-server-groups)", 
      "name": "server-groups", 
      "x-summary": "Lists, shows information for, creates, and deletes server groups."
    }, 
    {
      "description": "Compute services (os-services)", 
      "name": "services", 
      "x-summary": "Lists all running Compute services for a tenant, enables or\ndisables scheduling for a Compute service, logs disabled Compute\nservice information, and deletes a Compute service.\n\nFor an overview of Compute services, see `OpenStack Compute\n<http://docs.openstack.org/liberty/install-guide-\nobs/common/get_started_compute.html>`_."
    }, 
    {
      "description": "Usage reports (os-simple-tenant-usage)", 
      "name": "os-simple-tenant-usage-v2.1", 
      "x-summary": "Reports usage statistics on compute and storage resources."
    }, 
    {
      "description": "Project networks (os-tenant-networks)", 
      "name": "tenant-networks", 
      "x-summary": "Creates, lists, shows information for, and deletes project\nnetworks."
    }, 
    {
      "description": "Volume extension (os-volumes, os-snapshots)", 
      "name": "os-volumes", 
      "x-summary": "Manages volumes and snapshots for use with the Compute API."
    }
  ]
}