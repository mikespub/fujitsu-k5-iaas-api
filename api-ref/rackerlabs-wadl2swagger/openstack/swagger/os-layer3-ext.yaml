---
swagger: '2.0'
info:
  title: os-layer3-ext
  version: Unknown
consumes:
- application/json
produces:
- application/json
paths:
  "/v2.0/routers":
    get:
      operationId: listRouters
      summary: List routers
      description: |
        Lists logical routers that are accessible to the tenant who submits the request.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "routers": [
                      {
                          "status": "ACTIVE",
                          "external_gateway_info": null,
                          "name": "second_routers",
                          "admin_state_up": true,
                          "tenant_id": "6b96ff0cb17a4b859e1e575d221683d3",
                          "id": "7177abc4-5ae9-4bb7-b0d4-89e94a4abf3b"
                      },
                      {
                          "status": "ACTIVE",
                          "external_gateway_info": {
                              "network_id": "3c5bcddd-6af9-4e6b-9c3e-c153e521cab8"
                          },
                          "name": "router1",
                          "admin_state_up": true,
                          "tenant_id": "33a40233088643acb66ff6eb0ebea679",
                          "id": "a9254bdb-2613-4a13-ac4c-adc581fba50d"
                      }
                  ]
              }
    post:
      operationId: createRouter
      summary: Create router
      description: |
        Creates a logical router.
      produces:
      - application/json
      responses:
        '201':
          description: 201 response
          examples:
            application/json: |-
              {
                  "router": {
                      "status": "ACTIVE",
                      "external_gateway_info": {
                          "network_id": "8ca37218-28ff-41cb-9b10-039601ea7e6b"
                      },
                      "name": "another_router",
                      "admin_state_up": true,
                      "tenant_id": "6b96ff0cb17a4b859e1e575d221683d3",
                      "id": "8604a0de-7f6b-409a-a47c-a1cc7bc77b2e"
                  }
              }
  "/v2.0/routers/{router_id}":
    parameters:
    - name: router_id
      required: true
      in: path
      type: string
      description: |
        The UUID of the router.
    get:
      operationId: showRouter
      summary: Show router details
      description: |
        Shows details for a specified router.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "router": {
                      "status": "ACTIVE",
                      "external_gateway_info": {
                          "network_id": "85d76829-6415-48ff-9c63-5c5ca8c61ac6"
                      },
                      "name": "router1",
                      "admin_state_up": true,
                      "tenant_id": "d6554fe62e2f41efbb6e026fad5c1542",
                      "id": "a07eea83-7710-4860-931b-5fe220fae533"
                  }
              }
    put:
      operationId: updateRouter
      summary: Update router
      description: |
        Updates a logical router.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "router": {
                      "status": "ACTIVE",
                      "external_gateway_info": {
                          "network_id": "8ca37218-28ff-41cb-9b10-039601ea7e6b"
                      },
                      "name": "another_router",
                      "admin_state_up": true,
                      "tenant_id": "6b96ff0cb17a4b859e1e575d221683d3",
                      "id": "8604a0de-7f6b-409a-a47c-a1cc7bc77b2e"
                  }
              }
    delete:
      operationId: deleteRouter
      summary: Delete router
      description: |
        Deletes a logical router and, if present, its external gateway interface.
      produces: []
      responses:
        '204':
          description: 204 response
  "/v2.0/routers/{router_id}/add_router_interface":
    parameters:
    - name: router_id
      required: true
      in: path
      type: string
      description: |
        The UUID of the router.
    put:
      operationId: addRouterInterface
      summary: Add interface to router
      description: |
        Adds an internal interface to a logical router.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "subnet_id": "a2f1f29d-571b-4533-907f-5803ab96ead1",
                  "port_id": "3a44f4e5-1694-493a-a1fb-393881c673a4"
              }
  "/v2.0/routers/{router_id}/remove_router_interface":
    parameters:
    - name: router_id
      required: true
      in: path
      type: string
      description: |
        The UUID of the router.
    put:
      operationId: removeRouterInterface
      summary: Remove interface from router
      description: |
        Removes an internal interface from a logical router.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "subnet_id": "a2f1f29d-571b-4533-907f-5803ab96ead1",
                  "tenant_id": "2f245a7b-796b-4f26-9cf9-9e82d248fda7",
                  "port_id": "3a44f4e5-1694-493a-a1fb-393881c673a4",
                  "id": "8604a0de-7f6b-409a-a47c-a1cc7bc77b2e"
              }
  "/v2.0/floatingips":
    get:
      operationId: listFloatingIps
      summary: List floating IPs
      description: |
        Lists floating IPs that are accessible to the tenant who submits the request.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "floatingips": [
                      {
                          "router_id": "d23abc8d-2991-4a55-ba98-2aaea84cc72f",
                          "tenant_id": "4969c491a3c74ee4af974e6d800c62de",
                          "floating_network_id": "376da547-b977-4cfe-9cba-275c80debf57",
                          "fixed_ip_address": "10.0.0.3",
                          "floating_ip_address": "172.24.4.228",
                          "port_id": "ce705c24-c1ef-408a-bda3-7bbd946164ab",
                          "id": "2f245a7b-796b-4f26-9cf9-9e82d248fda7"
                      },
                      {
                          "router_id": null,
                          "tenant_id": "4969c491a3c74ee4af974e6d800c62de",
                          "floating_network_id": "376da547-b977-4cfe-9cba-275c80debf57",
                          "fixed_ip_address": null,
                          "floating_ip_address": "172.24.4.227",
                          "port_id": null,
                          "id": "61cea855-49cb-4846-997d-801b70c71bdd"
                      }
                  ]
              }
    post:
      operationId: createFloatingIp
      summary: Create floating IP
      description: |
        Creates a floating IP, and, if you specify port information, associates the floating IP with an internal port.
      produces:
      - application/json
      responses:
        '201':
          description: 201 response
          examples:
            application/json: |-
              {
                  "floatingip": {
                      "router_id": "d23abc8d-2991-4a55-ba98-2aaea84cc72f",
                      "tenant_id": "4969c491a3c74ee4af974e6d800c62de",
                      "floating_network_id": "376da547-b977-4cfe-9cba-275c80debf57",
                      "fixed_ip_address": "10.0.0.3",
                      "floating_ip_address": "172.24.4.228",
                      "port_id": "ce705c24-c1ef-408a-bda3-7bbd946164ab",
                      "id": "2f245a7b-796b-4f26-9cf9-9e82d248fda7"
                  }
              }
  "/v2.0/floatingips/{floatingip_id}":
    parameters:
    - name: floatingip_id
      required: true
      in: path
      type: string
      description: |
        The UUID of the floating IP.
    get:
      operationId: showFloatingIp
      summary: Show floating IP details
      description: |
        Shows details for a specified floating IP.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "floatingip": {
                      "fixed_ip_address": "10.0.0.3",
                      "floating_ip_address": "172.24.4.228"
                  }
              }
    put:
      operationId: updateFloatingIp
      summary: Update floating IP
      description: |
        Updates a floating IP and its association with an internal port.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "floatingip": {
                      "router_id": "d23abc8d-2991-4a55-ba98-2aaea84cc72f",
                      "tenant_id": "4969c491a3c74ee4af974e6d800c62de",
                      "floating_network_id": "376da547-b977-4cfe-9cba-275c80debf57",
                      "fixed_ip_address": null,
                      "floating_ip_address": "172.24.4.228",
                      "port_id": null,
                      "id": "2f245a7b-796b-4f26-9cf9-9e82d248fda7"
                  }
              }
    delete:
      operationId: deleteFloatingIp
      summary: Delete floating IP
      description: |
        Deletes a floating IP and, if present, its associated port.
      produces: []
      responses:
        '204':
          description: 204 response
