---
swagger: '2.0'
info:
  title: os-server-OS-EXT-IPS-MAC
  version: Unknown
consumes:
- application/json
produces:
- application/json
paths:
  "/v2/{tenant_id}/servers":
    parameters:
    - name: tenant_id
      required: true
      in: path
      type: string
      description: |
        The ID for the tenant or account in a multi-tenancy cloud.
    post:
      operationId: createServer
      summary: Create server with OS-EXT-IPS-MAC:mac_addr             extended attribute
      description: |
        Creates a server with the OS-EXT-IPS-MAC:mac\_addr extended attribute.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples:
            application/json: |-
              {
                  "server": {
                      "id": "b44e5008-42f7-4048-b4c8-f40a29da88ba",
                      "links": [
                          {
                              "href": "http://openstack.example.com/v2/openstack/servers/b44e5008-42f7-4048-b4c8-f40a29da88ba",
                              "rel": "self"
                          },
                          {
                              "href": "http://openstack.example.com/openstack/servers/b44e5008-42f7-4048-b4c8-f40a29da88ba",
                              "rel": "bookmark"
                          }
                      ],
                      "adminPass": "zD7wDKTXiHsp"
                  }
              }
  "/v2/{tenant_id}/servers/{server_id}":
    parameters:
    - name: tenant_id
      required: true
      in: path
      type: string
      description: |
        The ID for the tenant or account in a multi-tenancy cloud.
    - name: server_id
      required: true
      in: path
      type: string
      description: |
        The UUID for the server of interest to you.
    get:
      operationId: getServer
      summary: Show server information
      description: |
        Shows information for a specified server. Includes the OS-EXT-IPS-MAC:mac\_addr extended attribute.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples:
            application/json: |-
              {
                  "server": {
                      "status": "ACTIVE",
                      "updated": "2013-02-07T18:46:29Z",
                      "hostId": "4e2003eddbfdb1280c2618d04090bcdd6773203b8da8347af0b2723d",
                      "user_id": "fake",
                      "addresses": {
                          "private": [
                              {
                                  "OS-EXT-IPS-MAC:mac_addr": "00:0c:29:e1:42:90",
                                  "version": 4,
                                  "addr": "192.168.0.3"
                              }
                          ]
                      },
                      "links": [
                          {
                              "href": "http://openstack.example.com/v2/openstack/servers/dc7281f9-ee47-40b9-9950-9f73e7961caa",
                              "rel": "self"
                          },
                          {
                              "href": "http://openstack.example.com/openstack/servers/dc7281f9-ee47-40b9-9950-9f73e7961caa",
                              "rel": "bookmark"
                          }
                      ],
                      "created": "2013-02-07T18:46:28Z",
                      "tenant_id": "openstack",
                      "image": {
                          "id": "70a599e0-31e7-49b7-b260-868f441e862b",
                          "links": [
                              {
                                  "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b",
                                  "rel": "bookmark"
                              }
                          ]
                      },
                      "name": "new-server-test",
                      "accessIPv4": "",
                      "accessIPv6": "",
                      "progress": 0,
                      "flavor": {
                          "id": "1",
                          "links": [
                              {
                                  "href": "http://openstack.example.com/openstack/flavors/1",
                                  "rel": "bookmark"
                              }
                          ]
                      },
                      "id": "dc7281f9-ee47-40b9-9950-9f73e7961caa",
                      "metadata": {
                          "My Server Name": "Apache1"
                      }
                  }
              }
      parameters:
      - name: changes-since
        required: false
        in: query
        type: string
        format: date-time
        description: |
          A time/date stamp for when the server last changed status.
      - name: image
        required: false
        in: query
        type: string
        format: uri
        description: |
          Name of the image in URL format.
      - name: flavor
        required: false
        in: query
        type: string
        format: uri
        description: |
          Name of the flavor in URL format.
      - name: name
        required: false
        in: query
        type: string
        description: |
          Name of the server as a string; can be queried with regular expressions. Realize that ?name=bob returns both bob and bobb. If you need to match bob only, you can use a regular expression matching the syntax of the underlying database server implemented for Compute (such as MySQL or PostgreSQL).
      - name: marker
        required: false
        in: query
        type: string
        description: |
          UUID of the server at which you want to set a marker.
      - name: limit
        required: false
        in: query
        type: integer
        description: |
          Integer value for the limit of values to return.
      - name: status
        required: false
        in: query
        type: string
        description: |
          Value of the status of the server so that you can filter on "ACTIVE" for example.
      - name: host
        required: false
        in: query
        type: string
        description: |
          Name of the host as a string.
  "/v2/{tenant_id}/servers/detail":
    parameters:
    - name: tenant_id
      required: true
      in: path
      type: string
      description: |
        The ID for the tenant or account in a multi-tenancy cloud.
    get:
      operationId: getServersDetailed
      summary: Get server details
      description: |
        Lists details for all servers. Includes the OS-EXT-IPS-MAC:mac\_addr extended attribute.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples:
            application/json: |-
              {
                  "servers": [
                      {
                          "status": "ACTIVE",
                          "updated": "2013-02-07T18:40:59Z",
                          "hostId": "fe866a4962fe3bdb6c2db9c8f7dcdb9555aca73387e72b5cb9c45bd3",
                          "user_id": "fake",
                          "addresses": {
                              "private": [
                                  {
                                      "OS-EXT-IPS-MAC:mac_addr": "00:0c:29:e1:42:90",
                                      "version": 4,
                                      "addr": "192.168.0.3"
                                  }
                              ]
                          },
                          "links": [
                              {
                                  "href": "http://openstack.example.com/v2/openstack/servers/76908712-653a-4d16-807e-d89d41435d24",
                                  "rel": "self"
                              },
                              {
                                  "href": "http://openstack.example.com/openstack/servers/76908712-653a-4d16-807e-d89d41435d24",
                                  "rel": "bookmark"
                              }
                          ],
                          "created": "2013-02-07T18:40:59Z",
                          "tenant_id": "openstack",
                          "image": {
                              "id": "70a599e0-31e7-49b7-b260-868f441e862b",
                              "links": [
                                  {
                                      "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b",
                                      "rel": "bookmark"
                                  }
                              ]
                          },
                          "name": "new-server-test",
                          "accessIPv4": "",
                          "accessIPv6": "",
                          "progress": 0,
                          "flavor": {
                              "id": "1",
                              "links": [
                                  {
                                      "href": "http://openstack.example.com/openstack/flavors/1",
                                      "rel": "bookmark"
                                  }
                              ]
                          },
                          "id": "76908712-653a-4d16-807e-d89d41435d24",
                          "metadata": {
                              "My Server Name": "Apache1"
                          }
                      }
                  ]
              }
      parameters:
      - name: changes-since
        required: false
        in: query
        type: string
        format: date-time
        description: |
          A time/date stamp for when the server last changed status.
      - name: image
        required: false
        in: query
        type: string
        format: uri
        description: |
          Name of the image in URL format.
      - name: flavor
        required: false
        in: query
        type: string
        format: uri
        description: |
          Name of the flavor in URL format.
      - name: name
        required: false
        in: query
        type: string
        description: |
          Name of the server as a string; can be queried with regular expressions. Realize that ?name=bob returns both bob and bobb. If you need to match bob only, you can use a regular expression matching the syntax of the underlying database server implemented for Compute (such as MySQL or PostgreSQL).
      - name: marker
        required: false
        in: query
        type: string
        description: |
          UUID of the server at which you want to set a marker.
      - name: limit
        required: false
        in: query
        type: integer
        description: |
          Integer value for the limit of values to return.
      - name: status
        required: false
        in: query
        type: string
        description: |
          Value of the status of the server so that you can filter on "ACTIVE" for example.
      - name: host
        required: false
        in: query
        type: string
        description: |
          Name of the host as a string.
