<?xml version="1.0" encoding="utf-8"?>
<!-- (C) 2012-2014 OpenStack Foundation, All Rights Reserved -->
<!-- Useful for describing APIs -->
<wadl:application xmlns="http://docbook.org/ns/docbook"
                  xmlns:wadl="http://wadl.dev.java.net/2009/02"
                  xmlns:rax="http://docs.rackspace.com/api"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <resources xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
              xmlns:xsd="http://www.w3.org/2001/XMLSchema"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              xmlns="http://wadl.dev.java.net/2009/02"
              base="https://heat.example.com/"
              xml:id="orchestration-api-v1.0">
        <resource id="versions" path="/">
         <method name="GET" rax:id="getVersions-heat-v1">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List versions">
               <para role="shortdesc">Lists information about all
                Orchestration API versions.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "versions": [
        {
            "status": "CURRENT",
            "id": "v1.0",
            "links": [
                {
                    "href": "http://23.253.228.211:8000/v1/",
                    "rel": "self"
                }
            ]
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
            
        
        <resource id="stacks" path="/v1/{tenant_id}/stacks">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <method name="POST" rax:id="stack_create">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create stack">
               <para role="shortdesc">Creates a stack.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "disable_rollback": true,
    "stack_name": "teststack",
    "template": {
        "heat_template_version": "2013-05-23",
        "description": "Simple template to test heat commands",
        "parameters": {
            "flavor": {
                "default": "m1.tiny",
                "type": "string"
            }
        },
        "resources": {
            "hello_world": {
                "type":"OS::Nova::Server",
                "properties": {
                    "key_name": "heat_key",
                    "flavor": {
                        "get_param": "flavor"
                    },
                    "image": "40be8d1a-3eb9-40de-8abd-43237517384f",
                    "user_data": "#!/bin/bash -xv\necho \"hello world\" &amp;gt; /root/hello-world.txt\n"
                }
            }
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stack_name" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A name for the new stack. The value must be unique within a project. The name
must start with an ASCII letter and can contain ASCII letters, digits,
underscores, periods, and hyphens. Specifically, the name must match the regular
expression <code>^[a-zA-Z][a-zA-Z0-9_.-]*$</code>.
<note>
                              <para>Deleting or abandoning a stack may not make the stack name available
for reuse, or the ability to reuse a stack name could be delayed for an
unspecified time.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="template_url" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A URI to the location containing the stack
template to instantiate. See the description of the <code>template</code>
property for information about the expected template content located at the URI.
<note>
                              <para>This parameter is only required when the <code>template</code>
parameter is omitted. The value is ignored if the <code>template</code> property
is also specified.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="template" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The stack template to instantiate.
This parameter is always provided as a
<code>string</code> in the JSON request body. The content of the string is an
Orchestration template, and may be provided in either YAML or JSON syntax.
Complete details about the syntax of an Orchestration template are provided in
the <link xlink:href="http://docs.openstack.org/hot-guide/content/">Heat
Orchestration Template (HOT) specification</link>. <note>
                              <para>This parameter is
only required when the <code>template_url</code> parameter is omitted. If both
are specified, this value overrides any value provided for
<code>template_url</code>.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "stack": {
        "id": "3095aefc-09fb-4bc7-b1f0-f21a304e864c",
        "links": [
            {
                "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/simple_stack/3095aefc-09fb-4bc7-b1f0-f21a304e864c",
                "rel": "self"
            }
        ]
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stack_name" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name of the stack to create.</para>
                    </wadl:doc>
                  </param>
                  <param name="template_url" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The URL of the template to
                            instantiate. This value is ignored if the
                            template is supplied
                        inline.</para>
                     </wadl:doc>
                  </param>
                  <param name="template" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A JSON template to
                            instantiate. This value takes precedence
                            over the template URL if both are
                            supplied.</para>
                     </wadl:doc>
                  </param>
                  <param name="environment" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A JSON environment for the
                            stack.</para>
                     </wadl:doc>
                  </param>
                  <param name="files" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A map of file names
                            (Provider resource templates, as
                            referenced in the environment) to JSON
                            template bodies.</para>
                     </wadl:doc>
                  </param>
                  <param name="param_name-n" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User-defined parameter
                            names to pass to the
                        template.</para>
                     </wadl:doc>
                  </param>
                  <param name="param_value-n" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User-defined parameter
                            values to pass to the
                        template.</para>
                     </wadl:doc>
                  </param>
                  <param name="timeout_mins" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The timeout for stack
                            creation in minutes.</para>
                     </wadl:doc>
                  </param>
                  <param name="disable_rollback" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Controls whether a failure
                            during stack creation causes deletion of
                            all previously-created resources in that
                            stack. The default is True; a failure does
                            not cause deletions.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
         <method name="POST" rax:id="stack_adopt">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Adopt stack">
               <para role="shortdesc">Creates a stack from existing
                resources.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "stack_name": "{stack_name}",
    "template_url": "{template_url}",
    "timeout_mins": "{timeout_mins}",
    "adopt_stack_data": "{adopt_stack_data}"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stack_name" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A name for the new stack. The value must be unique within a project. The name
must start with an ASCII letter and can contain ASCII letters, digits,
underscores, periods, and hyphens. Specifically, the name must match the regular
expression <code>^[a-zA-Z][a-zA-Z0-9_.-]*$</code>.
<note>
                              <para>Deleting or abandoning a stack may not make the stack name available
for reuse, or the ability to reuse a stack name could be delayed for an
unspecified time.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="template_url" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A URI to the location containing the stack
template to instantiate. See the description of the <code>template</code>
property for information about the expected template content located at the URI.
<note>
                              <para>This parameter is only required when the <code>template</code>
parameter is omitted. The value is ignored if the <code>template</code> property
is also specified.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="template" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The stack template to instantiate.
This parameter is always provided as a
<code>string</code> in the JSON request body. The content of the string is an
Orchestration template, and may be provided in either YAML or JSON syntax.
Complete details about the syntax of an Orchestration template are provided in
the <link xlink:href="http://docs.openstack.org/hot-guide/content/">Heat
Orchestration Template (HOT) specification</link>. <note>
                              <para>This parameter is
only required when the <code>template_url</code> parameter is omitted. If both
are specified, this value overrides any value provided for
<code>template_url</code>.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="environment" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A JSON environment for the
                            stack.</para>
                     </wadl:doc>
                  </param>
                  <param name="files" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A map of file names
                            (Provider resource templates, as
                            referenced in the environment) for JSON
                            template bodies.</para>
                     </wadl:doc>
                  </param>
                  <param name="param_name-n" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User-defined parameter
                            names to pass to the
                        template.</para>
                     </wadl:doc>
                  </param>
                  <param name="param_value-n" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User-defined parameter
                            values to pass to the
                        template.</para>
                     </wadl:doc>
                  </param>
                  <param name="timeout_mins" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The timeout for stack
                            creation in minutes.</para>
                     </wadl:doc>
                  </param>
                  <param name="adopt_stack_data" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Existing resources data to
                            adopt a stack. Data returned by abandon
                            stack could be provided as
                            adopt_stack_data.</para>
                     </wadl:doc>
                  </param>
                  <param name="disable_rollback" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Enables or disables
                            deletion of all stack resources when a
                            stack creation fails. Default is True; all
                            resources are not deleted when stack
                            creation fails.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "stack": {
        "id": "5333af0c-cc26-47ee-ac3d-8784cefafbd7",
        "links": [
            {
                "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/simple_stack/5333af0c-cc26-47ee-ac3d-8784cefafbd7",
                "rel": "self"
            }
        ]
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="stack_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List stack data">
               <para role="shortdesc">Lists active stacks.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <param name="status" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the stack list by the specified
                            status. You can use this filter multiple
                            times to filter by multiple
                            statuses.</para>
                    </wadl:doc>
                  </param>
                  <param name="name" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the stack list by the specified
                            name.</para>
                    </wadl:doc>
                  </param>
                  <param name="limit" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Limits the number of stacks that appear
                            on a page to this value. The typical
                            pattern of limit and marker is to make an
                            initial limited request and then to use
                            the ID of the last stack from the response
                            as the marker parameter in a subsequent
                            limited request.</para>
                    </wadl:doc>
                  </param>
                  <param name="marker" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specifies the ID of the last-seen stack.
                            The typical pattern of limit and marker is
                            to make an initial limited request and
                            then to use the ID of the last stack from
                            the response as the marker parameter in a
                            subsequent limited request.</para>
                    </wadl:doc>
                  </param>
                  <param name="show_deleted" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specifies whether to include deleted stacks in the
                            stack list. Set to False by default, so that deleted
                            stacks are not shown in the results of the GET
                            request unless you set this value to True.</para>
                    </wadl:doc>
                  </param>
                  <param name="sort_keys" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Sorts the stack list by one of these
                            attributes: <code>name</code>,
                                <code>status</code>,
                                <code>created_at</code>, or
                                <code>updated_at</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="sort_dir" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The sort direction of the stack list.
                            Either <code>asc</code> (ascending) or
                                <code>desc</code> (descending).</para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "stacks": [
        {
            "creation_time": "2014-06-03T20:59:46Z",
            "description": "sample stack",
            "id": "3095aefc-09fb-4bc7-b1f0-f21a304e864c",
            "links": [
                {
                    "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/simple_stack/3095aefc-09fb-4bc7-b1f0-f21a304e864c",
                    "rel": "self"
                }
            ],
            "stack_name": "simple_stack",
            "stack_status": "CREATE_COMPLETE",
            "stack_status_reason": "Stack CREATE completed successfully",
            "updated_time": ""
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                    
                    
                    
                    <resource path="/v1/{tenant_id}/stacks/preview" id="preview">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <method name="POST" rax:id="stack_preview">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Preview stack">
               <para role="shortdesc">Previews a stack.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "disable_rollback": true,
    "stack_name": "teststack",
    "template": {
        "heat_template_version": "2013-05-23",
        "description": "Simple template to test heat commands",
        "parameters": {
            "flavor": {
                "default": "m1.tiny",
                "type": "string"
            }
        },
        "resources": {
            "hello_world": {
                "type":"OS::Nova::Server",
                "properties": {
                    "key_name": "heat_key",
                    "flavor": {
                        "get_param": "flavor"
                    },
                    "image": "40be8d1a-3eb9-40de-8abd-43237517384f",
                    "user_data": "#!/bin/bash -xv\necho \"hello world\" &amp;gt; /root/hello-world.txt\n"
                }
            }
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stack_name" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A name for the preview stack.
The value must be unique within a project. The name
must start with an ASCII letter and can contain ASCII letters, digits,
underscores, periods, and hyphens. Specifically, the name must match the regular
expression <code>^[a-zA-Z][a-zA-Z0-9_.-]*$</code>. <para>The stack name provided for the preview operation may
be used for future calls to preview and/or create a stack.</para>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="template_url" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A URI to the location containing the stack
template to preview. See the description of the <code>template</code>
property for information about the expected template content located at the URI.
<note>
                              <para>This parameter is only required when the <code>template</code>
parameter is omitted. The value is ignored if the <code>template</code> property
is also specified.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="template" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The stack template to preview.
This parameter is always provided as a
<code>string</code> in the JSON request body. The content of the string is an
Orchestration template, and may be provided in either YAML or JSON syntax.
Complete details about the syntax of an Orchestration template are provided in
the <link xlink:href="http://docs.openstack.org/hot-guide/content/">Heat
Orchestration Template (HOT) specification</link>. <note>
                              <para>This parameter is
only required when the <code>template_url</code> parameter is omitted. If both
are specified, this value overrides any value provided for
<code>template_url</code>.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="environment" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A JSON environment for the stack.</para>
                    </wadl:doc>
                  </param>
                  <param name="files" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A map of file names (Provider resource
                            templates, as referenced in the
                            environment) to JSON template
                            bodies.</para>
                    </wadl:doc>
                  </param>
                  <param name="param_name-n" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User-defined parameter names to pass to
                            the template.</para>
                    </wadl:doc>
                  </param>
                  <param name="param_value-n" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User-defined parameter values to pass to
                            the template.</para>
                    </wadl:doc>
                  </param>
                  <param name="timeout_mins" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The timeout for stack creation in
                            minutes. During a stack preview, this
                            value is only used as part of stack
                            validation.</para>
                    </wadl:doc>
                  </param>
                  <param name="disable_rollback" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            Controls whether a failure during stack
                            creation causes deletion of all
                            previously-created resources in that
                            stack.
                            This value is not used during a stack
                            preview and only exists for symmetry with
                            stack create.
                        </para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <param name="parent" style="plain" type="xsd:string" required="true">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>
                        The Stack ID of the parent stack, if this is
                        a nested stack.
                    </para>
                  </wadl:doc>
               </param>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "stack": {
        "id": "None",
        "parent": null,
        "stack_name": "sample_stack",
        "description": "Sample template description.",
        "template_description": "Sample template description.",
        "timeout_mins": 60,
        "disable_rollback": true,
        "capabilities": [],
        "notification_topics": [],
        "creation_time": "2014-02-19T16:04:56Z",
        "updated_time": "2014-02-19T16:04:56Z",
        "stack_status": "_",
        "stack_status_reason": "",
        "parameters": {
            "AWS::Region": "ap-southeast-1",
            "AWS::StackId": "arn:openstack:heat::2e327e5e7fa94b25a44be66fd9d1ec4d:stacks/sample_stack/None",
            "AWS::StackName": "sample_stack",
            "DBName": "wordpress",
            "DBPassword": "******",
            "DBRootPassword": "******",
            "DBUsername": "******",
            "InstanceType": "m1.small",
            "KeyName": "heat_key",
            "LinuxDistribution": "F17"
        },
        "links": [
            {
                "href": "http://10.0.2.15:8004/v1/2e327e5e7fa94b25a44be66fd9d1ec4d/stacks/sample_stack/None",
                "rel": "self"
            }
        ],
        "resources": [
            {
                "stack_name": "sample_stack",
                "resource_name": "WikiDatabase-1",
                "resource_type": "AWS::EC2::Instance",
                "description": "",
                "resource_action": "INIT",
                "resource_status": "COMPLETE",
                "resource_status_reason": "",
                "physical_resource_id": "",
                "required_by": [],
                "resource_identity": {
                    "path": "/resources/WikiDatabase-1",
                    "stack_id": "None",
                    "stack_name": "sample_stack",
                    "tenant": "2e327e5e7fa94b25a44be66fd9d1ec4d"
                },
                "stack_identity": {
                    "path": "",
                    "stack_id": "None",
                    "stack_name": "sample_stack",
                    "tenant": "2e327e5e7fa94b25a44be66fd9d1ec4d"
                },
                "updated_time": "2014-02-19T16:04:56Z",
                "metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "packages": {
                                "yum": {
                                    "httpd": [],
                                    "mysql": [],
                                    "mysql-server": [],
                                    "wordpress": []
                                }
                            },
                            "services": {
                                "systemd": {
                                    "httpd": {
                                        "enabled": "true",
                                        "ensureRunning": "true"
                                    },
                                    "mysqld": {
                                        "enabled": "true",
                                        "ensureRunning": "true"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "other resources...": "other resources..."
            }
        ]
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                        
                    
                    <resource path="/v1/{tenant_id}/stacks/{stack_name}" id="stack_name">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <method name="GET" rax:id="stack_find">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Find stack">
               <para role="shortdesc">Finds the canonical URL for a
                specified stack.</para>
               <para>Also works with verbs other than <command>GET</command>, so you can
                perform <command>PUT</command> and <command>DELETE</command> operations on a current
                stack. Set your client to follow redirects. Note that
                when redirecting, the request method should not
                change, as defined in RFC2626. However, in many
                clients the default behavior is to change the method
                to <command>GET</command> when you receive a 302 because this behavior
                is ubiquitous in web browsers.</para>
            </wadl:doc>
            <response status="302">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "stack": {
        "capabilities": [],
        "creation_time": "2014-06-04T20:36:12Z",
        "description": "sample stack",
        "disable_rollback": true,
        "id": "5333af0c-cc26-47ee-ac3d-8784cefafbd7",
        "links": [
            {
                "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/simple_stack/5333af0c-cc26-47ee-ac3d-8784cefafbd7",
                "rel": "self"
            }
        ],
        "notification_topics": [],
        "outputs": [],
        "parameters": {
            "OS::stack_id": "5333af0c-cc26-47ee-ac3d-8784cefafbd7",
            "OS::stack_name": "simple_stack"
        },
        "stack_name": "simple_stack",
        "stack_status": "CREATE_COMPLETE",
        "stack_status_reason": "Stack CREATE completed successfully",
        "template_description": "sample stack",
        "timeout_mins": null,
        "updated_time": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                        
                        
                        <resource path="/v1/{tenant_id}/stacks/{stack_name}/resources" id="resources">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <method name="GET" rax:id="stack_resources_find">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Find stack resources">
               <para role="shortdesc">Finds the canonical URL for the
                resource list of a specified stack.</para>
            </wadl:doc>
            <response status="302"/>
         </method>
      </resource>
                            
                        
                        <resource path="/v1/{tenant_id}/stacks/{stack_name}/events" id="events">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <method name="GET" rax:id="stack_events_find">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Find stack events">
               <para role="shortdesc">Finds the canonical URL for the
                event list of a specified stack.</para>
            </wadl:doc>
            <response status="302"/>
         </method>
      </resource>
                            
                        
                        <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}" id="stack_id">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <method name="GET" rax:id="stack_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show stack details">
               <para role="shortdesc">Shows details for a specified
                stack.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "stack": {
        "capabilities": [],
        "creation_time": "2014-06-03T20:59:46Z",
        "description": "sample stack",
        "disable_rollback": "True",
        "id": "3095aefc-09fb-4bc7-b1f0-f21a304e864c",
        "links": [
            {
                "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/simple_stack/3095aefc-09fb-4bc7-b1f0-f21a304e864c",
                "rel": "self"
            }
        ],
        "notification_topics": [],
        "outputs": [],
        "parameters": {
            "OS::stack_id": "3095aefc-09fb-4bc7-b1f0-f21a304e864c",
            "OS::stack_name": "simple_stack"
        },
        "stack_name": "simple_stack",
        "stack_status": "CREATE_COMPLETE",
        "stack_status_reason": "Stack CREATE completed successfully",
        "template_description": "sample stack",
        "timeout_mins": "",
        "updated_time": ""
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="PUT" rax:id="stack_update">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update stack">
               <para role="shortdesc">Updates a specified stack.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "template": {
        "heat_template_version": "2013-05-23",
        "description": "Create a simple stack",
        "parameters": {
            "flavor": {
                "default": "m1.tiny",
                "type": "string"
            }
        },
        "resources": {
            "hello_world": {
                "type": "OS::Nova::Server",
                "properties": {
                    "key_name": "heat_key",
                    "flavor": {
                        "get_param": "flavor"
                    },
                    "image": "40be8d1a-3eb9-40de-8abd-43237517384f",
                    "user_data": "#!/bin/bash -xv\necho \"hello world\" &gt; /root/hello-world.txt\n"
                }
            }
        }
    },
    "parameters": {
        "flavor": "m1.small"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="template_url" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A URI to the location containing the updated
stack template. See the description of the <code>template</code>
property for information about the expected template content located at the URI.
<note>
                              <para>This parameter is only required when the <code>template</code>
parameter is omitted. The value is ignored if the <code>template</code> property
is also specified.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="template" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The updated stack template.
This parameter is always provided as a
<code>string</code> in the JSON request body. The content of the string is an
Orchestration template, and may be provided in either YAML or JSON syntax.
Complete details about the syntax of an Orchestration template are provided in
the <link xlink:href="http://docs.openstack.org/hot-guide/content/">Heat
Orchestration Template (HOT) specification</link>. <note>
                              <para>This parameter is
only required when the <code>template_url</code> parameter is omitted. If both
are specified, this value overrides any value provided for
<code>template_url</code>.</para>
                           </note>
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="environment" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A JSON environment for the
                            stack.</para>
                     </wadl:doc>
                  </param>
                  <param name="files" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A map of file names
                            (Provider resource templates, as
                            referenced in the environment) to JSON
                            template bodies.</para>
                     </wadl:doc>
                  </param>
                  <param name="param_name-n" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User-defined parameter
                            names to pass to the
                        template.</para>
                     </wadl:doc>
                  </param>
                  <param name="param_value-n" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User-defined parameter
                            values to pass to the
                        template.</para>
                     </wadl:doc>
                  </param>
                  <param name="timeout_mins" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The timeout for stack
                            creation in minutes.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="202"/>
         </method>
         <method name="DELETE" rax:id="stack_delete">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete stack">
               <para role="shortdesc">Deletes a specified stack.</para>
            </wadl:doc>
            <response status="204"/>
         </method>
      </resource>
                            
                            
                            
                            
                            <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/abandon"
                id="abandon">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <method name="DELETE" rax:id="stack_abandon">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Abandon stack">
               <para role="shortdesc">Deletes a specified stack but
                leaves its resources intact, and returns data
                describing the stack and its resources.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "status": "COMPLETE",
    "name": "g",
    "dry_run": true,
    "template": {
        "outputs": {
            "instance_ip": {
                "value": {
                    "str_replace": {
                        "params": {
                            "username": "ec2-user",
                            "hostname": {
                                "get_attr": [
                                    "server",
                                    "first_address"
                                ]
                            }
                        },
                        "template": "ssh username@hostname"
                    }
                }
            }
        },
        "heat_template_version": "2013-05-23",
        "resources": {
            "server": {
                "type": "OS::Nova::Server",
                "properties": {
                    "key_name": {
                        "get_param": "key_name"
                    },
                    "image": {
                        "get_param": "image"
                    },
                    "flavor": {
                        "get_param": "flavor"
                    }
                }
            }
        },
        "parameters": {
            "key_name": {
                "default": "heat_key",
                "type": "string"
            },
            "image": {
                "default": "fedora-amd64",
                "type": "string"
            },
            "flavor": {
                "default": "m1.small",
                "type": "string"
            }
        }
    },
    "action": "CREATE",
    "id": "16934ca3-40e0-4fb2-a289-a700662ec05a",
    "resources": {
        "server": {
            "status": "COMPLETE",
            "name": "server",
            "resource_data": {},
            "resource_id": "39d5dad7-7d7a-4cc8-bd84-851e9e2ff4ea",
            "action": "CREATE",
            "type": "OS::Nova::Server",
            "metadata": {}
        }
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                
                            
                            <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/snapshots"
                id="snapshots">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <method name="POST" rax:id="stack_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Snapshot stack">
               <para role="shortdesc">Takes a snapshot of all the resources in the
                stack.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <param name="name" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The (optional) name of the snapshot.</para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "id": "13c3a4b5-0585-440e-85a4-6f96b20e7a78",
    "name": "vol_snapshot",
    "status": "IN_PROGRESS",
    "status_reason": null,
    "data": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="stack_list_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List snapshots">
               <para role="shortdesc">List the snapshots of a stack.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "snapshots": [
        {
            "id": "7c4e1ef4-bf1b-41ab-a0c8-ce01f4ffdfa1",
            "name": "vol_snapshot",
            "status": "IN_PROGRESS",
            "status_reason": null,
            "data": null
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                
                                
                            
                            <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/snapshots/{snapshot_id}"
                id="snapshot_id">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <param name="snapshot_id" style="template" required="true">
                                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The ID of a
                                    snapshot.</para>
            </wadl:doc>
                                    </param>
         <method name="GET" rax:id="stack_show_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show snapshot">
               <para role="shortdesc">Show the details of a snapshot.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "snapshot": {
        "id": "7c4e1ef4-bf1b-41ab-a0c8-ce01f4ffdfa1",
        "name": "vol_snapshot",
        "status": "COMPLETE",
        "status_reason": "Stack SNAPSHOT completed successfully",
        "data": {
            "status": "COMPLETE",
            "name": "stack_vol1",
            "stack_user_project_id": "fffa11067b1c48129ddfb78fba2bf09f",
            "environment": {
                "parameters": {},
                "resource_registry": {
                    "resources": {}
                }
            },
            "template": {
                "heat_template_version": "2013-05-23",
                "resources": {
                    "volume": {
                        "type": "OS::Cinder::Volume",
                        "properties": {
                            "size": 1
                        }
                    }
                }
            },
            "action": "SNAPSHOT",
            "project_id": "ecdb08032cd042179692a1b148f6565e",
            "id": "656452c2-e151-40da-8704-c844e69b485c",
            "resources": {
                "volume": {
                    "status": "COMPLETE",
                    "name": "volume",
                    "resource_data": {
                        "backup_id": "99108cf8-398f-461b-a043-bdceb7c9f572"
                    },
                    "resource_id": "3ab8cf79-807b-4c40-b743-0655f91e072f",
                    "action": "SNAPSHOT",
                    "type": "OS::Cinder::Volume",
                    "metadata": {}
                }
            }
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="POST" rax:id="stack_restore_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Restore snapshot">
               <para role="shortdesc">Restore a stack snapshot.</para>
            </wadl:doc>
            <response status="202"/>
         </method>
         <method name="DELETE" rax:id="stack_delete_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete snapshot">
               <para role="shortdesc">Delete a stack snapshot.</para>
            </wadl:doc>
            <response status="204"/>
         </method>
      </resource>
                                    
                                    
                                    
                                    
                                
                            <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/actions"
                id="actions">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <method name="POST" rax:id="stack_action_suspend">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Suspend stack">
               <para role="shortdesc">Suspends a stack.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "suspend": null
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="suspend" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specify the
                                <code>suspend</code> action in the
                            request body.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201"/>
         </method>
         <method name="POST" rax:id="stack_action_resume">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Resume stack">
               <para role="shortdesc">Resumes a suspended stack.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "resume": null
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="resume" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specify the
                                <code>resume</code> action in the
                            request body.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201"/>
         </method>
      </resource>
                                
                                
                            
                            <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/events"
                id="events2">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <method name="GET" rax:id="stack_event_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List stack events">
               <para role="shortdesc">Lists events for a specified
                stack.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <param name="resource_action" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the event list by the specified
                            resource_action. You can use this filter multiple
                            times to filter by multiple
                            resource actions:
                            <code>CREATE</code>, <code>DELETE</code>,
                            <code>UPDATE</code>, <code>ROLLBACK</code>,
                            <code>SUSPEND</code>, <code>RESUME</code> or
                            <code>ADOPT</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="resource_status" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the event list by the specified
                            resource_status. You can use this filter multiple
                            times to filter by multiple
                            resource statuses:
                            <code>IN_PROGRESS</code>, <code>COMPLETE</code> or
                            <code>FAILED</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="resource_name" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the event list by the specified
                            resource_name. You can use this filter multiple
                            times to filter by multiple
                            resource names.</para>
                    </wadl:doc>
                  </param>
                  <param name="resource_type" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the event list by the specified
                            resource_type. You can use this filter multiple
                            times to filter by multiple
                            resource types:
                            <code>OS::Nova::Server</code>,
                            <code>OS::Cinder::Volume</code>,
                            <code>OS::Neutron::Port</code>, and so on.</para>
                    </wadl:doc>
                  </param>
                  <param name="limit" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Limits the number of events that appear
                            on a page to this value. The typical
                            pattern of limit and marker is to make an
                            initial limited request and then to use
                            the ID of the last event from the response
                            as the marker parameter in a subsequent
                            limited request.</para>
                    </wadl:doc>
                  </param>
                  <param name="marker" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specifies the ID of the last-seen event.
                            The typical pattern of limit and marker is
                            to make an initial limited request and
                            then to use the ID of the last event from
                            the response as the marker parameter in a
                            subsequent limited request.</para>
                    </wadl:doc>
                  </param>
                  <param name="sort_keys" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Sorts the event list by:
                            <code>resource_type</code> or
                            <code>created_at</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="sort_dir" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The sort direction of the event list.
                            Which is <code>asc</code> (ascending) or
                                <code>desc</code> (descending).</para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "events": [
        {
            "resource_name": "port",
            "event_time": "2014-07-23T08:14:47Z",
            "links": [{
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port/events/474bfdf0-a450-46ec-a78a-0c7faa404073",
                "rel": "self"
            },
            {
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port",
                "rel": "resource"
            },
            {
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5",
                "rel": "stack"
            }],
            "logical_resource_id": "port",
            "resource_status": "CREATE_FAILED",
            "resource_status_reason": "NotFound: Subnet f8a699d0-3537-429e-87a5-6b5a8d0c2bf0 could not be found",
            "physical_resource_id": null,
            "id": "474bfdf0-a450-46ec-a78a-0c7faa404073"
        },
        {
            "resource_name": "port",
            "event_time": "2014-07-23T08:14:47Z",
            "links": [{
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port/events/66fa95b6-e6f8-4f05-b1af-e828f5aba04c",
                "rel": "self"
            },
            {
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port",
                "rel": "resource"
            },
            {
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5",
                "rel": "stack"
            }],
            "logical_resource_id": "port",
            "resource_status": "CREATE_IN_PROGRESS",
            "resource_status_reason": "state changed",
            "physical_resource_id": null,
            "id": "66fa95b6-e6f8-4f05-b1af-e828f5aba04c"
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                
                            
                            <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources"
                id="resources2">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <method name="GET" rax:id="resource_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List resources">
               <para role="shortdesc">Lists resources in a stack.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <param name="nested_depth" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            Also includes resources from nested stacks up to
                            <code>nested_depth</code> levels of recursion.
                        </para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
            </representation>
            </response>
         </method>
      </resource>
                                
                                <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}"
                id="resource_name">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <param name="resource_name" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   resource in the
                                   stack.</para>
            </wadl:doc>
                                   </param>
         <method name="GET" rax:id="resource_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource data">
               <para role="shortdesc">Shows data for a specified
                resource.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
            </representation>
            </response>
         </method>
      </resource>
                                   
                                   
                                   <resource id="events4"
                path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}/events">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <param name="resource_name" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   resource in the
                                   stack.</para>
            </wadl:doc>
                                   </param>
         <method name="GET" rax:id="resource_event_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List resource events">
               <para role="shortdesc">Lists events for a specified stack
                resource.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <param name="resource_action" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the event list by the specified
                            resource_action. You can use this filter multiple
                            times to filter by multiple
                            resource actions:
                            <code>CREATE</code>, <code>DELETE</code>,
                            <code>UPDATE</code>, <code>ROLLBACK</code>,
                            <code>SUSPEND</code>, <code>RESUME</code> or
                            <code>ADOPT</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="resource_status" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the event list by the specified
                            resource_status. You can use this filter multiple
                            times to filter by multiple
                            resource statuses:
                            <code>IN_PROGRESS</code>, <code>COMPLETE</code> or
                            <code>FAILED</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="resource_name" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the event list by the specified
                            resource_name. You can use this filter multiple
                            times to filter by multiple
                            resource names.</para>
                    </wadl:doc>
                  </param>
                  <param name="resource_type" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filters the event list by the specified
                            resource_type. You can use this filter multiple
                            times to filter by multiple
                            resource types:
                            <code>OS::Nova::Server</code>,
                            <code>OS::Cinder::Volume</code>,
                            <code>OS::Neutron::Port</code>, and so on.</para>
                    </wadl:doc>
                  </param>
                  <param name="limit" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Limits the number of events that appear
                            on a page to this value. The typical
                            pattern of limit and marker is to make an
                            initial limited request and then to use
                            the ID of the last event from the response
                            as the marker parameter in a subsequent
                            limited request.</para>
                    </wadl:doc>
                  </param>
                  <param name="marker" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specifies the ID of the last-seen event.
                            The typical pattern of limit and marker is
                            to make an initial limited request and
                            then to use the ID of the last event from
                            the response as the marker parameter in a
                            subsequent limited request.</para>
                    </wadl:doc>
                  </param>
                  <param name="sort_keys" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Sorts the event list by:
                            <code>resource_type</code> or
                            <code>created_at</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="sort_dir" style="query" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The sort direction of the event list.
                            Which is <code>asc</code> (ascending) or
                                <code>desc</code> (descending).</para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "events": [
        {
            "resource_name": "port",
            "event_time": "2014-07-23T08:14:47Z",
            "links": [{
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port/events/474bfdf0-a450-46ec-a78a-0c7faa404073",
                "rel": "self"
            },
            {
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port",
                "rel": "resource"
            },
            {
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5",
                "rel": "stack"
            }],
            "logical_resource_id": "port",
            "resource_status": "CREATE_FAILED",
            "resource_status_reason": "NotFound: Subnet f8a699d0-3537-429e-87a5-6b5a8d0c2bf0 could not be found",
            "physical_resource_id": null,
            "id": "474bfdf0-a450-46ec-a78a-0c7faa404073"
        },
        {
            "resource_name": "port",
            "event_time": "2014-07-23T08:14:47Z",
            "links": [{
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port/events/66fa95b6-e6f8-4f05-b1af-e828f5aba04c",
                "rel": "self"
            },
            {
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port",
                "rel": "resource"
            },
            {
                "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5",
                "rel": "stack"
            }],
            "logical_resource_id": "port",
            "resource_status": "CREATE_IN_PROGRESS",
            "resource_status_reason": "state changed",
            "physical_resource_id": null,
            "id": "66fa95b6-e6f8-4f05-b1af-e828f5aba04c"
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                   
                                   
                                   <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}/metadata"
                id="metadata">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <param name="resource_name" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   resource in the
                                   stack.</para>
            </wadl:doc>
                                   </param>
         <method name="GET" rax:id="resource_metadata">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource metadata">
               <para role="shortdesc">Shows metadata for a specified
                resource.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "metadata": {
        "some_key": "some_value",
        "some_other_key": "some_other_value"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                   
                                   
                                   <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}/signal"
                id="signal">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <param name="resource_name" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   resource in the
                                   stack.</para>
            </wadl:doc>
                                   </param>
         <method name="POST" rax:id="resource_signal">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Send a signal to a resource">
               <para role="shortdesc">Sends a signal to a specified
                resource.</para>
               <para>Some resources cannot receive signals.
            If you send them a signal, they return a 400 error response code.
            The contents of the POST request body depends on the resource to
            which you send a signal.</para>
            </wadl:doc>
            <response status="200"/>
         </method>
      </resource>
                                   
                                   
                                   <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}/events/{event_id}"
                id="event_id">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <param name="resource_name" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   resource in the
                                   stack.</para>
            </wadl:doc>
                                   </param>
         <param name="event_id" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier of an event related to
                                   the resource in the
                                   stack.</para>
            </wadl:doc>
                                   </param>
         <method name="GET" rax:id="event_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show event details">
               <para role="shortdesc">Shows details for a specified
                event.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
            </representation>
            </response>
         </method>
      </resource>
                                   
                                   
                                   
                                
                            
                            <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/template"
                id="template">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="stack_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The name of a
                                   stack.</para>
            </wadl:doc>
                        </param>
         <param name="stack_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The unique
                                   identifier for a
                                   stack.</para>
            </wadl:doc>
                            </param>
         <method name="GET" rax:id="stack_template">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get stack template">
               <para role="shortdesc">Gets a template for a specified
                stack.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
            </representation>
            </response>
         </method>
      </resource>
                                
                            
                        
                    
                <resource id="validate_template" path="/v1/{tenant_id}/validate">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <method name="POST" rax:id="template_validate">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Validate template">
               <para role="shortdesc">Validates a specified
                template.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "template_url": "{template_url}"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="template_url" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The URL of the template to
                            instantiate. This value is ignored if the
                            template is supplied
                        inline.</para>
                     </wadl:doc>
                  </param>
                  <param name="template" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A JSON template to
                            instantiate. This value takes precedence
                            over the template URL if both are
                            supplied.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "Description": "{description}",
    "Parameters": {
        "{parameter_name}": {
            "Label": "{label}",
            "Type": "{type}",
            "Description": "{description}",
            "NoEcho": "{true|false}"
        }
    },
    "ParameterGroups": [
        {
            "label": "{label}",
            "description": "{description}",
            "parameters": [
                "param_name-1",
                "param_name-2"
            ]
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="Description" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The description given in the template.</para>
                    </wadl:doc>
                  </param>
                  <param name="Parameters" style="plain" type="object" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An object with all the input parameters
                            defined in the template, indexed by parameter
                            name.</para>
                    </wadl:doc>
                  </param>
                  <param name="ParameterGroups"
                         style="plain"
                         type="list"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A list of parameter groups, each containing
                            a list of parameter names.</para>
                    </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
      </resource>
                    
                <resource id="resource_types" path="/v1/{tenant_id}/resource_types">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <method name="GET" rax:id="resource_type_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List resource types">
               <para role="shortdesc">Lists the supported template
                resource types.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
            </representation>
            </response>
         </method>
      </resource>
                    
                    <resource id="resource_schema" path="/v1/{tenant_id}/resource_types/{type_name}">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="type_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                                <para>The name of a resource
                                   type.</para>
                            </wadl:doc>
                        </param>
         <method name="GET" rax:id="resource_type_get">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource schema">
               <para role="shortdesc">Shows the interface schema for a
                specified resource type.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "attributes": {
        "an_attribute": {
            "description": "An attribute description ."
        }
    },
    "properties": {
        "a_property": {
            "update_allowed": false,
            "required": true,
            "type": "string",
            "description": "A resource description."
        }
    },
    "resource_type": "OS::Heat::AResourceName"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                        
                        
                        <resource id="resource_template"
                path="/v1/{tenant_id}/resource_types/{type_name}/template">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="type_name" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                                <para>The name of a resource
                                   type.</para>
                            </wadl:doc>
                        </param>
         <method name="GET" rax:id="resource_type_template">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource template">
               <para role="shortdesc">Shows the template representation
                for a specified resource type.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
            </representation>
            </response>
         </method>
      </resource>
                            
                        
                    
                <resource path="/v1/{tenant_id}/build_info" id="build_info">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <method name="GET" rax:id="build_info_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show build information">
               <para role="shortdesc">Shows build information for a heat
                deployment.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "api": {
        "revision": "{api_build_revision}"
    },
    "engine": {
        "revision": "{engine_build_revision}"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                    
                <resource id="software_configs" path="/v1/{tenant_id}/software_configs">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <method name="POST" rax:id="software_config_create">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create configuration">
               <para role="shortdesc">Creates a software
                configuration.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "inputs": [
        {
            "default": null,
            "type": "String",
            "name": "foo",
            "description": null
        },
        {
            "default": null,
            "type": "String",
            "name": "bar",
            "description": null
        }
    ],
    "group": "script",
    "name": "a-config-we5zpvyu7b5o",
    "outputs": [
        {
            "type": "String",
            "name": "result",
            "error_output": false,
            "description": null
        }
    ],
    "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
    "options": null
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="config" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Configuration script or manifest that
                            defines which configuration is
                            performed.</para>
                    </wadl:doc>
                  </param>
                  <param name="group" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Namespace that groups this software
                            configuration by when it is delivered to a
                            server. This setting might imply which
                            configuration tool performs the
                            configuration.</para>
                    </wadl:doc>
                  </param>
                  <param name="name" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name of the configuration to
                            create.</para>
                    </wadl:doc>
                  </param>
                  <param name="inputs" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Schema that represents the inputs that
                            this software configuration
                            expects.</para>
                    </wadl:doc>
                  </param>
                  <param name="outputs" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Schema that represents the outputs that
                            this software configuration
                            produces.</para>
                    </wadl:doc>
                  </param>
                  <param name="options" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Map containing options specific to the
                            configuration management tool used by this
                            resource.</para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "software_config": {
        "inputs": [
            {
                "default": null,
                "type": "String",
                "name": "foo",
                "description": null
            },
            {
                "default": null,
                "type": "String",
                "name": "bar",
                "description": null
            }
        ],
        "group": "script",
        "name": "a-config-we5zpvyu7b5o",
        "outputs": [
            {
                "type": "String",
                "name": "result",
                "error_output": false,
                "description": null
            }
        ],
        "options": null,
        "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
        "id": "ddee7aca-aa32-4335-8265-d436b20db4f1"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                    
                    <resource path="/v1/{tenant_id}/software_configs/{config_id}" id="config_id">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="config_id" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The ID of the
                                   configuration.</para>
            </wadl:doc>
                        </param>
         <method name="GET" rax:id="software_config_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show configuration details">
               <para role="shortdesc">Shows details for a software
                configuration.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "software_config": {
        "inputs": [
            {
                "default": null,
                "type": "String",
                "name": "foo",
                "description": null
            },
            {
                "default": null,
                "type": "String",
                "name": "bar",
                "description": null
            }
        ],
        "group": "script",
        "name": "a-config-we5zpvyu7b5o",
        "outputs": [
            {
                "type": "String",
                "name": "result",
                "error_output": false,
                "description": null
            }
        ],
        "options": null,
        "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
        "id": "ddee7aca-aa32-4335-8265-d436b20db4f1"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="DELETE" rax:id="software_config_delete">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete config">
               <para role="shortdesc">Deletes a software
                configuration.</para>
            </wadl:doc>
            <response status="204"/>
         </method>
      </resource>
                        
                        
                        
                    
                <resource id="software_deployments" path="/v1/{tenant_id}/software_deployments">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <method name="GET" rax:id="software_deployment_index">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List deployments">
               <para role="shortdesc">Lists all available software
                deployments.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "software_deployments": [
        {
            "status": "COMPLETE",
            "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
            "config_id": "8da95794-2ad9-4979-8ae5-739ce314c5cd",
            "output_values": {
                "deploy_stdout": "Writing to /tmp/barmy\nWritten to /tmp/barmy\n",
                "deploy_stderr": "+ echo Writing to /tmp/barmy\n+ echo fu\n+ cat /tmp/barmy\n+ echo -n The file /tmp/barmy contains fu for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE\n+ echo Written to /tmp/barmy\n+ echo Output to stderr\nOutput to stderr\n",
                "deploy_status_code": 0,
                "result": "The file /tmp/barmy contains fu for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE"
            },
            "input_values": null,
            "action": "CREATE",
            "status_reason": "Outputs received",
            "id": "ef422fa5-719a-419e-a10c-72e3a367b0b8"
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="POST" rax:id="software_deployment_create">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create deployment">
               <para role="shortdesc">Creates a software
                deployment.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "status": "IN_PROGRESS",
    "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
    "config_id": "8da95794-2ad9-4979-8ae5-739ce314c5cd",
    "stack_user_project_id": "c024bfada67845ddb17d2b0c0be8cd79",
    "action": "CREATE",
    "status_reason": "Deploy data available"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="config_id" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The ID of the software configuration
                            resource that runs when applying to the
                            server.</para>
                    </wadl:doc>
                  </param>
                  <param name="server_id" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The ID of the compute server to which
                            the configuration applies.</para>
                    </wadl:doc>
                  </param>
                  <param name="action" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The current stack action that triggers
                            this deployment resource.</para>
                    </wadl:doc>
                  </param>
                  <param name="stack_user_project_id" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Authentication project ID which can also
                            perform operations on this
                            deployment.</para>
                    </wadl:doc>
                  </param>
                  <param name="status" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Current status of the deployment,
                            expected to be one of IN_PROGRESS,
                            COMPLETE or FAILED.</para>
                    </wadl:doc>
                  </param>
                  <param name="status_reason" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Reason for the last status change, which
                            will be an error description for status
                            FAILED.</para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "software_deployment": {
        "status": "IN_PROGRESS",
        "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
        "config_id": "8da95794-2ad9-4979-8ae5-739ce314c5cd",
        "output_values": null,
        "input_values": null,
        "action": "CREATE",
        "status_reason": "Deploy data available",
        "id": "ef422fa5-719a-419e-a10c-72e3a367b0b8"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                    
                    
                    <resource path="/v1/{tenant_id}/software_deployments/{deployment_id}"
                id="deployment_id">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="deployment_id" style="template" required="true">
                            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The ID of the
                                   deployment.</para>
            </wadl:doc>
                        </param>
         <method name="GET" rax:id="software_deployment_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show deployment details">
               <para role="shortdesc">Shows details for a specified
                software deployment.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "software_deployment": {
        "status": "IN_PROGRESS",
        "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
        "config_id": "3d5ec2a8-7004-43b6-a7f6-542bdbe9d434",
        "output_values": null,
        "input_values": null,
        "action": "CREATE",
        "status_reason": "Deploy data available",
        "id": "06e87bcc-33a2-4bce-aebd-533e698282d3"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="PUT" rax:id="software_deployment_update">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update deployment">
               <para role="shortdesc">Updates a specified software
                deployment.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "status": "COMPLETE",
    "output_values": {
        "deploy_stdout": "Writing to /tmp/baaaaa\nWritten to /tmp/baaaaa\n",
        "deploy_stderr": "+ echo Writing to /tmp/baaaaa\n+ echo fooooo\n+ cat /tmp/baaaaa\n+ echo -n The file /tmp/baaaaa contains fooooo for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE\n+ echo Written to /tmp/baaaaa\n+ echo Output to stderr\nOutput to stderr\n",
        "deploy_status_code": 0,
        "result": "The file /tmp/baaaaa contains fooooo for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE"
    },
    "status_reason": "Outputs received"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="config_id" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>ID of the software configuration
                            resource to run when applying to the
                            server. This ID might not be the same
                            configuration ID with which the deployment
                            was created because ephemeral
                            configurations are created throughout the
                            life cycle of the deployment.</para>
                    </wadl:doc>
                  </param>
                  <param name="action" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Current stack action this deployment
                            resource is being triggered in.</para>
                    </wadl:doc>
                  </param>
                  <param name="status" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Current status of the deployment,
                            expected to be one of IN_PROGRESS,
                            COMPLETE or FAILED.</para>
                    </wadl:doc>
                  </param>
                  <param name="status_reason" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Reason for the last status change, which
                            will be an error description for status
                            FAILED.</para>
                    </wadl:doc>
                  </param>
                  <param name="output_values" style="plain" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Map of output values for the deployment,
                            as signalled from the server.</para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "software_deployment": {
        "status": "COMPLETE",
        "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
        "config_id": "3d5ec2a8-7004-43b6-a7f6-542bdbe9d434",
        "output_values": {
            "deploy_stdout": "Writing to /tmp/baaaaa\nWritten to /tmp/baaaaa\n",
            "deploy_stderr": "+ echo Writing to /tmp/baaaaa\n+ echo fooooo\n+ cat /tmp/baaaaa\n+ echo -n The file /tmp/baaaaa contains fooooo for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE\n+ echo Written to /tmp/baaaaa\n+ echo Output to stderr\nOutput to stderr\n",
            "deploy_status_code": 0,
            "result": "The file /tmp/baaaaa contains fooooo for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE"
        },
        "input_values": null,
        "action": "CREATE",
        "status_reason": "Outputs received",
        "id": "06e87bcc-33a2-4bce-aebd-533e698282d3"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="DELETE" rax:id="software_deployment_delete">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete deployment">
               <para role="shortdesc">Deletes a specified software
                deployment.</para>
            </wadl:doc>
            <response status="204"/>
         </method>
      </resource>
                        
                        
                        
                        
                    
                    <resource path="/v1/{tenant_id}/software_deployments/metadata/{server_id}"
                id="server_id">
         <param name="tenant_id" style="template">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique identifier of the tenant or
                            account.</para>
                    </wadl:doc>
                </param>
         <param name="server_id" style="template" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The ID of the
                                   server for which to fetch
                                   configuration
                                   metadata.</para>
            </wadl:doc>
                            </param>
         <method name="GET" rax:id="software_deployment_metadata">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show server configuration metadata">
               <para role="shortdesc">Shows the deployment configuration
                metadata for a specified server.</para>
               <para>Use the <code>group</code> property to specify the
                configuration hook to which the pass the metadata
                item.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "metadata": [
        {
            "inputs": [
                {
                    "default": null,
                    "type": "String",
                    "name": "foo",
                    "value": "fooooo",
                    "description": null
                },
                {
                    "default": null,
                    "type": "String",
                    "name": "bar",
                    "value": "baaaaa",
                    "description": null
                },
                {
                    "type": "String",
                    "name": "deploy_server_id",
                    "value": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
                    "description": "ID of the server being deployed to"
                },
                {
                    "type": "String",
                    "name": "deploy_action",
                    "value": "CREATE",
                    "description": "Name of the current action being deployed"
                },
                {
                    "type": "String",
                    "name": "deploy_stack_id",
                    "value": "a/9bd57090-8954-48ab-bab9-adf9e1ac70fc",
                    "description": "ID of the stack this deployment belongs to"
                },
                {
                    "type": "String",
                    "name": "deploy_resource_name",
                    "value": "deployment",
                    "description": "Name of this deployment resource in the stack"
                },
                {
                    "type": "String",
                    "name": "deploy_signal_id",
                    "value": "http://192.168.20.103:8000/v1/signal/arn%3Aopenstack%3Aheat%3A%3Ae2a84fbdaeb047ae8da4b503f3b69f1f%3Astacks%2Fa%2F9bd57090-8954-48ab-bab9-adf9e1ac70fc%2Fresources%2Fdeployment?Timestamp=2014-03-19T20%3A30%3A59Z&amp;SignatureMethod=HmacSHA256&amp;AWSAccessKeyId=ca3571413e4a49998d580215517b3685&amp;SignatureVersion=2&amp;Signature=w6Iu%2BNbg86mqwSOUf1GLuKPO7KaD82PiGpL4ig9Q1l4%3D",
                    "description": "ID of signal to use for signalling output values"
                }
            ],
            "group": "script",
            "name": "a-config-we5zpvyu7b5o",
            "outputs": [
                {
                    "type": "String",
                    "name": "result",
                    "error_output": false,
                    "description": null
                }
            ],
            "options": null,
            "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
            "id": "3d5ec2a8-7004-43b6-a7f6-542bdbe9d434"
        },
        {
            "inputs": [
                {
                    "default": null,
                    "type": "String",
                    "name": "foo",
                    "value": "fu",
                    "description": null
                },
                {
                    "default": null,
                    "type": "String",
                    "name": "bar",
                    "value": "barmy",
                    "description": null
                },
                {
                    "type": "String",
                    "name": "deploy_server_id",
                    "value": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
                    "description": "ID of the server being deployed to"
                },
                {
                    "type": "String",
                    "name": "deploy_action",
                    "value": "CREATE",
                    "description": "Name of the current action being deployed"
                },
                {
                    "type": "String",
                    "name": "deploy_stack_id",
                    "value": "a/9bd57090-8954-48ab-bab9-adf9e1ac70fc",
                    "description": "ID of the stack this deployment belongs to"
                },
                {
                    "type": "String",
                    "name": "deploy_resource_name",
                    "value": "other_deployment",
                    "description": "Name of this deployment resource in the stack"
                },
                {
                    "type": "String",
                    "name": "deploy_signal_id",
                    "value": "http://192.168.20.103:8000/v1/signal/arn%3Aopenstack%3Aheat%3A%3Ae2a84fbdaeb047ae8da4b503f3b69f1f%3Astacks%2Fa%2F9bd57090-8954-48ab-bab9-adf9e1ac70fc%2Fresources%2Fother_deployment?Timestamp=2014-03-19T20%3A30%3A59Z&amp;SignatureMethod=HmacSHA256&amp;AWSAccessKeyId=7b761482f8254946bcd3d5ccb36fe939&amp;SignatureVersion=2&amp;Signature=giMfv%2BhrAw6y%2FCMKQIQz2IhO5PkAj5%2BfP5YsL6rul3o%3D",
                    "description": "ID of signal to use for signalling output values"
                }
            ],
            "group": "script",
            "name": "a-config-we5zpvyu7b5o",
            "outputs": [
                {
                    "type": "String",
                    "name": "result",
                    "error_output": false,
                    "description": null
                }
            ],
            "options": null,
            "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
            "id": "8da95794-2ad9-4979-8ae5-739ce314c5cd"
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                            
                            
                        
                
    </resources>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getVersions-heat-v1">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_list">
        
        <request>
            <representation mediaType="application/xml">
                <param name="status" style="query" required="false">
                    
                </param>
                <param name="name" style="query" required="false">
                    
                </param>
                <param name="limit" style="query" required="false">
                    
                </param>
                <param name="marker" style="query" required="false">
                    
                </param>
                <param name="show_deleted" style="query" required="false">
                    
                </param>
                <param name="sort_keys" style="query" required="false">
                    
                </param>
                <param name="sort_dir" style="query" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_create">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="stack_name" style="plain" required="true">
                    
                </param>
                <param name="template_url" style="plain" required="false">
                    
                </param>
                <param name="template" style="plain" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="201">
            <representation mediaType="application/json">
                
                <param name="stack_name" style="plain" required="true">
                    
                </param>
                <param name="template_url" style="plain" required="true">
                    
                </param>
                <param name="template" style="plain" required="true">
                    
                </param>
                <param name="environment" style="plain" required="true">
                    
                </param>
                <param name="files" style="plain" required="true">
                    
                </param>
                <param name="param_name-n" style="plain" required="true">
                    
                </param>
                <param name="param_value-n" style="plain" required="true">
                    
                </param>
                <param name="timeout_mins" style="plain" required="true">
                    
                </param>
                <param name="disable_rollback" style="plain" required="false">
                    
                </param>
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_preview">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="stack_name" style="plain" required="true">
                    
                </param>
                <param name="template_url" style="plain" required="false">
                    
                </param>
                <param name="template" style="plain" required="false">
                    
                </param>
                <param name="environment" style="plain" required="true">
                    
                </param>
                <param name="files" style="plain" required="true">
                    
                </param>
                <param name="param_name-n" style="plain" required="true">
                    
                </param>
                <param name="param_value-n" style="plain" required="true">
                    
                </param>
                <param name="timeout_mins" style="plain" required="true">
                    
                </param>
                <param name="disable_rollback" style="plain" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <param name="parent" style="plain" type="xsd:string" required="true">
                
            </param>
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_adopt">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="stack_name" style="plain" required="true">
                    
                </param>
                <param name="template_url" style="plain" required="false">
                    
                </param>
                <param name="template" style="plain" required="false">
                    
                </param>
                <param name="environment" style="plain" required="true">
                    
                </param>
                <param name="files" style="plain" required="true">
                    
                </param>
                <param name="param_name-n" style="plain" required="true">
                    
                </param>
                <param name="param_value-n" style="plain" required="true">
                    
                </param>
                <param name="timeout_mins" style="plain" required="true">
                    
                </param>
                <param name="adopt_stack_data" style="plain" required="true">
                    
                </param>
                <param name="disable_rollback" style="plain" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="201">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_action_suspend">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="suspend" style="plain" required="true">
                    
                </param>
            </representation>
        </request>
        <response status="201"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_action_resume">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="resume" style="plain" required="true">
                    
                </param>
            </representation>
        </request>
        <response status="201"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_find">
        
        <response status="302">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_show">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_template">
        
        <response status="200">
            <representation mediaType="application/json">
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="stack_update">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="template_url" style="plain" required="false">
                    
                </param>
                <param name="template" style="plain" required="false">
                    
                </param>
                <param name="environment" style="plain" required="true">
                    
                </param>
                <param name="files" style="plain" required="true">
                    
                </param>
                <param name="param_name-n" style="plain" required="true">
                    
                </param>
                <param name="param_value-n" style="plain" required="true">
                    
                </param>
                <param name="timeout_mins" style="plain" required="true">
                    
                </param>
            </representation>
        </request>
        <response status="202"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="stack_delete">
        
        <response status="204"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="stack_abandon">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_snapshot">
        
        <request>
            <representation mediaType="application/json">
                <param name="name" style="plain" required="true">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_list_snapshot">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_show_snapshot">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_restore_snapshot">
        
        <response status="202"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="stack_delete_snapshot">
        
        <response status="204"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="template_validate">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="template_url" style="plain" required="true">
                    
                </param>
                <param name="template" style="plain" required="true">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
                <param name="Description" style="plain" required="true">
                    
                </param>
                <param name="Parameters" style="plain" type="object" required="true">
                    
                </param>
                <param name="ParameterGroups"
                   style="plain"
                   type="list"
                   required="false">
                    
                </param>
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_type_list">
        
        <response status="200">
            <representation mediaType="application/json">
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_type_get">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_type_template">
        
        <response status="200">
            <representation mediaType="application/json">
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_resources_find">
        
        <response status="302"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_list">
        
        <request>
            <representation mediaType="application/xml">
                <param name="nested_depth" style="query" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_show">
        
        <response status="200">
            <representation mediaType="application/json">
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_metadata">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="resource_signal">
        
        <response status="200"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_events_find">
        
        <response status="302"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_event_list">
        
        <request>
            <representation mediaType="application/xml">
                <param name="resource_action" style="query" required="false">
                    
                </param>
                <param name="resource_status" style="query" required="false">
                    
                </param>
                <param name="resource_name" style="query" required="false">
                    
                </param>
                <param name="resource_type" style="query" required="false">
                    
                </param>
                <param name="limit" style="query" required="false">
                    
                </param>
                <param name="marker" style="query" required="false">
                    
                </param>
                <param name="sort_keys" style="query" required="false">
                    
                </param>
                <param name="sort_dir" style="query" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_event_list">
        
        <request>
            <representation mediaType="application/xml">
                <param name="resource_action" style="query" required="false">
                    
                </param>
                <param name="resource_status" style="query" required="false">
                    
                </param>
                <param name="resource_name" style="query" required="false">
                    
                </param>
                <param name="resource_type" style="query" required="false">
                    
                </param>
                <param name="limit" style="query" required="false">
                    
                </param>
                <param name="marker" style="query" required="false">
                    
                </param>
                <param name="sort_keys" style="query" required="false">
                    
                </param>
                <param name="sort_dir" style="query" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="event_show">
        
        <response status="200">
            <representation mediaType="application/json">
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="build_info_show">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="software_config_create">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="config" style="plain" required="false">
                    
                </param>
                <param name="group" style="plain" required="false">
                    
                </param>
                <param name="name" style="plain" required="false">
                    
                </param>
                <param name="inputs" style="plain" required="false">
                    
                </param>
                <param name="outputs" style="plain" required="false">
                    
                </param>
                <param name="options" style="plain" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="software_config_show">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="software_config_delete">
        
        <response status="204"/>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="software_deployment_index">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="software_deployment_metadata">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="software_deployment_create">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="config_id" style="plain" required="true">
                    
                </param>
                <param name="server_id" style="plain" required="true">
                    
                </param>
                <param name="action" style="plain" required="true">
                    
                </param>
                <param name="stack_user_project_id" style="plain" required="false">
                    
                </param>
                <param name="status" style="plain" required="false">
                    
                </param>
                <param name="status_reason" style="plain" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="software_deployment_show">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="software_deployment_update">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="config_id" style="plain" required="true">
                    
                </param>
                <param name="action" style="plain" required="true">
                    
                </param>
                <param name="status" style="plain" required="false">
                    
                </param>
                <param name="status_reason" style="plain" required="false">
                    
                </param>
                <param name="output_values" style="plain" required="false">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="software_deployment_delete">
        
        <response status="204"/>
    </method>
</wadl:application>
