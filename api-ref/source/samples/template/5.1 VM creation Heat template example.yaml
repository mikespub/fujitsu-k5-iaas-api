#
# This is a hello world HOT template just defining a single compute
# server.
#
heat_template_version: 2013-05-23

description: >
  Hello world HOT template that just defines a single server.
  Contains just base features to verify base HOT support.

parameters:
  key_name:
    type: string
    description: Name of an existing key pair to use for the server
    default: (Any key pair name)
  flavor:
    type: string
    description: Flavor for the server to be created
    default: (Select from the following flavors: "S-1", "S-2", "S-4", "S-8", "S-16".)
  image:
    type: string
    description: Image ID or image name to use for the server
    default: 839c1db6-738c-4e2b-9a1d-c14977564203
  db_port:
    type: number
    description: Database port number
    default: 5432
    constraints:
    - range: { min: 5000, max: 60000 }
    description: Port number must be between 5000 and 60000
  az:
    type: string
    description: availability zone
    default: jp-east-1b
  network:
    type: string
    description: network uuid
    default: (Any network ID)
  vm_name:
    type: string
    description: name of vm
    default: (Any virtual machine name)
  sg_name:
    type: string
    description: security group
    default: (Any security group ID)

resources:
  sys-vol:
    type: OS::Cinder::Volume
    properties:
      name: "sys-vol"
      size: 30
      volume_type: "M1"
      availability_zone: { get_param: az }
      image : { get_param: image }

  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks: ["uuid": {get_param: network} ]
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            adduser sample-user
            echo db_port
          params:
            db_port: {get_param: db_port }
      name: { get_param: vm_name }
      security_groups: [{get_param: sg_name }]

outputs:
  server_networks:
    description: The networks of the deployed server
    value: { get_attr: [server, networks] }
