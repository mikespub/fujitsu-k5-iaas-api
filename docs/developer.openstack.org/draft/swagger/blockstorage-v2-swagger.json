{
  "basePath": "/", 
  "consumes": [
    "application/json"
  ], 
  "definitions": {
    "acceptVolumeTransfer": {
      "example": {
        "application/json": {
          "accept": {
            "auth_key": "9266c59563c84664"
          }
        }
      }, 
      "properties": {
        "auth_key": {
          "description": "The authentication key for the volume transfer.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "auth_key"
      ], 
      "type": "object"
    }, 
    "acceptVolumeTransfer_202": {
      "properties": {
        "id": {
          "description": "The UUID of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the volume transfer.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The name of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "name", 
        "volume_id", 
        "links"
      ], 
      "type": "object"
    }, 
    "attachVolume": {
      "example": {
        "application/json": {
          "os-attach": {
            "instance_uuid": "95D9EF50-507D-11E5-B970-0800200C9A66", 
            "mountpoint": "/dev/vdc"
          }
        }
      }, 
      "properties": {
        "host_name": {
          "description": "The name of the attaching host.", 
          "format": "", 
          "type": "string"
        }, 
        "instance_uuid": {
          "description": "The UUID of the attaching instance.", 
          "format": "", 
          "type": "string"
        }, 
        "mountpoint": {
          "description": "The attaching mount point.", 
          "format": "", 
          "type": "string"
        }, 
        "os-attach": {
          "description": "The ``os-attach`` action.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "os-attach"
      ], 
      "type": "object"
    }, 
    "createBackup": {
      "example": {
        "application/json": {
          "backup": {
            "container": null, 
            "description": null, 
            "incremental": true, 
            "name": "backup001", 
            "volume_id": "64f5d2fb-d836-4063-b7e2-544d5c1ff607"
          }
        }
      }, 
      "properties": {
        "backup": {
          "description": "A ``backup`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "container": {
          "description": "The container name or null.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The backup description or null.", 
          "format": "", 
          "type": "string"
        }, 
        "force": {
          "description": "Indicates whether to backup, even if the volume is attached.\nDefault is ``false``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "incremental": {
          "description": "The backup mode. A valid value is ``true`` for incremental backup\nmode or ``false`` for full backup mode. Default is ``false``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume that you want to back up.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "backup", 
        "container", 
        "name", 
        "description", 
        "volume_id"
      ], 
      "type": "object"
    }, 
    "createBackup_202": {
      "properties": {
        "backup": {
          "description": "A ``backup`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "id": {
          "description": "The UUID of the backup.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the backup.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "backup", 
        "id", 
        "links", 
        "name"
      ], 
      "type": "object"
    }, 
    "createCGsnapshot": {
      "example": {
        "application/json": {
          "cgsnapshot": {
            "consistencygroup_id": "6f519a48-3183-46cf-a32f-41815f814546", 
            "description": "first consistency group", 
            "name": "firstcg", 
            "project_id": "6f519a48-3183-46cf-a32f-41815f815555", 
            "status": "creating", 
            "user_id": "6f519a48-3183-46cf-a32f-41815f814444"
          }
        }
      }, 
      "properties": {
        "name": {
          "description": "The consistency group snapshot name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "name"
      ], 
      "type": "object"
    }, 
    "createCGsnapshot_202": {
      "properties": {
        "consistencygroup_id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The consistency group snapshot description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the consistency group snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The consistency group snapshot name.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The ``status`` of the consistency group snapshot.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "consistencygroup_id", 
        "created_at", 
        "name", 
        "description"
      ], 
      "type": "object"
    }, 
    "createConsistencyGroup": {
      "example": {
        "application/json": {
          "consistencygroup": {
            "availability_zone": "az0", 
            "description": "first consistency group", 
            "name": "firstcg", 
            "project_id": "6f519a48-3183-46cf-a32f-41815f815555", 
            "status": "creating", 
            "user_id": "6f519a48-3183-46cf-a32f-41815f814546", 
            "volume_types": [
              "type1", 
              "type2"
            ]
          }
        }
      }, 
      "properties": {
        "availability_zone": {
          "description": "The name of the availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The description of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "project_id": {
          "description": "The UUID of the project.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The status of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The UUID of the user.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_types": {
          "description": "The list of volume types.\n\nIn an environment with multiple-storage back ends, the scheduler\ndetermines where to send the volume based on the volume type.\n\nFor information about how to use volume types to create multiple-\nstorage back ends, see `Configure multiple-storage back ends\n<http://docs.openstack.org/admin-\nguide/blockstorage_multi_backend.html>`_.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "name", 
        "description", 
        "volume_types", 
        "user_id", 
        "project_id", 
        "status"
      ], 
      "type": "object"
    }, 
    "createConsistencyGroupFromSource": {
      "example": {
        "application/json": {
          "consistencygroup-from-src": {
            "cgsnapshot_id": "6f519a48-3183-46cf-a32f-41815f813986", 
            "description": "first consistency group", 
            "name": "firstcg", 
            "project_id": "6f519a48-3183-46cf-a32f-41815f814444", 
            "source_cgid": "6f519a48-3183-46cf-a32f-41815f814546", 
            "status": "creating", 
            "user_id": "6f519a48-3183-46cf-a32f-41815f815555"
          }
        }
      }, 
      "properties": {
        "cgsnapshot_id": {
          "description": "The UUID of the consistency group snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The description of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "project_id": {
          "description": "The UUID of the project.", 
          "format": "", 
          "type": "string"
        }, 
        "source_cgid": {
          "description": "The UUID of the source consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The status of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The UUID of the user.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "user_id", 
        "project_id", 
        "status"
      ], 
      "type": "object"
    }, 
    "createQoSSpec": {
      "example": {
        "application/json": {
          "qos_specs": {
            "availability": "100", 
            "name": "reliability-spec", 
            "numberOfFailures": "0"
          }
        }
      }, 
      "properties": {
        "consumer": {
          "description": "The consumer type.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the QoS specification.", 
          "format": "", 
          "type": "string"
        }, 
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "qos_specs", 
        "name"
      ], 
      "type": "object"
    }, 
    "createQoSSpec_202": {
      "properties": {
        "consumer": {
          "description": "The consumer type.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The generated ID for the QoS specification.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "The QoS specification links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The name of the QoS specification.", 
          "format": "", 
          "type": "string"
        }, 
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "specs": {
          "description": "A ``specs`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "qos_specs", 
        "specs", 
        "consumer", 
        "name", 
        "id", 
        "links"
      ], 
      "type": "object"
    }, 
    "createSnapshot": {
      "properties": {
        "description": {
          "description": "A description for the snapshot. Default is ``None``.", 
          "format": "", 
          "type": "string"
        }, 
        "force": {
          "description": "Indicates whether to snapshot, even if the volume is attached.\nDefault is ``false``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The name of the snapshot. Default is ``None``.", 
          "format": "", 
          "type": "string"
        }, 
        "snapshot": {
          "description": "A partial representation of a snapshot used in the creation\nprocess.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "To create a snapshot from an existing volume, specify the UUID of\nthe existing volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot", 
        "volume_id"
      ], 
      "type": "object"
    }, 
    "createSnapshot_202": {
      "properties": {
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "A description for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The snapshot UUID.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs for the snapshot, if any.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot": {
          "description": "A ``snapshot`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The status for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "If the snapshot was created from a volume, the volume ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot", 
        "status", 
        "description", 
        "created_at", 
        "metadata", 
        "volume_id", 
        "size", 
        "id", 
        "name"
      ], 
      "type": "object"
    }, 
    "createVolume": {
      "example": {
        "application/json": {
          "volume": {
            "availability_zone": null, 
            "consistencygroup_id": null, 
            "description": null, 
            "imageRef": null, 
            "metadata": {}, 
            "multiattach ": false, 
            "name": null, 
            "size": 10, 
            "snapshot_id": null, 
            "source_replica": null, 
            "source_volid": null, 
            "volume_type": null
          }
        }
      }, 
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "consistencygroup_id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The UUID of the image from which you want to create the volume.\nRequired to create a bootable volume.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs that are associated with\nthe volume.", 
          "format": "", 
          "type": "object"
        }, 
        "multiattach": {
          "description": "To enable this volume to attach to more than one server, set this\nvalue to ``true``. Default is ``false``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "scheduler_hints": {
          "description": "The dictionary of data to send to the scheduler.", 
          "format": "", 
          "type": "object"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "To create a volume from an existing snapshot, specify the UUID of\nthe volume snapshot. The volume is created in same availability\nzone and with same size as the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "source_replica": {
          "description": "The UUID of the primary volume to clone.", 
          "format": "", 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The UUID of the source volume. The API creates a new volume with\nthe same size as the source volume.", 
          "format": "", 
          "type": "string"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_type": {
          "description": "The volume type. To create an environment with multiple-storage\nback ends, you must specify a volume type. Block Storage volume\nback ends are spawned as children to ``cinder-volume``, and they\nare keyed from a unique queue. They are named ``cinder-\nvolume.HOST.BACKEND``. For example, ``cinder-\nvolume.ubuntu.lvmdriver``. When a volume is created, the scheduler\nchooses an appropriate back end to handle the request based on the\nvolume type.\n\nDefault is ``None``.\n\nFor information about how to use volume types to create multiple-\nstorage back ends, see `Configure multiple-storage back ends\n<http://docs.openstack.org/admin-\nguide/blockstorage_multi_backend.html>`_.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "volume", 
        "size"
      ], 
      "type": "object"
    }, 
    "createVolumeMetadata": {
      "example": {
        "application/json": {
          "metadata": {
            "name": "metadata0"
          }
        }
      }, 
      "properties": {
        "metadata": {
          "description": "A ``metadata`` object. Contains one or more metadata key and value\npairs that are associated with the volume.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "metadata"
      ], 
      "type": "object"
    }, 
    "createVolumeMetadata_202": {
      "properties": {
        "metadata": {
          "description": "A ``metadata`` object. Contains one or more metadata key and value\npairs that are associated with the volume.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "metadata"
      ], 
      "type": "object"
    }, 
    "createVolumeTransfer": {
      "example": {
        "application/json": {
          "transfer": {
            "name": "first volume", 
            "volume_id": "c86b9af4-151d-4ead-b62c-5fb967af0e37"
          }
        }
      }, 
      "properties": {
        "name": {
          "description": "The volume transfer name.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "volume_id"
      ], 
      "type": "object"
    }, 
    "createVolumeTransfer_202": {
      "properties": {
        "auth_key": {
          "description": "The authentication key for the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the volume transfer.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The volume transfer name.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "created_at", 
        "name", 
        "volume_id", 
        "auth_key", 
        "links"
      ], 
      "type": "object"
    }, 
    "createVolumeType": {
      "example": {
        "application/json": {
          "volume_type": {
            "description": "volume type 0001", 
            "extra_specs": {
              "capabilities": "gpu"
            }, 
            "name": "vol-type-001", 
            "os-volume-type-access:is_public": true
          }
        }
      }, 
      "properties": {
        "volume_type": {
          "description": "A ``volume_type`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "volume_type"
      ], 
      "type": "object"
    }, 
    "createVolumeTypeAccessExt": {
      "example": {
        "application/json": {
          "addProjectAccess": {
            "project": "f270b245cb11498ca4031deb7e141cfa"
          }
        }
      }, 
      "properties": {
        "project": {
          "description": "The ID of the project. Volume Type access to be added to this\nproject ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "project"
      ], 
      "type": "object"
    }, 
    "createVolumeType_200": {
      "properties": {
        "description": {
          "description": "The description of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "extra_specs": {
          "description": "A set of key and value pairs that contains the specifications for a\nvolume type.", 
          "format": "", 
          "type": "object"
        }, 
        "is_public": {
          "description": "Indicates whether the volume type is public or not. Default is\n``true``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The name of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The ``volume_type`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "volume_type", 
        "name", 
        "extra_specs"
      ], 
      "type": "object"
    }, 
    "createVolume_202": {
      "properties": {
        "attachments": {
          "description": "Instance attachment information.\n\nIf this volume is attached to a server instance, the attachments\nlist includes the UUID of the attached server, an attachment UUID,\nthe name of the attached host, if any, the volume UUID, the device,\nand the device UUID.\n\nOtherwise, this list is empty.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "bootable": {
          "description": "Enables or disables the bootable attribute. You can boot an\ninstance from a bootable volume.", 
          "format": "", 
          "type": "boolean"
        }, 
        "consistencygroup_id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "encrypted": {
          "description": "If true, this volume is encrypted.", 
          "format": "", 
          "type": "boolean"
        }, 
        "id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "The volume links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs that are associated with\nthe volume.", 
          "format": "", 
          "type": "object"
        }, 
        "migration_status": {
          "description": "The volume migration status.", 
          "format": "", 
          "type": "string"
        }, 
        "multiattach": {
          "description": "If true, this volume can attach to more than one instance.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "replication_status": {
          "description": "The volume replication status.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The UUID of the source volume snapshot. The API creates a new\nvolume snapshot with the same size as the source volume snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The UUID of the source volume.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.\n\nIf the ``updated_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The UUID of the user.", 
          "format": "", 
          "type": "string"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_type": {
          "description": "The volume type. In an environment with multiple-storage back ends,\nthe scheduler determines where to send the volume based on the\nvolume type.\n\nFor information about how to use volume types to create multiple-\nstorage back ends, see `Configure multiple-storage back ends\n<http://docs.openstack.org/admin-\nguide/blockstorage_multi_backend.html>`_.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "volume", 
        "status", 
        "migration_status", 
        "user_id", 
        "attachments", 
        "links", 
        "availability_zone", 
        "bootable", 
        "encrypted", 
        "created_at", 
        "description", 
        "updated_at", 
        "volume_type", 
        "name", 
        "replication_status", 
        "consistencygroup_id", 
        "source_volid", 
        "snapshot_id", 
        "multiattach", 
        "metadata", 
        "id", 
        "size"
      ], 
      "type": "object"
    }, 
    "deleteConsistencyGroup": {
      "example": {
        "application/json": {
          "consistencygroup": {
            "force": false
          }
        }
      }, 
      "properties": {
        "force": {
          "description": "If set to ``true``, forces deletion of a consistency group that has\na registered volume.", 
          "format": "", 
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "extendVolume": {
      "example": {
        "application/json": {
          "os-extend": {
            "new_size": 3
          }
        }
      }, 
      "properties": {
        "new_size": {
          "description": "The new size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "os-extend": {
          "description": "The ``os-extend`` action.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "os-extend", 
        "new_size"
      ], 
      "type": "object"
    }, 
    "forceDeleteBackup": {
      "example": {
        "application/json": {
          "os-force_delete": {}
        }
      }, 
      "properties": {
        "os-force_delete": {
          "description": "The ``os-force_delete`` action.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-force_delete"
      ], 
      "type": "object"
    }, 
    "forcedetachVolume": {
      "example": {
        "application/json": {
          "os-force_detach": {
            "attachment_id": "d8777f54-84cf-4809-a679-468ffed56cf1", 
            "connector": {
              "initiator": "iqn.2012-07.org.fake:01"
            }
          }
        }
      }, 
      "properties": {
        "attachment_id": {
          "description": "The interface ID.", 
          "format": "", 
          "type": "string"
        }, 
        "connector": {
          "description": "The ``connector`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "os-force_detach": {
          "description": "The ``os-force_detach`` action.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "os-force_detach", 
        "connector"
      ], 
      "type": "object"
    }, 
    "listBackupsDetails_200": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "backups": {
          "description": "A list of ``backup`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "container": {
          "description": "The container name or null.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The backup description or null.", 
          "format": "", 
          "type": "string"
        }, 
        "fail_reason": {
          "description": "If the backup failed, the reason for the failure. Otherwise, null.", 
          "format": "", 
          "type": "string"
        }, 
        "has_dependent_backups": {
          "description": "If this value is ``true``, the backup depends on other backups.", 
          "format": "", 
          "type": "boolean"
        }, 
        "id": {
          "description": "The UUID of the backup.", 
          "format": "", 
          "type": "string"
        }, 
        "is_incremental": {
          "description": "Indicates whether the backup mode is incremental. If this value is\n``true``, the backup mode is incremental. If this value is\n``false``, the backup mode is full.", 
          "format": "", 
          "type": "boolean"
        }, 
        "links": {
          "description": "Links for the backup.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "type": "string"
        }, 
        "object_count": {
          "description": "The number of objects in the backup.", 
          "format": "", 
          "type": "integer"
        }, 
        "size": {
          "description": "The size of the backup, in GB.", 
          "format": "", 
          "type": "integer"
        }, 
        "status": {
          "description": "The backup status. Refer to Backup statuses table for the possible\nstatus value.", 
          "format": "", 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.\n\nIf the ``updated_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume from which the backup was created.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "backups", 
        "availability_zone", 
        "container", 
        "created_at", 
        "description", 
        "updated_at", 
        "fail_reason", 
        "id", 
        "links", 
        "name", 
        "object_count", 
        "size", 
        "status", 
        "volume_id"
      ], 
      "type": "object"
    }, 
    "listBackups_200": {
      "properties": {
        "backups": {
          "description": "A list of ``backup`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "id": {
          "description": "The UUID of the backup.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the backup.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "backups", 
        "id", 
        "links", 
        "name"
      ], 
      "type": "object"
    }, 
    "listCGsnapshotsDetail-v2_200": {
      "properties": {
        "consistencygroup_id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The consistency group snapshot description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the consistency group snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The consistency group snapshot name.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The ``status`` of the consistency group snapshot.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "consistencygroup_id", 
        "created_at", 
        "name", 
        "description"
      ], 
      "type": "object"
    }, 
    "listCGsnapshots_200": {
      "properties": {
        "id": {
          "description": "The UUID of the consistency group snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The consistency group snapshot name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "name"
      ], 
      "type": "object"
    }, 
    "listConsistencyGroupsDetail_200": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone name.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The consistency group description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The consistency group name.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The consistency group status. A valid value is ``creating``,\n``available``, ``error``, ``deleting``, ``updating``, or\n``invalid``.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_types": {
          "description": "The list of volume type IDs.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "id", 
        "status", 
        "availability_zone", 
        "created_at", 
        "name", 
        "description", 
        "volume_types"
      ], 
      "type": "object"
    }, 
    "listConsistencyGroups_200": {
      "properties": {
        "id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The consistency group name.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "name"
      ], 
      "type": "object"
    }, 
    "listExtensions-cinder-v2_200": {
      "properties": {
        "alias": {
          "description": "The alias for the extension. For example, \"FOXNSOX\", \"os-\navailability-zone\", \"os-extended-quotas\", \"os-share-unmanage\" or\n\"os-used-limits.\"", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The extension description.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "List of links related to the extension.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The name of the extension. For example, \"Fox In Socks.\"", 
          "format": "", 
          "type": "string"
        }, 
        "namespace": {
          "description": "Link associated to the extension.", 
          "format": "", 
          "type": "string"
        }, 
        "updated": {
          "description": "The date and time stamp when the extension was last updated.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "description", 
        "namespace", 
        "alias", 
        "links", 
        "updated"
      ], 
      "type": "object"
    }, 
    "listPools_200": {
      "properties": {
        "QoS_support": {
          "description": "The quality of service (QoS) support.", 
          "format": "", 
          "type": "boolean"
        }, 
        "capabilities": {
          "description": "The capabilities for the back end.\n\nThe value is either ``null`` or a string value that indicates the\ncapabilities for each pool. For example, ``total_capacity`` or\n``QoS_support``.", 
          "format": "", 
          "type": "object"
        }, 
        "driver_version": {
          "description": "The driver version.", 
          "format": "", 
          "type": "string"
        }, 
        "free_capacity": {
          "description": "The amount of free capacity for the back-end volume, in GBs. A\nvalid value is a string, such as ``unknown``, or an integer.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the back-end volume.", 
          "format": "", 
          "type": "string"
        }, 
        "reserved_percentage": {
          "description": "The percentage of the total capacity that is reserved for the\ninternal use by the back end.", 
          "format": "", 
          "type": "integer"
        }, 
        "storage_protocol": {
          "description": "The storage back end for the back-end volume. For example,\n``iSCSI`` or ``FC``.", 
          "format": "", 
          "type": "string"
        }, 
        "total_capacity": {
          "description": "The total capacity for the back-end volume, in GBs. A valid value\nis a string, such as ``unknown``, or an integer.", 
          "format": "", 
          "type": "string"
        }, 
        "updated": {
          "description": "The date and time stamp when the API request was issued.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_backend_name": {
          "description": "The name of the back-end volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "capabilities", 
        "updated", 
        "total_capacity", 
        "free_capacity", 
        "volume_backend_name", 
        "reserved_percentage", 
        "driver_version", 
        "storage_protocol", 
        "QoS_support"
      ], 
      "type": "object"
    }, 
    "listQoSSpecs_200": {
      "properties": {
        "consumer": {
          "description": "The consumer type.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The generated ID for the QoS specification.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the QoS specification.", 
          "format": "", 
          "type": "string"
        }, 
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "specs": {
          "description": "Specification key and value pairs.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "qos_specs", 
        "specs", 
        "consumer", 
        "name", 
        "id"
      ], 
      "type": "object"
    }, 
    "listSnapshotsDetail_200": {
      "properties": {
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "A description for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The snapshot UUID.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs for the snapshot, if any.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "os-extended-snapshot-attributes:progress": {
          "description": "A percentage value for the build progress.", 
          "format": "", 
          "type": "integer"
        }, 
        "os-extended-snapshot-attributes:project_id": {
          "description": "The UUID of the owning project.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "status": {
          "description": "The status for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "If the snapshot was created from a volume, the volume ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "status", 
        "description", 
        "created_at", 
        "metadata", 
        "volume_id", 
        "size", 
        "id", 
        "name", 
        "os-extended-snapshot-attributes:progress", 
        "os-extended-snapshot-attributes:project_id"
      ], 
      "type": "object"
    }, 
    "listSnapshots_200": {
      "properties": {
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "A description for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The snapshot UUID.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs for the snapshot, if any.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "status": {
          "description": "The status for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "If the snapshot was created from a volume, the volume ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "status", 
        "description", 
        "created_at", 
        "metadata", 
        "volume_id", 
        "size", 
        "id", 
        "name"
      ], 
      "type": "object"
    }, 
    "listVolumeTransferDetails_200": {
      "properties": {
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the volume transfer.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The name of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "created_at", 
        "name", 
        "volume_id", 
        "links"
      ], 
      "type": "object"
    }, 
    "listVolumeTransfer_200": {
      "properties": {
        "id": {
          "description": "The UUID of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the volume transfer.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The name of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "name", 
        "volume_id", 
        "links"
      ], 
      "type": "object"
    }, 
    "listVolumeTypeAccessExt_200": {
      "properties": {
        "project_id": {
          "description": "The Project ID having access to this volume type.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "project_id"
      ], 
      "type": "object"
    }, 
    "listVolumesDetail_200": {
      "properties": {
        "attachments": {
          "description": "Instance attachment information.\n\nIf this volume is attached to a server instance, the attachments\nlist includes the UUID of the attached server, an attachment UUID,\nthe name of the attached host, if any, the volume UUID, the device,\nand the device UUID.\n\nOtherwise, this list is empty.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "bootable": {
          "description": "Enables or disables the bootable attribute. You can boot an\ninstance from a bootable volume.", 
          "format": "", 
          "type": "boolean"
        }, 
        "consistencygroup_id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "encrypted": {
          "description": "If true, this volume is encrypted.", 
          "format": "", 
          "type": "boolean"
        }, 
        "id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "The volume links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs that are associated with\nthe volume.", 
          "format": "", 
          "type": "object"
        }, 
        "migration_status": {
          "description": "The volume migration status.", 
          "format": "", 
          "type": "string"
        }, 
        "multiattach": {
          "description": "If true, this volume can attach to more than one instance.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "os-vol-host-attr:host": {
          "description": "Current back-end of the volume.", 
          "format": "", 
          "type": "string"
        }, 
        "os-vol-mig-status-attr:migstat": {
          "description": "The status of this volume migration (None means that a migration is\nnot currently in progress).", 
          "format": "", 
          "type": "string"
        }, 
        "os-vol-mig-status-attr:name_id": {
          "description": "The volume ID that this volume name on the back-end is based on.", 
          "format": "", 
          "type": "string"
        }, 
        "os-vol-tenant-attr:tenant_id": {
          "description": "The tenant ID which the volume belongs to.", 
          "format": "", 
          "type": "string"
        }, 
        "os-volume-replication:driver_data": {
          "description": "The name of the volume replication driver.", 
          "format": "", 
          "type": "string"
        }, 
        "os-volume-replication:extended_status": {
          "description": "The volume replication status managed by the driver of backend\nstorage.", 
          "format": "", 
          "type": "string"
        }, 
        "replication_status": {
          "description": "The volume replication status.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The UUID of the source volume snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The UUID of the source volume.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.\n\nIf the ``updated_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The UUID of the user.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The volume type. In an environment with multiple-storage back ends,\nthe scheduler determines where to send the volume based on the\nvolume type.\n\nFor information about how to use volume types to create multiple-\nstorage back ends, see `Configure multiple-storage back ends\n<http://docs.openstack.org/admin-\nguide/blockstorage_multi_backend.html>`_.", 
          "format": "", 
          "type": "string"
        }, 
        "volumes": {
          "description": "A list of ``volume`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "volumes", 
        "migration_status", 
        "attachments", 
        "links", 
        "availability_zone", 
        "os-vol-host-attr:host", 
        "encrypted", 
        "updated_at", 
        "replication_status", 
        "snapshot_id", 
        "id", 
        "size", 
        "user_id", 
        "os-vol-tenant-attr:tenant_id", 
        "os-vol-mig-status-attr:migstat", 
        "metadata", 
        "status", 
        "description", 
        "multiattach", 
        "source_volid", 
        "consistencygroup_id", 
        "os-vol-mig-status-attr:name_id", 
        "name", 
        "bootable", 
        "created_at", 
        "volume_type"
      ], 
      "type": "object"
    }, 
    "listVolumes_200": {
      "properties": {
        "id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "The volume links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "volumes": {
          "description": "A list of ``volume`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "volumes", 
        "name", 
        "id", 
        "links"
      ], 
      "type": "object"
    }, 
    "manageExisting": {
      "example": {
        "application/json": {
          "volume": {
            "availability_zone": "az2", 
            "bootable": true, 
            "description": "Volume imported from existingLV", 
            "host": "geraint-VirtualBox", 
            "metadata": {
              "key1": "value1", 
              "key2": "value2"
            }, 
            "name": "New Volume", 
            "ref": {
              "source-volume-id": "1234", 
              "source-volume-name": "existingLV"
            }, 
            "volume_type": null
          }
        }
      }, 
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "bootable": {
          "description": "Enables or disables the bootable attribute. You can boot an\ninstance from a bootable volume.", 
          "format": "", 
          "type": "boolean"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The OpenStack Block Storage host where the existing volume resides.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "ref": {
          "description": "A reference to the existing volume. The internal structure of this\nreference depends on the volume driver implementation. For details\nabout the required elements in the structure, see the documentation\nfor the volume driver.", 
          "format": "", 
          "type": "string"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "volume", 
        "host", 
        "ref"
      ], 
      "type": "object"
    }, 
    "promotereplicaVolume": {
      "example": {
        "application/json": {
          "os-promote-replica": {}
        }
      }, 
      "properties": {
        "os-promote-replica": {
          "description": "The ``os-promote-replica`` action.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "os-promote-replica"
      ], 
      "type": "object"
    }, 
    "reenablereplicaVolume": {
      "example": {
        "application/json": {
          "os-reenable-replica": {}
        }
      }, 
      "properties": {
        "os-reenable-replica": {
          "description": "The ``os-reenable-replica`` action.", 
          "format": "", 
          "type": "object"
        }, 
        "os-volume-replication:driver_data": {
          "description": "The name of the volume replication driver.", 
          "format": "", 
          "type": "string"
        }, 
        "os-volume-replication:extended_status": {
          "description": "The status of the volume replication.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "os-reenable-replica", 
        "size"
      ], 
      "type": "object"
    }, 
    "removeVolumeTypeAccessExt": {
      "example": {
        "application/json": {
          "removeProjectAccess": {
            "project": "f270b245cb11498ca4031deb7e141cfa"
          }
        }
      }, 
      "properties": {
        "project": {
          "description": "The ID of the project. Volume Type access to be added to this\nproject ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "project"
      ], 
      "type": "object"
    }, 
    "resetVolume": {
      "example": {
        "application/json": {
          "os-reset_status": {
            "attach_status": "detached", 
            "migration_status": "migrating", 
            "status": "available"
          }
        }
      }, 
      "properties": {
        "attach_status": {
          "description": "The volume attach status.", 
          "format": "", 
          "type": "string"
        }, 
        "migration_status": {
          "description": "The volume migration status.", 
          "format": "", 
          "type": "string"
        }, 
        "os-reset_status": {
          "description": "The ``os-reset_status`` action.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "os-reset_status"
      ], 
      "type": "object"
    }, 
    "restoreBackup": {
      "example": {
        "application/json": {
          "restore": {
            "name": "vol-01", 
            "volume_id": "64f5d2fb-d836-4063-b7e2-544d5c1ff607"
          }
        }
      }, 
      "properties": {
        "name": {
          "description": "The name of the volume to which you want to restore a backup.", 
          "format": "", 
          "type": "string"
        }, 
        "restore": {
          "description": "A ``restore`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_id": {
          "description": "The UUID of the volume to which you want to restore a backup.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "restore"
      ], 
      "type": "object"
    }, 
    "restoreBackup_202": {
      "properties": {
        "backup_id": {
          "description": "The UUID of the backup.", 
          "format": "", 
          "type": "string"
        }, 
        "restore": {
          "description": "A ``restore`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_id": {
          "description": "The UUID of the volume to which the backup was restored.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "restore", 
        "backup_id", 
        "volume_id"
      ], 
      "type": "object"
    }, 
    "setQoSKey": {
      "example": {
        "application/json": {
          "qos_specs": {
            "delay": "1"
          }
        }
      }, 
      "properties": {
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "specs": {
          "description": "Specification key and value pairs.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "qos_specs", 
        "specs"
      ], 
      "type": "object"
    }, 
    "setVolumeimagemetadata": {
      "example": {
        "application/json": {
          "os-set_image_metadata": {
            "metadata": {
              "image_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
              "image_name": "image", 
              "kernel_id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
              "ramdisk_id": "somedisk"
            }
          }
        }
      }, 
      "properties": {
        "metadata": {
          "description": "The image metadata to add to the volume as a set of metadata key\nand value pairs.", 
          "format": "", 
          "type": "object"
        }, 
        "os-set_image_metadata": {
          "description": "The ``os-set_image_metadata`` action.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "os-set_image_metadata", 
        "metadata"
      ], 
      "type": "object"
    }, 
    "showAbsoluteLimits_200": {
      "properties": {
        "absolute": {
          "description": "An ``absolute`` limits object.", 
          "format": "", 
          "type": "object"
        }, 
        "limits": {
          "description": "A list of ``limit`` objects.", 
          "format": "", 
          "type": "object"
        }, 
        "maxTotalBackupGigabytes": {
          "description": "The maximum total amount of backups, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "maxTotalBackups": {
          "description": "The maximum number of backups.", 
          "format": "", 
          "type": "integer"
        }, 
        "maxTotalSnapshots": {
          "description": "The maximum number of snapshots.", 
          "format": "", 
          "type": "integer"
        }, 
        "maxTotalVolumeGigabytes": {
          "description": "The maximum total amount of volumes, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "maxTotalVolumes": {
          "description": "The maximum number of volumes.", 
          "format": "", 
          "type": "integer"
        }, 
        "rate": {
          "description": "Rate-limit volume copy bandwidth, used to mitigate slow down of\ndata access from the instances.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "totalBackupGigabytesUsed": {
          "description": "The total number of backups gibibytes (GiB) used.", 
          "format": "", 
          "type": "integer"
        }, 
        "totalBackupsUsed": {
          "description": "The total number of backups used.", 
          "format": "", 
          "type": "integer"
        }, 
        "totalGigabytesUsed": {
          "description": "The total number of gibibytes (GiB) used.", 
          "format": "", 
          "type": "integer"
        }, 
        "totalSnapshotsUsed": {
          "description": "The total number of snapshots used.", 
          "format": "", 
          "type": "integer"
        }, 
        "totalVolumesUsed": {
          "description": "The total number of volumes used.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "limits", 
        "absolute", 
        "rate", 
        "totalSnapshotsUsed", 
        "maxTotalBackups", 
        "maxTotalVolumeGigabytes", 
        "maxTotalSnapshots", 
        "maxTotalBackupGigabytes", 
        "totalBackupGigabytesUsed", 
        "maxTotalVolumes", 
        "totalVolumesUsed", 
        "totalBackupsUsed", 
        "totalGigabytesUsed"
      ], 
      "type": "object"
    }, 
    "showBackendCapabilities_200": {
      "properties": {
        "description": {
          "description": "The capabilities description.", 
          "format": "", 
          "type": "string"
        }, 
        "driver_version": {
          "description": "The driver version.", 
          "format": "", 
          "type": "string"
        }, 
        "namespace": {
          "description": "The storage namespace, such as ``OS::Storage::Capabilities::foo``.", 
          "format": "", 
          "type": "string"
        }, 
        "pool_name": {
          "description": "The name of the storage pool.", 
          "format": "", 
          "type": "string"
        }, 
        "properties": {
          "description": "The backend volume capabilities list, which is consisted of cinder\nstandard capabilities and vendor unique properties.", 
          "format": "", 
          "type": "object"
        }, 
        "storage_protocol": {
          "description": "The storage protocol, such as Fibre Channel, iSCSI, NFS, and so on.", 
          "format": "", 
          "type": "string"
        }, 
        "vendor_name": {
          "description": "The name of the vendor.", 
          "format": "", 
          "type": "string"
        }, 
        "visibility": {
          "description": "The volume type access.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_backend_name": {
          "description": "The name of the back-end volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "pool_name", 
        "visibility", 
        "description", 
        "driver_version", 
        "volume_backend_name", 
        "vendor_name", 
        "namespace", 
        "properties", 
        "storage_protocol"
      ], 
      "type": "object"
    }, 
    "showBackup_200": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "backup": {
          "description": "A ``backup`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "container": {
          "description": "The container name or null.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The backup description or null.", 
          "format": "", 
          "type": "string"
        }, 
        "fail_reason": {
          "description": "If the backup failed, the reason for the failure. Otherwise, null.", 
          "format": "", 
          "type": "string"
        }, 
        "has_dependent_backups": {
          "description": "If this value is ``true``, the backup depends on other backups.", 
          "format": "", 
          "type": "boolean"
        }, 
        "id": {
          "description": "The UUID of the backup.", 
          "format": "", 
          "type": "string"
        }, 
        "is_incremental": {
          "description": "Indicates whether the backup mode is incremental. If this value is\n``true``, the backup mode is incremental. If this value is\n``false``, the backup mode is full.", 
          "format": "", 
          "type": "boolean"
        }, 
        "links": {
          "description": "Links for the backup.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "type": "string"
        }, 
        "object_count": {
          "description": "The number of objects in the backup.", 
          "format": "", 
          "type": "integer"
        }, 
        "size": {
          "description": "The size of the backup, in GB.", 
          "format": "", 
          "type": "integer"
        }, 
        "status": {
          "description": "The backup status. Refer to Backup statuses table for the possible\nstatus value.", 
          "format": "", 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.\n\nIf the ``updated_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume from which the backup was created.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "backup", 
        "availability_zone", 
        "container", 
        "created_at", 
        "description", 
        "updated_at", 
        "fail_reason", 
        "id", 
        "links", 
        "name", 
        "object_count", 
        "size", 
        "status", 
        "volume_id"
      ], 
      "type": "object"
    }, 
    "showCGsnapshot_200": {
      "properties": {
        "consistencygroup_id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The consistency group snapshot description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the consistency group snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The consistency group snapshot name.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The ``status`` of the consistency group snapshot.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "consistencygroup_id", 
        "created_at", 
        "name", 
        "description"
      ], 
      "type": "object"
    }, 
    "showConsistencyGroup_200": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone name.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The consistency group description.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The consistency group name.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The consistency group status. A valid value is ``creating``,\n``available``, ``error``, ``deleting``, ``updating``, or\n``invalid``.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_types": {
          "description": "The list of volume type IDs.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "id", 
        "status", 
        "availability_zone", 
        "created_at", 
        "name", 
        "description", 
        "volume_types"
      ], 
      "type": "object"
    }, 
    "showImageMetadataForVolume": {
      "example": {
        "application/json": {
          "volume": {
            "availability_zone": "az2", 
            "bootable": true, 
            "description": "Volume imported from existingLV", 
            "host": "geraint-VirtualBox", 
            "metadata": {
              "key1": "value1", 
              "key2": "value2"
            }, 
            "name": "New Volume", 
            "ref": {
              "source-volume-id": "1234", 
              "source-volume-name": "existingLV"
            }, 
            "volume_type": null
          }
        }
      }, 
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "bootable": {
          "description": "Enables or disables the bootable attribute. You can boot an\ninstance from a bootable volume.", 
          "format": "", 
          "type": "boolean"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "host": {
          "description": "The OpenStack Block Storage host where the existing volume resides.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "ref": {
          "description": "A reference to the existing volume. The internal structure of this\nreference is dependent on the implementation of the volume driver,\nsee the specific driver's documentation for details of the required\nelements in the structure.", 
          "format": "", 
          "type": "object"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "volume", 
        "host", 
        "ref"
      ], 
      "type": "object"
    }, 
    "showQoSDetails_200": {
      "properties": {
        "consumer": {
          "description": "The consumer type.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The generated ID for the QoS specification.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "The QoS specification links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The name of the QoS specification.", 
          "format": "", 
          "type": "string"
        }, 
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "specs": {
          "description": "Specification key and value pairs.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "qos_specs", 
        "specs", 
        "consumer", 
        "name", 
        "id", 
        "links"
      ], 
      "type": "object"
    }, 
    "showQuotaDefaults_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses that are allowed for each tenant.\nMust be equal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content that are allowed for each injected\nfile.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes that are allowed for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs that are allowed for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items that are allowed for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules that are allowed for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "showQuotaDetailUser_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses that are allowed for each tenant.\nMust be equal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content that are allowed for each injected\nfile.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes that are allowed for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs that are allowed for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items that are allowed for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules that are allowed for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "showQuotaUser_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses that are allowed for each tenant.\nMust be equal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content that are allowed for each injected\nfile.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes that are allowed for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs that are allowed for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items that are allowed for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules that are allowed for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "showQuota_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses that are allowed for each tenant.\nMust be equal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content that are allowed for each injected\nfile.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes that are allowed for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs that are allowed for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items that are allowed for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules that are allowed for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "showSnapshotMetadata_200": {
      "properties": {
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "A description for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The snapshot UUID.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs for the snapshot, if any.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "os-extended-snapshot-attributes:progress": {
          "description": "A percentage value for the build progress.", 
          "format": "", 
          "type": "integer"
        }, 
        "os-extended-snapshot-attributes:project_id": {
          "description": "The UUID of the owning project.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot": {
          "description": "A ``snapshot`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The status for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "If the snapshot was created from a volume, the volume ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot", 
        "status", 
        "description", 
        "created_at", 
        "metadata", 
        "volume_id", 
        "size", 
        "id", 
        "name", 
        "os-extended-snapshot-attributes:progress", 
        "os-extended-snapshot-attributes:project_id"
      ], 
      "type": "object"
    }, 
    "showSnapshot_200": {
      "properties": {
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "A description for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The snapshot UUID.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs for the snapshot, if any.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "os-extended-snapshot-attributes:progress": {
          "description": "A percentage value for the build progress.", 
          "format": "", 
          "type": "integer"
        }, 
        "os-extended-snapshot-attributes:project_id": {
          "description": "The UUID of the owning project.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot": {
          "description": "A ``snapshot`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The status for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "If the snapshot was created from a volume, the volume ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot", 
        "status", 
        "description", 
        "created_at", 
        "metadata", 
        "volume_id", 
        "size", 
        "id", 
        "name", 
        "os-extended-snapshot-attributes:progress", 
        "os-extended-snapshot-attributes:project_id"
      ], 
      "type": "object"
    }, 
    "showVolumeMetadata_200": {
      "properties": {
        "metadata": {
          "description": "A ``metadata`` object. Contains one or more metadata key and value\npairs that are associated with the volume.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "metadata"
      ], 
      "type": "object"
    }, 
    "showVolumeTransfer_200": {
      "properties": {
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The UUID of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the volume transfer.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "description": "The name of the volume transfer.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "created_at", 
        "name", 
        "volume_id", 
        "links"
      ], 
      "type": "object"
    }, 
    "showVolumeType_200": {
      "properties": {
        "description": {
          "description": "The description of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "extra_specs": {
          "description": "A set of key and value pairs that contains the specifications for a\nvolume type.", 
          "format": "", 
          "type": "object"
        }, 
        "is_public": {
          "description": "Indicates whether the volume type is public or not. Default is\n``true``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The name of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The ``volume_type`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "volume_type", 
        "name", 
        "extra_specs"
      ], 
      "type": "object"
    }, 
    "showVolumeTypes_200": {
      "properties": {
        "extra_specs": {
          "description": "A set of key and value pairs that contains the specifications for a\nvolume type.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The ``volume_type`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_types": {
          "description": "A list of ``volume_type`` objects.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "volume_types", 
        "volume_type", 
        "name", 
        "extra_specs"
      ], 
      "type": "object"
    }, 
    "showVolume_200": {
      "properties": {
        "attachments": {
          "description": "Instance attachment information.\n\nIf this volume is attached to a server instance, the attachments\nlist includes the UUID of the attached server, an attachment UUID,\nthe name of the attached host, if any, the volume UUID, the device,\nand the device UUID.\n\nOtherwise, this list is empty.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "bootable": {
          "description": "Enables or disables the bootable attribute. You can boot an\ninstance from a bootable volume.", 
          "format": "", 
          "type": "boolean"
        }, 
        "consistencygroup_id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "encrypted": {
          "description": "If true, this volume is encrypted.", 
          "format": "", 
          "type": "boolean"
        }, 
        "id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "The volume links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs that are associated with\nthe volume.", 
          "format": "", 
          "type": "object"
        }, 
        "migration_status": {
          "description": "The volume migration status.", 
          "format": "", 
          "type": "string"
        }, 
        "multiattach": {
          "description": "If true, this volume can attach to more than one instance.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "os-vol-host-attr:host": {
          "description": "Current back-end of the volume.", 
          "format": "", 
          "type": "string"
        }, 
        "os-vol-mig-status-attr:migstat": {
          "description": "The status of this volume migration (None means that a migration is\nnot currently in progress).", 
          "format": "", 
          "type": "string"
        }, 
        "os-vol-mig-status-attr:name_id": {
          "description": "The volume ID that this volume name on the back-end is based on.", 
          "format": "", 
          "type": "string"
        }, 
        "os-vol-tenant-attr:tenant_id": {
          "description": "The tenant ID which the volume belongs to.", 
          "format": "", 
          "type": "string"
        }, 
        "os-volume-replication:driver_data": {
          "description": "The name of the volume replication driver.", 
          "format": "", 
          "type": "string"
        }, 
        "os-volume-replication:extended_status": {
          "description": "The volume replication status managed by the driver of backend\nstorage.", 
          "format": "", 
          "type": "string"
        }, 
        "replication_status": {
          "description": "The volume replication status.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The UUID of the source volume snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The UUID of the source volume.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.\n\nIf the ``updated_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The UUID of the user.", 
          "format": "", 
          "type": "string"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_type": {
          "description": "The volume type. In an environment with multiple-storage back ends,\nthe scheduler determines where to send the volume based on the\nvolume type.\n\nFor information about how to use volume types to create multiple-\nstorage back ends, see `Configure multiple-storage back ends\n<http://docs.openstack.org/admin-\nguide/blockstorage_multi_backend.html>`_.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "volume", 
        "migration_status", 
        "attachments", 
        "links", 
        "availability_zone", 
        "os-vol-host-attr:host", 
        "encrypted", 
        "updated_at", 
        "replication_status", 
        "snapshot_id", 
        "id", 
        "size", 
        "user_id", 
        "os-vol-tenant-attr:tenant_id", 
        "os-vol-mig-status-attr:migstat", 
        "metadata", 
        "status", 
        "description", 
        "multiattach", 
        "source_volid", 
        "consistencygroup_id", 
        "os-vol-mig-status-attr:name_id", 
        "name", 
        "bootable", 
        "created_at", 
        "volume_type"
      ], 
      "type": "object"
    }, 
    "unmanageVolume": {
      "example": {
        "application/json": {
          "os-unmanage": {}
        }
      }, 
      "properties": {
        "os-unmanage": {
          "description": "The ``os-unmanage`` action. This action removes the specified\nvolume from Cinder management.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "os-unmanage"
      ], 
      "type": "object"
    }, 
    "unsetQoSKey": {
      "example": {
        "application/json": {
          "keys": [
            "key1"
          ]
        }
      }, 
      "properties": {
        "keys": {
          "description": "List of Keys.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "keys"
      ], 
      "type": "object"
    }, 
    "unsetVolumeimagemetadata": {
      "example": {
        "application/json": {
          "os-unset_image_metadata": {
            "key": "ramdisk_id"
          }
        }
      }, 
      "properties": {
        "key": {
          "description": "The metadata key name for the metadata that you want to remove.", 
          "format": "", 
          "type": "string"
        }, 
        "os-unset_image_metadata": {
          "description": "The ``os-unset_image_metadata`` action. This action removes the\nkey-value pairs from the image metadata.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "os-unset_image_metadata", 
        "key"
      ], 
      "type": "object"
    }, 
    "updateConsistencyGroup": {
      "example": {
        "application/json": {
          "consistencygroup": {
            "add_volumes": "volume-uuid-1,volume-uuid-2", 
            "description": "My consistency group", 
            "name": "my_cg", 
            "remove_volumes": "volume-uuid-8,volume-uuid-9"
          }
        }
      }, 
      "properties": {
        "add_volumes": {
          "description": "One or more volume UUIDs, separated by commas, to add to the volume\nconsistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The consistency group description.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The consistency group name.", 
          "format": "", 
          "type": "string"
        }, 
        "remove_volumes": {
          "description": "One or more volume UUIDs, separated by commas, to remove from the\nvolume consistency group.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "updateQuota": {
      "example": {
        "application/json": {
          "quota_set": {
            "snapshots": 45
          }
        }
      }, 
      "properties": {
        "cores": {
          "description": "The number of instance cores that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses that are allowed for each tenant.\nMust be equal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content that are allowed for each injected\nfile.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes that are allowed for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs that are allowed for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items that are allowed for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules that are allowed for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "updateQuotaUser": {
      "example": {
        "application/json": {
          "quota_set": {
            "snapshots": 45
          }
        }
      }, 
      "properties": {
        "cores": {
          "description": "The number of instance cores that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses that are allowed for each tenant.\nMust be equal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content that are allowed for each injected\nfile.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes that are allowed for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs that are allowed for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items that are allowed for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules that are allowed for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "updateQuotaUser_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses that are allowed for each tenant.\nMust be equal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content that are allowed for each injected\nfile.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes that are allowed for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs that are allowed for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items that are allowed for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules that are allowed for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "updateQuota_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses that are allowed for each tenant.\nMust be equal to or greater than the number of allowed instances.", 
          "format": "", 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "string"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content that are allowed for each injected\nfile.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes that are allowed for each injected file path.", 
          "format": "", 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs that are allowed for each user.", 
          "format": "", 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items that are allowed for each instance.", 
          "format": "", 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes that are allowed for each\ntenant.", 
          "format": "", 
          "type": "integer"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=true``\nquery parameter.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules that are allowed for each security group.", 
          "format": "", 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups that are allowed for each tenant.", 
          "format": "", 
          "type": "integer"
        }
      }, 
      "required": [
        "quota_set", 
        "cores", 
        "fixed_ips", 
        "floating_ips", 
        "id", 
        "injected_file_content_bytes", 
        "injected_file_path_bytes", 
        "injected_files", 
        "instances", 
        "key_pairs", 
        "metadata_items", 
        "ram", 
        "security_groups"
      ], 
      "type": "object"
    }, 
    "updateSnapshot": {
      "example": {
        "application/json": {
          "snapshot": {
            "description": "This is yet, another snapshot.", 
            "name": "snap-002"
          }
        }
      }, 
      "properties": {
        "description": {
          "description": "A description for the snapshot. Default is ``None``.", 
          "format": "", 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the snapshot. Default is ``None``.", 
          "format": "", 
          "type": "string"
        }, 
        "snapshot": {
          "description": "A partial representation of a snapshot used in the creation\nprocess.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot"
      ], 
      "type": "object"
    }, 
    "updateSnapshotMetadata": {
      "example": {
        "application/json": {
          "metadata": {
            "key": "v2"
          }
        }
      }, 
      "properties": {
        "metadata": {
          "description": "One or more metadata key and value pairs for the snapshot.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "type": "object"
    }, 
    "updateSnapshot_200": {
      "properties": {
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "A description for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "id": {
          "description": "The snapshot UUID.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs for the snapshot, if any.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot": {
          "description": "A ``snapshot`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "status": {
          "description": "The status for the snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_id": {
          "description": "If the snapshot was created from a volume, the volume ID.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot", 
        "status", 
        "description", 
        "created_at", 
        "metadata", 
        "volume_id", 
        "size", 
        "id", 
        "name"
      ], 
      "type": "object"
    }, 
    "updateVolume": {
      "properties": {
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs that are associated with\nthe volume.", 
          "format": "", 
          "type": "object"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "volume"
      ], 
      "type": "object"
    }, 
    "updateVolumeMetadata": {
      "example": {
        "application/json": {
          "metadata": {
            "name": "metadata1"
          }
        }
      }, 
      "properties": {
        "metadata": {
          "description": "A ``metadata`` object. Contains one or more metadata key and value\npairs that are associated with the volume.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "metadata"
      ], 
      "type": "object"
    }, 
    "updateVolumeMetadata_200": {
      "properties": {
        "metadata": {
          "description": "A ``metadata`` object. Contains one or more metadata key and value\npairs that are associated with the volume.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "metadata"
      ], 
      "type": "object"
    }, 
    "updateVolumeType": {
      "example": {
        "application/json": {
          "volume_type": {
            "description": "volume type 0001", 
            "extra_specs": {
              "capabilities": "gpu"
            }, 
            "is_public": true, 
            "name": "vol-type-001"
          }
        }
      }, 
      "properties": {
        "volume_type": {
          "description": "A ``volume_type`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "volume_type"
      ], 
      "type": "object"
    }, 
    "updateVolumeTypeExtraSpecs": {
      "example": {
        "application/json": {
          "volume_type": {
            "description": "volume type 0001", 
            "extra_specs": {
              "capabilities": "gpu"
            }, 
            "is_public": true, 
            "name": "vol-type-001"
          }
        }
      }, 
      "properties": {
        "extra_specs": {
          "description": "A key and value pair that contains additional specifications that\nare associated with the volume type. Examples include capabilities,\ncapacity, compression, and so on, depending on the storage driver\nin use.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_type": {
          "description": "A ``volume_type`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "volume_type", 
        "extra_specs"
      ], 
      "type": "object"
    }, 
    "updateVolumeTypeExtraSpecs_200": {
      "properties": {
        "description": {
          "description": "The description of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "extra_specs": {
          "description": "A set of key and value pairs that contains the specifications for a\nvolume type.", 
          "format": "", 
          "type": "object"
        }, 
        "is_public": {
          "description": "Indicates whether the volume type is public or not. Default is\n``true``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The name of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The ``volume_type`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "volume_type", 
        "name", 
        "extra_specs"
      ], 
      "type": "object"
    }, 
    "updateVolumeType_200": {
      "properties": {
        "description": {
          "description": "The description of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "extra_specs": {
          "description": "A set of key and value pairs that contains the specifications for a\nvolume type.", 
          "format": "", 
          "type": "object"
        }, 
        "is_public": {
          "description": "Indicates whether the volume type is public or not. Default is\n``true``.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The name of the volume type.", 
          "format": "", 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The ``volume_type`` object.", 
          "format": "", 
          "type": "object"
        }
      }, 
      "required": [
        "volume_type", 
        "name", 
        "extra_specs"
      ], 
      "type": "object"
    }, 
    "updateVolume_200": {
      "properties": {
        "attachments": {
          "description": "Instance attachment information.\n\nIf this volume is attached to a server instance, the attachments\nlist includes the UUID of the attached server, an attachment UUID,\nthe name of the attached host, if any, the volume UUID, the device,\nand the device UUID.\n\nOtherwise, this list is empty.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "type": "string"
        }, 
        "bootable": {
          "description": "Enables or disables the bootable attribute. You can boot an\ninstance from a bootable volume.", 
          "format": "", 
          "type": "boolean"
        }, 
        "consistencygroup_id": {
          "description": "The UUID of the consistency group.", 
          "format": "", 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the resource was created.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.", 
          "format": "", 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "type": "string"
        }, 
        "encrypted": {
          "description": "If true, this volume is encrypted.", 
          "format": "", 
          "type": "boolean"
        }, 
        "id": {
          "description": "The UUID of the volume.", 
          "format": "", 
          "type": "string"
        }, 
        "links": {
          "description": "The volume links.", 
          "format": "", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs that are associated with\nthe volume.", 
          "format": "", 
          "type": "object"
        }, 
        "migration_status": {
          "description": "The volume migration status.", 
          "format": "", 
          "type": "string"
        }, 
        "multiattach": {
          "description": "If true, this volume can attach to more than one instance.", 
          "format": "", 
          "type": "boolean"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "type": "string"
        }, 
        "replication_status": {
          "description": "The volume replication status.", 
          "format": "", 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The UUID of the source volume snapshot. The API creates a new\nvolume snapshot with the same size as the source volume snapshot.", 
          "format": "", 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The UUID of the source volume.", 
          "format": "", 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the resource was updated.\n\nThe date and time stamp format is `ISO 8601\n<https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\n\nFor example, ``2015-08-27T09:49:58-05:00``.\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC. In the previous example, the offset value is ``-05:00``.\n\nIf the ``updated_at`` date and time stamp is not set, its value is\n``null``.", 
          "format": "", 
          "type": "string"
        }, 
        "user_id": {
          "description": "The UUID of the user.", 
          "format": "", 
          "type": "string"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "type": "object"
        }, 
        "volume_type": {
          "description": "The volume type. In an environment with multiple-storage back ends,\nthe scheduler determines where to send the volume based on the\nvolume type.\n\nFor information about how to use volume types to create multiple-\nstorage back ends, see `Configure multiple-storage back ends\n<http://docs.openstack.org/admin-\nguide/blockstorage_multi_backend.html>`_.", 
          "format": "", 
          "type": "string"
        }
      }, 
      "required": [
        "volume", 
        "status", 
        "migration_status", 
        "user_id", 
        "attachments", 
        "links", 
        "availability_zone", 
        "bootable", 
        "encrypted", 
        "created_at", 
        "description", 
        "updated_at", 
        "volume_type", 
        "name", 
        "replication_status", 
        "consistencygroup_id", 
        "source_volid", 
        "snapshot_id", 
        "multiattach", 
        "metadata", 
        "id", 
        "size"
      ], 
      "type": "object"
    }, 
    "versionDetails_200": {
      "properties": {
        "location": {
          "description": "Full URL to a service or server.", 
          "format": "uri", 
          "type": "string"
        }
      }, 
      "required": [
        "location"
      ], 
      "type": "object"
    }
  }, 
  "externalDocs": {
    "description": "OpenStack Docs", 
    "url": "http://docs.openstack.org"
  }, 
  "host": "developer.openstack.org", 
  "info": {
    "license": {
      "name": "Apache 2.0", 
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }, 
    "title": "Block Storage", 
    "version": "v2", 
    "x-service": "blockstorage"
  }, 
  "paths": {
    "/": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVersions", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "versions": [
                  {
                    "id": "v1.0", 
                    "links": [
                      {
                        "href": "http://docs.openstack.org/", 
                        "rel": "describedby", 
                        "type": "text/html"
                      }, 
                      {
                        "href": "http://10.0.2.15:8776/v1/", 
                        "rel": "self"
                      }
                    ], 
                    "media-types": [
                      {
                        "base": "application/json", 
                        "type": "application/vnd.openstack.volume+json;version=1"
                      }
                    ], 
                    "min_version": "", 
                    "status": "DEPRECATED", 
                    "updated": "2014-06-28T12:20:21Z", 
                    "version": ""
                  }, 
                  {
                    "id": "v2.0", 
                    "links": [
                      {
                        "href": "http://docs.openstack.org/", 
                        "rel": "describedby", 
                        "type": "text/html"
                      }, 
                      {
                        "href": "http://10.0.2.15:8776/v2/", 
                        "rel": "self"
                      }
                    ], 
                    "media-types": [
                      {
                        "base": "application/json", 
                        "type": "application/vnd.openstack.volume+json;version=1"
                      }
                    ], 
                    "min_version": "", 
                    "status": "SUPPORTED", 
                    "updated": "2014-06-28T12:20:21Z", 
                    "version": ""
                  }, 
                  {
                    "id": "v3.0", 
                    "links": [
                      {
                        "href": "http://docs.openstack.org/", 
                        "rel": "describedby", 
                        "type": "text/html"
                      }, 
                      {
                        "href": "http://10.0.2.15:8776/v3/", 
                        "rel": "self"
                      }
                    ], 
                    "media-types": [
                      {
                        "base": "application/json", 
                        "type": "application/vnd.openstack.volume+json;version=1"
                      }
                    ], 
                    "min_version": "3.0", 
                    "status": "CURRENT", 
                    "updated": "2016-02-08T12:20:21Z", 
                    "version": "{Current_Max_Version}"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {}
          }, 
          "300": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists information for all Block Storage API versions.", 
        "tags": [
          "volumes-v2-versions"
        ], 
        "x-title": "List API versions"
      }
    }, 
    "/v2": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "versionDetails", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "choices": [
                  {
                    "id": "v1.0", 
                    "links": [
                      {
                        "href": "http://23.253.248.171:8776/v1/v2.json", 
                        "rel": "self"
                      }
                    ], 
                    "media-types": [
                      {
                        "base": "application/xml", 
                        "type": "application/vnd.openstack.volume+xml;version=1"
                      }, 
                      {
                        "base": "application/json", 
                        "type": "application/vnd.openstack.volume+json;version=1"
                      }
                    ], 
                    "status": "SUPPORTED"
                  }, 
                  {
                    "id": "v2.0", 
                    "links": [
                      {
                        "href": "http://23.253.248.171:8776/v2/v2.json", 
                        "rel": "self"
                      }
                    ], 
                    "media-types": [
                      {
                        "base": "application/xml", 
                        "type": "application/vnd.openstack.volume+xml;version=1"
                      }, 
                      {
                        "base": "application/json", 
                        "type": "application/vnd.openstack.volume+json;version=1"
                      }
                    ], 
                    "status": "CURRENT"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/versionDetails_200"
            }
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for Block Storage API v2.", 
        "tags": [
          "volumes-v2-versions"
        ], 
        "x-title": "Show API v2 details"
      }
    }, 
    "/v2/{admin_tenant_id}/os-quota-sets/{tenant_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteQuotas", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes quotas for a tenant so the quotas revert to default values.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Delete quotas"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showQuota", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Set to ``usage=true`` to show quota usage. Default is ``false``.", 
            "format": "", 
            "in": "query", 
            "name": "usage", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "gigabytes": 5, 
                  "snapshots": 10, 
                  "volumes": 20
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showQuota_200"
            }
          }
        }, 
        "summary": "Shows quotas for a tenant.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Show quotas"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateQuota", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateQuota"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "snapshots": 45
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateQuota_200"
            }
          }
        }, 
        "summary": "Updates quotas for a tenant.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Update quotas"
      }
    }, 
    "/v2/{admin_tenant_id}/os-quota-sets/{tenant_id}/detail/{user_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showQuotaDetailUser", 
        "parameters": [
          {
            "description": "The user ID. Specify in the URI as ``user_id={user_id}``.", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "snapshots": 45
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showQuotaDetailUser_200"
            }
          }
        }, 
        "summary": "Shows details for quotas for a tenant and user.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Show quota details for user"
      }
    }, 
    "/v2/{admin_tenant_id}/os-quota-sets/{tenant_id}/{user_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteQuotasUser", 
        "parameters": [
          {
            "description": "The user ID. Specify in the URI as ``user_id={user_id}``.", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes quotas for a user so that the quotas revert to default values.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Delete quotas for user"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showQuotaUser", 
        "parameters": [
          {
            "description": "The user ID. Specify in the URI as ``user_id={user_id}``.", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "snapshots": 45
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showQuotaUser_200"
            }
          }
        }, 
        "summary": "Enables an admin user to show quotas for a tenant and user.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Show quotas for user"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateQuotaUser", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateQuotaUser"
            }
          }, 
          {
            "description": "The user ID. Specify in the URI as ``user_id={user_id}``.", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the administrative tenant.", 
            "format": "", 
            "in": "path", 
            "name": "admin_tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "snapshots": 45
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateQuotaUser_200"
            }
          }
        }, 
        "summary": "Updates quotas for a tenant and user.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Update quotas for user"
      }
    }, 
    "/v2/{tenant_id}/backups": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listBackups", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Sorts by an attribute. A valid value is ``name``, ``status``,\n``container_format``, ``disk_format``, ``size``, ``id``,\n``created_at``, or ``updated_at``. Default is ``created_at``. The\nAPI uses the natural sorting direction of the ``sort_key``\nattribute value.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc``.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "backups": [
                  {
                    "id": "2ef47aee-8844-490c-804d-2a8efe561c65", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "backup001"
                  }, 
                  {
                    "id": "4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "backup002"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listBackups_200"
            }
          }
        }, 
        "summary": "Lists Block Storage backups to which the tenant has access.", 
        "tags": [
          "ext-backups"
        ], 
        "x-title": "List backups"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createBackup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createBackup"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "backup": {
                  "id": "deac8b8c-35c9-4c71-acaa-889c2d5d5c8e", 
                  "links": [
                    {
                      "href": "http://localhost:8776/v2/c95fc3e4afe248a49a28828f286a7b38/backups/deac8b8c-35c9-4c71-acaa-889c2d5d5c8e", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/deac8b8c-35c9-4c71-acaa-889c2d5d5c8e", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "backup001"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createBackup_202"
            }
          }
        }, 
        "summary": "Creates a Block Storage backup from a volume.", 
        "tags": [
          "ext-backups"
        ], 
        "x-title": "Create backup"
      }
    }, 
    "/v2/{tenant_id}/backups/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listBackupsDetails", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Sorts by an attribute. A valid value is ``name``, ``status``,\n``container_format``, ``disk_format``, ``size``, ``id``,\n``created_at``, or ``updated_at``. Default is ``created_at``. The\nAPI uses the natural sorting direction of the ``sort_key``\nattribute value.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc``.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "backups": [
                  {
                    "availability_zone": "az1", 
                    "container": "volumebackups", 
                    "created_at": "2013-04-02T10:35:27.000000", 
                    "description": null, 
                    "fail_reason": null, 
                    "has_dependent_backups": false, 
                    "id": "2ef47aee-8844-490c-804d-2a8efe561c65", 
                    "is_incremental": true, 
                    "links": [
                      {
                        "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "backup001", 
                    "object_count": 22, 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "e5185058-943a-4cb4-96d9-72c184c337d6"
                  }, 
                  {
                    "availability_zone": "az1", 
                    "container": "volumebackups", 
                    "created_at": "2013-04-02T10:21:48.000000", 
                    "description": null, 
                    "fail_reason": null, 
                    "has_dependent_backups": false, 
                    "id": "4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                    "is_incremental": true, 
                    "links": [
                      {
                        "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "backup002", 
                    "object_count": 22, 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "e5185058-943a-4cb4-96d9-72c184c337d6"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listBackupsDetails_200"
            }
          }
        }, 
        "summary": "Lists Block Storage backups, with details, to which the tenant has access.", 
        "tags": [
          "ext-backups"
        ], 
        "x-title": "List backups with details"
      }
    }, 
    "/v2/{tenant_id}/backups/{backup_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteBackup", 
        "parameters": [
          {
            "description": "The UUID for a backup.", 
            "format": "", 
            "in": "path", 
            "name": "backup_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a backup.", 
        "tags": [
          "ext-backups"
        ], 
        "x-title": "Delete backup"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showBackup", 
        "parameters": [
          {
            "description": "The UUID for a backup.", 
            "format": "", 
            "in": "path", 
            "name": "backup_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "backup": {
                  "availability_zone": "az1", 
                  "container": "volumebackups", 
                  "created_at": "2013-04-02T10:35:27.000000", 
                  "description": null, 
                  "fail_reason": null, 
                  "has_dependent_backups": false, 
                  "id": "2ef47aee-8844-490c-804d-2a8efe561c65", 
                  "is_incremental": true, 
                  "links": [
                    {
                      "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "backup001", 
                  "object_count": 22, 
                  "size": 1, 
                  "status": "available", 
                  "volume_id": "e5185058-943a-4cb4-96d9-72c184c337d6"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showBackup_200"
            }
          }
        }, 
        "summary": "Shows details for a backup.", 
        "tags": [
          "ext-backups"
        ], 
        "x-title": "Show backup details"
      }
    }, 
    "/v2/{tenant_id}/backups/{backup_id}/action": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "This operations deletes the backup and any backup data.\n\nThe backup driver returns the ``405`` status code if it does not\nsupport this operation.", 
        "operationId": "forceDeleteBackup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/forceDeleteBackup"
            }
          }, 
          {
            "description": "The UUID for a backup.", 
            "format": "", 
            "in": "path", 
            "name": "backup_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Force-deletes a backup. Specify the ``os-force_delete`` action in the request body.", 
        "tags": [
          "ext-backups-actions-v2"
        ], 
        "x-title": "Force-delete backup"
      }
    }, 
    "/v2/{tenant_id}/backups/{backup_id}/restore": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "You must specify either the UUID or name of the volume. If you\nspecify both the UUID and name, the UUID takes priority.", 
        "operationId": "restoreBackup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/restoreBackup"
            }
          }, 
          {
            "description": "The UUID for a backup.", 
            "format": "", 
            "in": "path", 
            "name": "backup_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "restore": {
                  "backup_id": "2ef47aee-8844-490c-804d-2a8efe561c65", 
                  "volume_id": "795114e8-7489-40be-a978-83797f2c1dd3"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/restoreBackup_202"
            }
          }
        }, 
        "summary": "Restores a Block Storage backup to an existing or new Block Storage volume.", 
        "tags": [
          "ext-backups"
        ], 
        "x-title": "Restore backup"
      }
    }, 
    "/v2/{tenant_id}/capabilities/{hostname}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showBackendCapabilities", 
        "parameters": [
          {
            "description": "The name of the host that hosts the storage back end.", 
            "format": "", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "description": "These are volume type options provided by Cinder LVM driver, blah, blah.", 
                "display_name": "Capabilities of Cinder LVM driver", 
                "driver_version": "2.0.0", 
                "namespace": "OS::Storage::Capabilities::fake", 
                "pool_name": "pool", 
                "properties": {
                  "compression": {
                    "description": "Enables compression.", 
                    "title": "Compression", 
                    "type": "boolean"
                  }, 
                  "qos": {
                    "description": "Enables QoS.", 
                    "title": "QoS", 
                    "type": "boolean"
                  }, 
                  "replication": {
                    "description": "Enables replication.", 
                    "title": "Replication", 
                    "type": "boolean"
                  }, 
                  "thin_provisioning": {
                    "description": "Sets thin provisioning.", 
                    "title": "Thin Provisioning", 
                    "type": "boolean"
                  }
                }, 
                "storage_protocol": "iSCSI", 
                "vendor_name": "OpenStack", 
                "visibility": "public", 
                "volume_backend_name": "lvm"
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showBackendCapabilities_200"
            }
          }
        }, 
        "summary": "Shows capabilities for a storage back end.", 
        "tags": [
          "capabilities-v2"
        ], 
        "x-title": "Show back-end capabilities"
      }
    }, 
    "/v2/{tenant_id}/cgsnapshots": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listCGsnapshots", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cgsnapshots": [
                  {
                    "id": "6f519a48-3183-46cf-a32f-41815f813986", 
                    "name": "my-cg1"
                  }, 
                  {
                    "id": "aed36625-a6d7-4681-ba59-c7ba3d18c148", 
                    "name": "my-cg2"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listCGsnapshots_200"
            }
          }
        }, 
        "summary": "Lists all consistency group snapshots.", 
        "tags": [
          "os-cgsnapshots-v2"
        ], 
        "x-title": "List consistency group snapshots"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createCGsnapshot", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createCGsnapshot"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "cgsnapshot": {
                  "id": "6f519a48-3183-46cf-a32f-41815f816666", 
                  "name": "firstcg"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createCGsnapshot_202"
            }
          }
        }, 
        "summary": "Creates a consistency group snapshot.", 
        "tags": [
          "os-cgsnapshots-v2"
        ], 
        "x-title": "Create consistency group snapshot"
      }
    }, 
    "/v2/{tenant_id}/cgsnapshots/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listCGsnapshotsDetail-v2", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cgsnapshots": [
                  {
                    "consistencygroup_id": "6f519a48-3183-46cf-a32f-41815f814444", 
                    "created_at": "2015-09-16T09:28:52.000000", 
                    "description": "my first consistency group", 
                    "id": "6f519a48-3183-46cf-a32f-41815f813986", 
                    "name": "my-cg1", 
                    "status": "available"
                  }, 
                  {
                    "consistencygroup_id": "aed36625-a6d7-4681-ba59-c7ba3d18dddd", 
                    "created_at": "2015-09-16T09:31:15.000000", 
                    "description": "Edited description", 
                    "id": "aed36625-a6d7-4681-ba59-c7ba3d18c148", 
                    "name": "my-cg2", 
                    "status": "error"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listCGsnapshotsDetail-v2_200"
            }
          }
        }, 
        "summary": "Lists all consistency group snapshots with details.", 
        "tags": [
          "os-cgsnapshots-v2"
        ], 
        "x-title": "List consistency group snapshots with details"
      }
    }, 
    "/v2/{tenant_id}/cgsnapshots/{cgsnapshot_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteCGsnapshot", 
        "parameters": [
          {
            "description": "The ID of the consistency group snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "cgsnapshot_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a consistency group snapshot.", 
        "tags": [
          "os-cgsnapshots-v2"
        ], 
        "x-title": "Delete consistency group snapshot"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showCGsnapshot", 
        "parameters": [
          {
            "description": "The ID of the consistency group snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "cgsnapshot_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "cgsnapshot": {
                  "consistencygroup_id": "6f519a48-3183-46cf-a32f-41815f814444", 
                  "created_at": "2015-09-16T09:28:52.000000", 
                  "description": "my first consistency group", 
                  "id": "6f519a48-3183-46cf-a32f-41815f813986", 
                  "name": "my-cg1", 
                  "status": "available"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showCGsnapshot_200"
            }
          }
        }, 
        "summary": "Shows details for a consistency group snapshot.", 
        "tags": [
          "os-cgsnapshots-v2"
        ], 
        "x-title": "Show consistency group snapshot details"
      }
    }, 
    "/v2/{tenant_id}/consistencygroups": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listConsistencyGroups", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Sorts by an image attribute. A valid value is ``name``, ``status``,\n``container_format``, ``disk_format``, ``size``, ``id``,\n``created_at``, or ``updated_at``. Default is ``created_at``. The\nAPI uses the natural sorting direction of the ``sort_key``\nattribute value.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc``.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "consistencygroups": [
                  {
                    "id": "6f519a48-3183-46cf-a32f-41815f813986", 
                    "name": "my-cg1"
                  }, 
                  {
                    "id": "aed36625-a6d7-4681-ba59-c7ba3d18c148", 
                    "name": "my-cg2"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listConsistencyGroups_200"
            }
          }
        }, 
        "summary": "Lists consistency groups.", 
        "tags": [
          "consistencygroups-v2"
        ], 
        "x-title": "List consistency groups"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createConsistencyGroup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createConsistencyGroup"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "consistencygroup": {
                  "id": "6f519a48-3183-46cf-a32f-41815f816666", 
                  "name": "firstcg"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a consistency group.", 
        "tags": [
          "consistencygroups-v2"
        ], 
        "x-title": "Create consistency group"
      }
    }, 
    "/v2/{tenant_id}/consistencygroups/create_from_src": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createConsistencyGroupFromSource", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createConsistencyGroupFromSource"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "consistencygroup": {
                  "id": "6f519a48-3183-46cf-a32f-41815f816666", 
                  "name": "firstcg"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a consistency group from source.", 
        "tags": [
          "consistencygroups-v2"
        ], 
        "x-title": "Create consistency group from source"
      }
    }, 
    "/v2/{tenant_id}/consistencygroups/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listConsistencyGroupsDetail", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Sorts by an image attribute. A valid value is ``name``, ``status``,\n``container_format``, ``disk_format``, ``size``, ``id``,\n``created_at``, or ``updated_at``. Default is ``created_at``. The\nAPI uses the natural sorting direction of the ``sort_key``\nattribute value.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc``.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "consistencygroups": [
                  {
                    "availability_zone": "az1", 
                    "created_at": "2015-09-16T09:28:52.000000", 
                    "description": "my first consistency group", 
                    "id": "6f519a48-3183-46cf-a32f-41815f813986", 
                    "name": "my-cg1", 
                    "status": "available", 
                    "volume_types": [
                      "123456"
                    ]
                  }, 
                  {
                    "availability_zone": "az2", 
                    "created_at": "2015-09-16T09:31:15.000000", 
                    "description": "Edited description", 
                    "id": "aed36625-a6d7-4681-ba59-c7ba3d18c148", 
                    "name": "my-cg2", 
                    "status": "error", 
                    "volume_types": [
                      "234567"
                    ]
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listConsistencyGroupsDetail_200"
            }
          }
        }, 
        "summary": "Lists consistency groups with details.", 
        "tags": [
          "consistencygroups-v2"
        ], 
        "x-title": "List consistency groups with details"
      }
    }, 
    "/v2/{tenant_id}/consistencygroups/{consistencygroup_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showConsistencyGroup", 
        "parameters": [
          {
            "description": "The ID of the consistency group.", 
            "format": "", 
            "in": "path", 
            "name": "consistencygroup_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "consistencygroup": {
                  "availability_zone": "az1", 
                  "created_at": "2015-09-16T09:28:52.000000", 
                  "description": "my first consistency group", 
                  "id": "6f519a48-3183-46cf-a32f-41815f813986", 
                  "name": "my-cg1", 
                  "status": "available", 
                  "volume_types": [
                    "123456"
                  ]
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showConsistencyGroup_200"
            }
          }
        }, 
        "summary": "Shows details for a consistency group.", 
        "tags": [
          "consistencygroups-v2"
        ], 
        "x-title": "Show consistency group details"
      }
    }, 
    "/v2/{tenant_id}/consistencygroups/{consistencygroup_id}/delete": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "deleteConsistencyGroup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/deleteConsistencyGroup"
            }
          }, 
          {
            "description": "The ID of the consistency group.", 
            "format": "", 
            "in": "path", 
            "name": "consistencygroup_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a consistency group.", 
        "tags": [
          "consistencygroups-v2"
        ], 
        "x-title": "Delete consistency group"
      }
    }, 
    "/v2/{tenant_id}/consistencygroups/{consistencygroup_id}/update": {
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateConsistencyGroup", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateConsistencyGroup"
            }
          }, 
          {
            "description": "The ID of the consistency group.", 
            "format": "", 
            "in": "path", 
            "name": "consistencygroup_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Updates a consistency group.", 
        "tags": [
          "consistencygroups-v2"
        ], 
        "x-title": "Update consistency group"
      }
    }, 
    "/v2/{tenant_id}/extensions": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listExtensions-cinder-v2", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "extensions": [
                  {
                    "alias": "OS-SCH-HNT", 
                    "description": "Pass arbitrary key/value pairs to the scheduler.", 
                    "links": [], 
                    "name": "SchedulerHints", 
                    "namespace": "http://docs.openstack.org/block-service/ext/scheduler-hints/api/v2", 
                    "updated": "2013-04-18T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-hosts", 
                    "description": "Admin-only host administration.", 
                    "links": [], 
                    "name": "Hosts", 
                    "namespace": "http://docs.openstack.org/volume/ext/hosts/api/v1.1", 
                    "updated": "2011-06-29T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-tenant-attr", 
                    "description": "Expose the internal project_id as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeTenantAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_tenant_attribute/api/v1", 
                    "updated": "2011-11-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-quota-sets", 
                    "description": "Quota management support.", 
                    "links": [], 
                    "name": "Quotas", 
                    "namespace": "http://docs.openstack.org/volume/ext/quotas-sets/api/v1.1", 
                    "updated": "2011-08-08T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-types-manage", 
                    "description": "Types manage support.", 
                    "links": [], 
                    "name": "TypesManage", 
                    "namespace": "http://docs.openstack.org/volume/ext/types-manage/api/v1", 
                    "updated": "2011-08-24T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-encryption-metadata", 
                    "description": "Volume encryption metadata retrieval support.", 
                    "links": [], 
                    "name": "VolumeEncryptionMetadata", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-volume-encryption-metadata/api/v1", 
                    "updated": "2013-07-10T00:00:00+00:00"
                  }, 
                  {
                    "alias": "backups", 
                    "description": "Backups support.", 
                    "links": [], 
                    "name": "Backups", 
                    "namespace": "http://docs.openstack.org/volume/ext/backups/api/v1", 
                    "updated": "2012-12-12T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-snapshot-actions", 
                    "description": "Enable snapshot manager actions.", 
                    "links": [], 
                    "name": "SnapshotActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/snapshot-actions/api/v1.1", 
                    "updated": "2013-07-16T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-actions", 
                    "description": "Enable volume actions\n    ", 
                    "links": [], 
                    "name": "VolumeActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-actions/api/v1.1", 
                    "updated": "2012-05-31T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-used-limits", 
                    "description": "Provide data on limited resources that are being used.", 
                    "links": [], 
                    "name": "UsedLimits", 
                    "namespace": "http://docs.openstack.org/volume/ext/used-limits/api/v1.1", 
                    "updated": "2013-10-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-unmanage", 
                    "description": "Enable volume unmanage operation.", 
                    "links": [], 
                    "name": "VolumeUnmanage", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-unmanage/api/v1.1", 
                    "updated": "2012-05-31T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-host-attr", 
                    "description": "Expose host as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeHostAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_host_attribute/api/v1", 
                    "updated": "2011-11-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "encryption", 
                    "description": "Encryption support for volume types.", 
                    "links": [], 
                    "name": "VolumeTypeEncryption", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-type-encryption/api/v1", 
                    "updated": "2013-07-01T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-availability-zone", 
                    "description": "Describe Availability Zones.", 
                    "links": [], 
                    "name": "AvailabilityZones", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-availability-zone/api/v1", 
                    "updated": "2013-06-27T00:00:00+00:00"
                  }, 
                  {
                    "alias": "qos-specs", 
                    "description": "QoS specs support.", 
                    "links": [], 
                    "name": "Qos_specs_manage", 
                    "namespace": "http://docs.openstack.org/volume/ext/qos-specs/api/v1", 
                    "updated": "2013-08-02T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-types-extra-specs", 
                    "description": "Type extra specs support.", 
                    "links": [], 
                    "name": "TypesExtraSpecs", 
                    "namespace": "http://docs.openstack.org/volume/ext/types-extra-specs/api/v1", 
                    "updated": "2011-08-24T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-mig-status-attr", 
                    "description": "Expose migration_status as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeMigStatusAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_mig_status_attribute/api/v1", 
                    "updated": "2013-08-08T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-image-create", 
                    "description": "Allow creating a volume from an image in the Create Volume v1 API.", 
                    "links": [], 
                    "name": "CreateVolumeExtension", 
                    "namespace": "http://docs.openstack.org/volume/ext/image-create/api/v1", 
                    "updated": "2012-08-13T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-extended-services", 
                    "description": "Extended services support.", 
                    "links": [], 
                    "name": "ExtendedServices", 
                    "namespace": "http://docs.openstack.org/volume/ext/extended_services/api/v2", 
                    "updated": "2014-01-10T00:00:00-00:00"
                  }, 
                  {
                    "alias": "os-extended-snapshot-attributes", 
                    "description": "Extended SnapshotAttributes support.", 
                    "links": [], 
                    "name": "ExtendedSnapshotAttributes", 
                    "namespace": "http://docs.openstack.org/volume/ext/extended_snapshot_attributes/api/v1", 
                    "updated": "2012-06-19T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-image-meta", 
                    "description": "Show image metadata associated with the volume.", 
                    "links": [], 
                    "name": "VolumeImageMetadata", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_image_metadata/api/v1", 
                    "updated": "2012-12-07T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-quota-class-sets", 
                    "description": "Quota classes management support.", 
                    "links": [], 
                    "name": "QuotaClasses", 
                    "namespace": "http://docs.openstack.org/volume/ext/quota-classes-sets/api/v1.1", 
                    "updated": "2012-03-12T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-transfer", 
                    "description": "Volume transfer management support.", 
                    "links": [], 
                    "name": "VolumeTransfer", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-transfer/api/v1.1", 
                    "updated": "2013-05-29T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-manage", 
                    "description": "Allows existing backend storage to be 'managed' by Cinder.", 
                    "links": [], 
                    "name": "VolumeManage", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-volume-manage/api/v1", 
                    "updated": "2014-02-10T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-admin-actions", 
                    "description": "Enable admin actions.", 
                    "links": [], 
                    "name": "AdminActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/admin-actions/api/v1.1", 
                    "updated": "2012-08-25T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-services", 
                    "description": "Services support.", 
                    "links": [], 
                    "name": "Services", 
                    "namespace": "http://docs.openstack.org/volume/ext/services/api/v2", 
                    "updated": "2012-10-28T00:00:00-00:00"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listExtensions-cinder-v2_200"
            }
          }, 
          "300": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists Block Storage API extensions.", 
        "tags": [
          "volumes-v2-extensions"
        ], 
        "x-title": "List API extensions"
      }
    }, 
    "/v2/{tenant_id}/limits": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "An absolute limit value of ``-1`` indicates that the absolute limit\nfor the item is infinite.", 
        "operationId": "showAbsoluteLimits", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "limits": {
                  "absolute": {
                    "maxTotalBackupGigabytes": 1000, 
                    "maxTotalBackups": 10, 
                    "maxTotalSnapshots": 10, 
                    "maxTotalVolumeGigabytes": 1000, 
                    "maxTotalVolumes": 10, 
                    "totalBackupGigabytesUsed": 0, 
                    "totalBackupsUsed": 0, 
                    "totalGigabytesUsed": 0, 
                    "totalSnapshotsUsed": 0, 
                    "totalVolumesUsed": 0
                  }, 
                  "rate": []
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showAbsoluteLimits_200"
            }
          }, 
          "203": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows absolute limits for a tenant.", 
        "tags": [
          "limits"
        ], 
        "x-title": "Show absolute limits"
      }
    }, 
    "/v2/{tenant_id}/os-quota-sets/defaults": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showQuotaDefaults", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "quota_set": {
                  "gigabytes": 5, 
                  "snapshots": 10, 
                  "volumes": 20
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showQuotaDefaults_200"
            }
          }
        }, 
        "summary": "Gets default quotas for a tenant.", 
        "tags": [
          "quota-sets"
        ], 
        "x-title": "Get default quotas"
      }
    }, 
    "/v2/{tenant_id}/os-vol-image-meta": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "When the request is made, the caller must specify a reference to an\nexisting storage volume in the ``ref`` element. Each storage driver\nmay interpret the existing storage volume reference differently but\nshould accept a reference structure containing either a ``source-\nvolume-id`` or ``source-volume-name`` element, if possible.", 
        "operationId": "showImageMetadataForVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/showImageMetadataForVolume"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "az2", 
                  "bootable": "false", 
                  "created_at": "2014-07-18T00:12:54.000000", 
                  "description": "Volume imported from existingLV", 
                  "encrypted": "false", 
                  "id": "23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                  "links": [
                    {
                      "href": "http://10.0.2.15:8776/v2/87c8522052ca4eed98bc672b4c1a3ddb/volumes/23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://10.0.2.15:8776/87c8522052ca4eed98bc672b4c1a3ddb/volumes/23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "key1": "value1", 
                    "key2": "value2"
                  }, 
                  "name": "New Volume", 
                  "os-vol-tenant-attr:tenant_id": "87c8522052ca4eed98bc672b4c1a3ddb", 
                  "size": 0, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "creating", 
                  "user_id": "eae1472b5fc5496998a3d06550929e7e", 
                  "volume_type": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows image metadata for a volume.", 
        "tags": [
          "os-vol-image-meta-v2"
        ], 
        "x-title": "Show image metadata for volume"
      }
    }, 
    "/v2/{tenant_id}/os-volume-manage": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "The caller must specify a reference to an existing storage volume\nin the ref parameter in the request. Although each storage driver\nmight interpret this reference differently, the driver should\naccept a reference structure that contains either a source-volume-\nid or source-volume-name element, if possible.\n\nThe API chooses the size of the volume by rounding up the size of\nthe existing storage volume to the next gibibyte (GiB).", 
        "operationId": "manageExisting", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/manageExisting"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "az2", 
                  "bootable": "false", 
                  "created_at": "2014-07-18T00:12:54.000000", 
                  "description": "Volume imported from existingLV", 
                  "encrypted": "false", 
                  "id": "23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                  "links": [
                    {
                      "href": "http://10.0.2.15:8776/v2/87c8522052ca4eed98bc672b4c1a3ddb/volumes/23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://10.0.2.15:8776/87c8522052ca4eed98bc672b4c1a3ddb/volumes/23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "key1": "value1", 
                    "key2": "value2"
                  }, 
                  "name": "New Volume", 
                  "os-vol-tenant-attr:tenant_id": "87c8522052ca4eed98bc672b4c1a3ddb", 
                  "size": 0, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "creating", 
                  "user_id": "eae1472b5fc5496998a3d06550929e7e", 
                  "volume_type": null
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Creates a Block Storage volume by using existing storage rather than allocating new storage.", 
        "tags": [
          "volume-manage"
        ], 
        "x-title": "Manage existing volume"
      }
    }, 
    "/v2/{tenant_id}/os-volume-transfer": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumeTransfer", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "transfers": [
                  {
                    "id": "cac5c677-73a9-4288-bb9c-b2ebfb547377", 
                    "links": [
                      {
                        "href": "http://localhost/v2/firstproject/volumes/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost/firstproject/volumes/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "first volume transfer", 
                    "volume_id": "894623a6-e901-4312-aa06-4275e6321cce"
                  }, 
                  {
                    "id": "f26c0dee-d20d-4e80-8dee-a8d91b9742a1", 
                    "links": [
                      {
                        "href": "http://localhost/v2/firstproject/volumes/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost/firstproject/volumes/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "second volume transfer", 
                    "volume_id": "673db275-379f-41af-8371-e1652132b4c1"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listVolumeTransfer_200"
            }
          }
        }, 
        "summary": "Lists volume transfers.", 
        "tags": [
          "os-vol-transfer-v2"
        ], 
        "x-title": "List volume transfers"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createVolumeTransfer", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolumeTransfer"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "transfer": {
                  "auth_key": "9266c59563c84664", 
                  "created_at": "2015-02-25T03:56:53.081642", 
                  "id": "1a7059f5-8ed7-45b7-8d05-2811e5d09f24", 
                  "links": [
                    {
                      "href": "http://localhost/v2/firstproject/volumes/3", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost/firstproject/volumes/3", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "first volume", 
                  "volume_id": "c86b9af4-151d-4ead-b62c-5fb967af0e37"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createVolumeTransfer_202"
            }
          }
        }, 
        "summary": "Creates a volume transfer.", 
        "tags": [
          "os-vol-transfer-v2"
        ], 
        "x-title": "Create volume transfer"
      }
    }, 
    "/v2/{tenant_id}/os-volume-transfer/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumeTransferDetails", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "transfers": [
                  {
                    "created_at": "2015-02-25T03:56:53.081642", 
                    "id": "cac5c677-73a9-4288-bb9c-b2ebfb547377", 
                    "links": [
                      {
                        "href": "http://localhost/v2/firstproject/volumes/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost/firstproject/volumes/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "first volume transfer", 
                    "volume_id": "894623a6-e901-4312-aa06-4275e6321cce"
                  }, 
                  {
                    "created_at": "2015-03-25T03:56:53.081642", 
                    "id": "f26c0dee-d20d-4e80-8dee-a8d91b9742a1", 
                    "links": [
                      {
                        "href": "http://localhost/v2/firstproject/volumes/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost/firstproject/volumes/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "second volume transfer", 
                    "volume_id": "673db275-379f-41af-8371-e1652132b4c1"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listVolumeTransferDetails_200"
            }
          }
        }, 
        "summary": "Lists volume transfers, with details.", 
        "tags": [
          "os-vol-transfer-v2"
        ], 
        "x-title": "List volume transfers, with details"
      }
    }, 
    "/v2/{tenant_id}/os-volume-transfer/{transfer_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteVolumeTransfer", 
        "parameters": [
          {
            "description": "The unique identifier for a volume transfer.", 
            "format": "", 
            "in": "path", 
            "name": "transfer_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a volume transfer.", 
        "tags": [
          "os-vol-transfer-v2"
        ], 
        "x-title": "Delete volume transfer"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showVolumeTransfer", 
        "parameters": [
          {
            "description": "The unique identifier for a volume transfer.", 
            "format": "", 
            "in": "path", 
            "name": "transfer_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "transfer": {
                  "created_at": "2015-02-25T03:56:53.081642", 
                  "id": "cac5c677-73a9-4288-bb9c-b2ebfb547377", 
                  "links": [
                    {
                      "href": "http://localhost/v2/firstproject/volumes/1", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost/firstproject/volumes/1", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "first volume transfer", 
                  "volume_id": "894623a6-e901-4312-aa06-4275e6321cce"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showVolumeTransfer_200"
            }
          }
        }, 
        "summary": "Shows details for a volume transfer.", 
        "tags": [
          "os-vol-transfer-v2"
        ], 
        "x-title": "Show volume transfer details"
      }
    }, 
    "/v2/{tenant_id}/os-volume-transfer/{transfer_id}/accept": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "acceptVolumeTransfer", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/acceptVolumeTransfer"
            }
          }, 
          {
            "description": "The unique identifier for a volume transfer.", 
            "format": "", 
            "in": "path", 
            "name": "transfer_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "transfer": {
                  "id": "cac5c677-73a9-4288-bb9c-b2ebfb547377", 
                  "links": [
                    {
                      "href": "http://localhost/v2/firstproject/volumes/1", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost/firstproject/volumes/1", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "first volume transfer", 
                  "volume_id": "894623a6-e901-4312-aa06-4275e6321cce"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/acceptVolumeTransfer_202"
            }
          }
        }, 
        "summary": "Accepts a volume transfer.", 
        "tags": [
          "os-vol-transfer-v2"
        ], 
        "x-title": "Accept volume transfer"
      }
    }, 
    "/v2/{tenant_id}/qos-specs": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listQoSSpecs", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Sorts by an image attribute. A valid value is ``name``, ``status``,\n``container_format``, ``disk_format``, ``size``, ``id``,\n``created_at``, or ``updated_at``. Default is ``created_at``. The\nAPI uses the natural sorting direction of the ``sort_key``\nattribute value.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc``.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "qos_specs": [
                  {
                    "consumer": "back-end", 
                    "id": "0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "name": "reliability-spec", 
                    "specs": {
                      "availability": "100", 
                      "numberOfFailures": "0"
                    }
                  }, 
                  {
                    "consumer": "back-end", 
                    "id": "ecfc6e2e-7117-44a4-8eec-f84d04f531a8", 
                    "name": "performance-spec", 
                    "specs": {
                      "delay": "0", 
                      "throughput": "100"
                    }
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listQoSSpecs_200"
            }
          }, 
          "300": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists quality of service (QoS) specifications.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "List QoS specs"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify one or more key and value pairs in the request body.", 
        "operationId": "createQoSSpec", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createQoSSpec"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "http://23.253.248.171:8776/v2/bab7d5c60cd041a0a36f7c4b6e1dd978/qos_specs/599ef437-1c99-42ec-9fc6-239d0519fef1", 
                    "rel": "self"
                  }, 
                  {
                    "href": "http://23.253.248.171:8776/bab7d5c60cd041a0a36f7c4b6e1dd978/qos_specs/599ef437-1c99-42ec-9fc6-239d0519fef1", 
                    "rel": "bookmark"
                  }
                ], 
                "qos_specs": {
                  "consumer": "back-end", 
                  "id": "599ef437-1c99-42ec-9fc6-239d0519fef1", 
                  "name": "reliability-spec", 
                  "specs": {
                    "availability": "100", 
                    "numberOfFailures": "0"
                  }
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createQoSSpec_202"
            }
          }
        }, 
        "summary": "Creates a QoS specification.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Create QoS specification"
      }
    }, 
    "/v2/{tenant_id}/qos-specs/{qos_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteQoSSpec", 
        "parameters": [
          {
            "description": "The ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "To delete a QoS specification even if it is in-use, set to\n``true``. Default is ``false``.", 
            "format": "", 
            "in": "path", 
            "name": "force", 
            "required": true, 
            "type": "boolean"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a QoS specification.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Delete QoS specification"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showQoSDetails", 
        "parameters": [
          {
            "description": "The ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "http://23.253.228.211:8776/v2/e1cf63117ae74309a5bcc2002a23be8b/qos_specs/0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "rel": "self"
                  }, 
                  {
                    "href": "http://23.253.228.211:8776/e1cf63117ae74309a5bcc2002a23be8b/qos_specs/0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "rel": "bookmark"
                  }
                ], 
                "qos_specs": {
                  "consumer": "back-end", 
                  "id": "0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                  "name": "reliability-spec", 
                  "specs": {
                    "availability": "100", 
                    "numberOfFailures": "0"
                  }
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showQoSDetails_200"
            }
          }, 
          "400": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "401": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "403": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "404": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "405": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "413": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }, 
          "503": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Shows details for a QoS specification.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Show QoS specification details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "setQoSKey", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/setQoSKey"
            }
          }, 
          {
            "description": "The ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "qos_specs": {
                  "delay": "1"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Sets keys in a QoS specification.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Set keys in QoS specification"
      }
    }, 
    "/v2/{tenant_id}/qos-specs/{qos_id}/associate": {
      "get": {
        "consumes": [], 
        "description": "", 
        "operationId": "associateQoSSpec", 
        "parameters": [
          {
            "description": "The ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Associates a QoS specification with a volume type.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Associate QoS specification with volume type"
      }
    }, 
    "/v2/{tenant_id}/qos-specs/{qos_id}/associations": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listQoSAssociations", 
        "parameters": [
          {
            "description": "The ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "http://23.253.228.211:8776/v2/e1cf63117ae74309a5bcc2002a23be8b/qos_specs/0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "rel": "self"
                  }, 
                  {
                    "href": "http://23.253.228.211:8776/e1cf63117ae74309a5bcc2002a23be8b/qos_specs/0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "rel": "bookmark"
                  }
                ], 
                "qos_specs": {
                  "consumer": "back-end", 
                  "id": "0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                  "name": "reliability-spec", 
                  "specs": {
                    "availability": "100", 
                    "numberOfFailures": "0"
                  }
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Lists all associations for a QoS specification.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Get all associations for QoS specification"
      }
    }, 
    "/v2/{tenant_id}/qos-specs/{qos_id}/delete_keys": {
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "unsetQoSKey", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unsetQoSKey"
            }
          }, 
          {
            "description": "The ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Unsets keys in a QoS specification.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Unset keys in QoS specification"
      }
    }, 
    "/v2/{tenant_id}/qos-specs/{qos_id}/disassociate": {
      "get": {
        "consumes": [], 
        "description": "", 
        "operationId": "disassociateQoSSpec", 
        "parameters": [
          {
            "description": "The ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Disassociates a QoS specification from a volume type.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Disassociate QoS specification from volume type"
      }
    }, 
    "/v2/{tenant_id}/qos-specs/{qos_id}/disassociate_all": {
      "get": {
        "consumes": [], 
        "description": "", 
        "operationId": "disassociateQoSSpecAll", 
        "parameters": [
          {
            "description": "The ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Disassociates a QoS specification from all associations.", 
        "tags": [
          "qos-specs-v2-qos-specs"
        ], 
        "x-title": "Disassociate QoS specification from all associations"
      }
    }, 
    "/v2/{tenant_id}/scheduler-stats/get_pools": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listPools", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Indicates whether to show pool details or only pool names in the\nresponse.\n\nSet to ``true`` to show pool details. Set to ``false`` to show only\npool names. Default is ``false``.", 
            "format": "", 
            "in": "query", 
            "name": "detail", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "pools": [
                  {
                    "capabilities": {
                      "QoS_support": false, 
                      "driver_version": "1.0.0", 
                      "free_capacity": 100, 
                      "reserved_percentage": 0, 
                      "storage_protocol": "iSCSI", 
                      "total_capacity": 1024, 
                      "updated": "2014-10-28T00:00:00-00:00", 
                      "volume_backend_name": "pool1"
                    }, 
                    "name": "pool1"
                  }, 
                  {
                    "capabilities": {
                      "QoS_support": true, 
                      "driver_version": "1.0.1", 
                      "free_capacity": 200, 
                      "reserved_percentage": 0, 
                      "storage_protocol": "iSER", 
                      "total_capacity": 512, 
                      "updated": "2014-10-28T00:00:00-00:00", 
                      "volume_backend_name": "pool2"
                    }, 
                    "name": "pool2"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listPools_200"
            }
          }
        }, 
        "summary": "Lists all back-end storage pools.", 
        "tags": [
          "os-vol-pool-v2"
        ], 
        "x-title": "List back-end storage pools"
      }
    }, 
    "/v2/{tenant_id}/snapshots": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listSnapshots", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Sorts by an attribute. A valid value is ``name``, ``status``,\n``container_format``, ``disk_format``, ``size``, ``id``,\n``created_at``, or ``updated_at``. Default is ``created_at``. The\nAPI uses the natural sorting direction of the ``sort_key``\nattribute value.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc``.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshots": [
                  {
                    "created_at": "2015-11-29T02:25:51.000000", 
                    "description": "volume snapshot", 
                    "id": "b1323cda-8e4b-41c1-afc5-2fc791809c8c", 
                    "metadata": {
                      "name": "test"
                    }, 
                    "name": "test-volume-snapshot", 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "173f7b48-c4c1-4e70-9acc-086b39073506"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listSnapshots_200"
            }
          }
        }, 
        "summary": "Lists all Block Storage snapshots, with summary information, that the tenant can access.", 
        "tags": [
          "volumes-v2-snapshots"
        ], 
        "x-title": "List snapshots"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createSnapshot", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSnapshot"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2013-02-25T03:56:53.081642", 
                  "description": "Daily backup", 
                  "id": "ffa9bc5e-1172-4021-acaf-cdcd78a9584d", 
                  "metadata": {}, 
                  "name": "snap-001", 
                  "size": 1, 
                  "status": "creating", 
                  "volume_id": "5aa119a8-d25b-45a7-8d1b-88e127885635"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createSnapshot_202"
            }
          }
        }, 
        "summary": "Creates a volume snapshot, which is a point-in-time, complete copy of a volume. You can create a volume from a snapshot.", 
        "tags": [
          "volumes-v2-snapshots"
        ], 
        "x-title": "Create snapshot"
      }
    }, 
    "/v2/{tenant_id}/snapshots/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listSnapshotsDetail", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshots": [
                  {
                    "created_at": "2015-11-29T02:25:51.000000", 
                    "description": "volume snapshot", 
                    "id": "b1323cda-8e4b-41c1-afc5-2fc791809c8c", 
                    "metadata": {
                      "name": "test"
                    }, 
                    "name": "test-volume-snapshot", 
                    "os-extended-snapshot-attributes:progress": "100%", 
                    "os-extended-snapshot-attributes:project_id": "bab7d5c60cd041a0a36f7c4b6e1dd978", 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "173f7b48-c4c1-4e70-9acc-086b39073506"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listSnapshotsDetail_200"
            }
          }
        }, 
        "summary": "Lists all Block Storage snapshots, with details, that the tenant can access.", 
        "tags": [
          "volumes-v2-snapshots"
        ], 
        "x-title": "List snapshots with details"
      }
    }, 
    "/v2/{tenant_id}/snapshots/{snapshot_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteSnapshot", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a snapshot.", 
        "tags": [
          "volumes-v2-snapshots"
        ], 
        "x-title": "Delete snapshot"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showSnapshot", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2013-02-25T04:13:17.000000", 
                  "description": "Daily backup", 
                  "id": "2bb856e1-b3d8-4432-a858-09e4ce939389", 
                  "metadata": {}, 
                  "name": "snap-001", 
                  "os-extended-snapshot-attributes:progress": "100%", 
                  "os-extended-snapshot-attributes:project_id": "0c2eba2c5af04d3f9e9d0d410b371fde", 
                  "size": 1, 
                  "status": "available", 
                  "volume_id": "5aa119a8-d25b-45a7-8d1b-88e127885635"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showSnapshot_200"
            }
          }
        }, 
        "summary": "Shows details for a snapshot.", 
        "tags": [
          "volumes-v2-snapshots"
        ], 
        "x-title": "Show snapshot details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateSnapshot", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateSnapshot"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2013-02-20T08:11:34.000000", 
                  "description": "This is yet, another snapshot", 
                  "id": "4b502fcb-1f26-45f8-9fe5-3b9a0a52eaf2", 
                  "name": "snap-002", 
                  "size": 1, 
                  "status": "available", 
                  "volume_id": "2402b902-0b7a-458c-9c07-7435a826f794"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateSnapshot_200"
            }
          }
        }, 
        "summary": "Updates a snapshot.", 
        "tags": [
          "volumes-v2-snapshots"
        ], 
        "x-title": "Update snapshot"
      }
    }, 
    "/v2/{tenant_id}/snapshots/{snapshot_id}/metadata": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showSnapshotMetadata", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "name": "test"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showSnapshotMetadata_200"
            }
          }
        }, 
        "summary": "Shows metadata for a snapshot.", 
        "tags": [
          "volumes-v2-snapshots"
        ], 
        "x-title": "Show snapshot metadata"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Replaces metadata items that match keys. Does not modify items that\nare not in the request.", 
        "operationId": "updateSnapshotMetadata", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateSnapshotMetadata"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "key": "v2"
                }
              }
            }, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Updates metadata for a snapshot.", 
        "tags": [
          "volumes-v2-snapshots"
        ], 
        "x-title": "Update snapshot metadata"
      }
    }, 
    "/v2/{tenant_id}/types": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showVolumeTypes", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Sorts by an attribute. A valid value is ``name``, ``status``,\n``container_format``, ``disk_format``, ``size``, ``id``,\n``created_at``, or ``updated_at``. Default is ``created_at``. The\nAPI uses the natural sorting direction of the ``sort_key``\nattribute value.", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc``.", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume_types": [
                  {
                    "extra_specs": {
                      "capabilities": "gpu"
                    }, 
                    "id": "6685584b-1eac-4da6-b5c3-555430cf68ff", 
                    "name": "SSD"
                  }, 
                  {
                    "extra_specs": {}, 
                    "id": "8eb69a46-df97-4e41-9586-9a40a7533803", 
                    "name": "SATA"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showVolumeTypes_200"
            }
          }
        }, 
        "summary": "Lists volume types.", 
        "tags": [
          "volumes-v2-types"
        ], 
        "x-title": "List volume types"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "To create an environment with multiple-storage back ends, you must\nspecify a volume type. Block Storage volume back ends are spawned\nas children to ``cinder-volume``, and they are keyed from a unique\nqueue. They are named ``cinder-volume.HOST.BACKEND``. For example,\n``cinder-volume.ubuntu.lvmdriver``. When a volume is created, the\nscheduler chooses an appropriate back end to handle the request\nbased on the volume type.\n\nFor information about how to use volume types to create multiple-\nstorage back ends, see `Configure multiple-storage back ends\n<http://docs.openstack.org/admin-\nguide/blockstorage_multi_backend.html>`_.", 
        "operationId": "createVolumeType", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolumeType"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume_type": {
                  "description": "volume type 001", 
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "6685584b-1eac-4da6-b5c3-555430cf68ff", 
                  "is_public": "true", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createVolumeType_200"
            }
          }
        }, 
        "summary": "Creates a volume type.", 
        "tags": [
          "volumes-v2-types"
        ], 
        "x-title": "Create volume type"
      }
    }, 
    "/v2/{tenant_id}/types/{volume_type_id}": {
      "delete": {
        "consumes": [], 
        "description": "", 
        "operationId": "deleteVolumeType", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID for an existing volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a volume type.", 
        "tags": [
          "volumes-v2-types"
        ], 
        "x-title": "Delete volume type"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showVolumeType", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID for an existing volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume_type": {
                  "description": "volume type 001", 
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "6685584b-1eac-4da6-b5c3-555430cf68ff", 
                  "is_public": "true", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showVolumeType_200"
            }
          }
        }, 
        "summary": "Shows details for a volume type.", 
        "tags": [
          "volumes-v2-types"
        ], 
        "x-title": "Show volume type details"
      }, 
      "x-put-updateVolumeType": {
        "consumes": [
          "application/json"
        ], 
        "description": "To create an environment with multiple-storage back ends, you must\nspecify a volume type. The API spawns Block Storage volume back\nends as children to ``cinder-volume``, and keys them from a unique\nqueue. The API names the back ends ``cinder-volume.HOST.BACKEND``.\nFor example, ``cinder-volume.ubuntu.lvmdriver``. When you create a\nvolume, the scheduler chooses an appropriate back end for the\nvolume type to handle the request.\n\nFor information about how to use volume types to create multiple-\nstorage back ends, see `Configure multiple-storage back ends\n<http://docs.openstack.org/admin-\nguide/blockstorage_multi_backend.html>`_.", 
        "operationId": "updateVolumeType", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateVolumeType"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID for an existing volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume_type": {
                  "description": "volume type 001", 
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "6685584b-1eac-4da6-b5c3-555430cf68ff", 
                  "is_public": "true", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateVolumeType_200"
            }
          }
        }, 
        "summary": "Updates a volume type.", 
        "tags": [
          "volumes-v2-types"
        ], 
        "x-title": "Update volume type"
      }, 
      "x-put-updateVolumeTypeExtraSpecs": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateVolumeTypeExtraSpecs", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateVolumeTypeExtraSpecs"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID for an existing volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume_type": {
                  "description": "volume type 001", 
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "6685584b-1eac-4da6-b5c3-555430cf68ff", 
                  "is_public": "true", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateVolumeTypeExtraSpecs_200"
            }
          }
        }, 
        "summary": "Updates the extra specifications that are assigned to a volume type.", 
        "tags": [
          "volumes-v2-types"
        ], 
        "x-title": "Update extra specs for a volume type"
      }
    }, 
    "/v2/{tenant_id}/types/{volume_type}/action": {
      "x-post-createVolumeTypeAccessExt": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createVolumeTypeAccessExt", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolumeTypeAccessExt"
            }
          }, 
          {
            "description": "The ID of Volume Type to be accessed by project.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Adds private volume type access to a project.", 
        "tags": [
          "volume-type-access"
        ], 
        "x-title": "Add private volume type access"
      }, 
      "x-post-removeVolumeTypeAccessExt": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "removeVolumeTypeAccessExt", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/removeVolumeTypeAccessExt"
            }
          }, 
          {
            "description": "The ID of Volume Type to be accessed by project.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Removes private volume type access from a project.", 
        "tags": [
          "volume-type-access"
        ], 
        "x-title": "Remove private volume type access"
      }
    }, 
    "/v2/{tenant_id}/types/{volume_type}/os-volume-type-access": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumeTypeAccessExt", 
        "parameters": [
          {
            "description": "The ID of Volume Type to be accessed by project.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume_type_access": {
                  "project_id": "f270b245cb11498ca4031deb7e141cfa", 
                  "volume_type_id": "3c67e124-39ad-4ace-a507-8bb7bf510c26"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listVolumeTypeAccessExt_200"
            }
          }
        }, 
        "summary": "Lists project IDs that have access to private volume type.", 
        "tags": [
          "volume-type-access"
        ], 
        "x-title": "List private volume type access details"
      }
    }, 
    "/v2/{tenant_id}/volumes": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumes", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Comma-separated list of sort keys and optional sort directions in\nthe form of < key > [: < direction > ]. A valid direction is\n``asc`` (ascending) or ``desc`` (descending).", 
            "format": "", 
            "in": "query", 
            "name": "sort", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volumes": [
                  {
                    "id": "45baf976-c20a-4894-a7c3-c94b7376bf55", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/45baf976-c20a-4894-a7c3-c94b7376bf55", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/45baf976-c20a-4894-a7c3-c94b7376bf55", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "vol-004"
                  }, 
                  {
                    "id": "5aa119a8-d25b-45a7-8d1b-88e127885635", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "vol-003"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listVolumes_200"
            }
          }
        }, 
        "summary": "Lists summary information for all Block Storage volumes that the tenant can access.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "List volumes"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "To create a bootable volume, include the UUID of the image from\nwhich you want to create the volume in the ``imageRef`` attribute\nin the request body.\n\nPreconditions\n\n- You must have enough volume storage quota remaining to create a\n  volume of size requested.\n\nAsynchronous Postconditions\n\n- With correct permissions, you can see the volume status as\n  ``available`` through API calls.\n\n- With correct access, you can see the created volume in the storage\n  system that OpenStack Block Storage manages.\n\nTroubleshooting\n\n- If volume status remains ``creating`` or shows another error\n  status, the request failed. Ensure you meet the preconditions\n  then investigate the storage back end.\n\n- Volume is not created in the storage system that OpenStack Block\n  Storage manages.\n\n- The storage node needs enough free storage space to match the size\n  of the volume creation request.", 
        "operationId": "createVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolume"
            }
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "nova", 
                  "bootable": "false", 
                  "consistencygroup_id": null, 
                  "created_at": "2015-11-29T03:01:44.000000", 
                  "description": null, 
                  "encrypted": false, 
                  "id": "6edbc2f4-1507-44f8-ac0d-eed1d2608d38", 
                  "links": [
                    {
                      "href": "http://23.253.248.171:8776/v2/bab7d5c60cd041a0a36f7c4b6e1dd978/volumes/6edbc2f4-1507-44f8-ac0d-eed1d2608d38", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://23.253.248.171:8776/bab7d5c60cd041a0a36f7c4b6e1dd978/volumes/6edbc2f4-1507-44f8-ac0d-eed1d2608d38", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {}, 
                  "migration_status": null, 
                  "multiattach": false, 
                  "name": "test-volume-attachments", 
                  "replication_status": "disabled", 
                  "size": 2, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "creating", 
                  "updated_at": null, 
                  "user_id": "0eea4eabcf184061a3b6db1e0daaf010", 
                  "volume_type": "lvmdriver-1"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createVolume_202"
            }
          }
        }, 
        "summary": "Creates a volume.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "Create volume"
      }
    }, 
    "/v2/{tenant_id}/volumes/detail": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "listVolumesDetail", 
        "parameters": [
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Comma-separated list of sort keys and optional sort directions in\nthe form of < key > [: < direction > ]. A valid direction is\n``asc`` (ascending) or ``desc`` (descending).", 
            "format": "", 
            "in": "query", 
            "name": "sort", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a page size of items. Returns a number of items up to a\nlimit value. Use the ``limit`` parameter to make an initial limited\nrequest and use the ID of the last-seen item from the response as\nthe ``marker`` parameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "The ID of the last-seen item. Use the ``limit`` parameter to make\nan initial limited request and use the ID of the last-seen item\nfrom the response as the ``marker`` parameter value in a subsequent\nlimited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volumes": [
                  {
                    "attachments": [
                      {
                        "attachment_id": "3b4db356-253d-4fab-bfa0-e3626c0b8405", 
                        "device": "/dev/vdb", 
                        "host_name": null, 
                        "id": "6edbc2f4-1507-44f8-ac0d-eed1d2608d38", 
                        "server_id": "f4fda93b-06e0-4743-8117-bc8bcecd651b", 
                        "volume_id": "6edbc2f4-1507-44f8-ac0d-eed1d2608d38"
                      }
                    ], 
                    "availability_zone": "nova", 
                    "bootable": "false", 
                    "consistencygroup_id": null, 
                    "created_at": "2015-11-29T03:01:44.000000", 
                    "description": null, 
                    "encrypted": false, 
                    "id": "6edbc2f4-1507-44f8-ac0d-eed1d2608d38", 
                    "links": [
                      {
                        "href": "http://23.253.248.171:8776/v2/bab7d5c60cd041a0a36f7c4b6e1dd978/volumes/6edbc2f4-1507-44f8-ac0d-eed1d2608d38", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://23.253.248.171:8776/bab7d5c60cd041a0a36f7c4b6e1dd978/volumes/6edbc2f4-1507-44f8-ac0d-eed1d2608d38", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "attached_mode": "rw", 
                      "readonly": false
                    }, 
                    "migration_status": null, 
                    "multiattach": true, 
                    "name": "test-volume-attachments", 
                    "os-vol-host-attr:host": "difleming@lvmdriver-1#lvmdriver-1", 
                    "os-vol-mig-status-attr:migstat": null, 
                    "os-vol-mig-status-attr:name_id": null, 
                    "os-vol-tenant-attr:tenant_id": "bab7d5c60cd041a0a36f7c4b6e1dd978", 
                    "os-volume-replication:driver_data": null, 
                    "os-volume-replication:extended_status": null, 
                    "replication_status": "disabled", 
                    "size": 2, 
                    "snapshot_id": null, 
                    "source_volid": null, 
                    "status": "in-use", 
                    "user_id": "32779452fcd34ae1a53a797ac8a1e064", 
                    "volume_type": "lvmdriver-1"
                  }, 
                  {
                    "attachments": [], 
                    "availability_zone": "nova", 
                    "bootable": "true", 
                    "consistencygroup_id": null, 
                    "created_at": "2015-11-29T02:25:18.000000", 
                    "description": "", 
                    "encrypted": false, 
                    "id": "173f7b48-c4c1-4e70-9acc-086b39073506", 
                    "links": [
                      {
                        "href": "http://23.253.248.171:8776/v2/bab7d5c60cd041a0a36f7c4b6e1dd978/volumes/173f7b48-c4c1-4e70-9acc-086b39073506", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://23.253.248.171:8776/bab7d5c60cd041a0a36f7c4b6e1dd978/volumes/173f7b48-c4c1-4e70-9acc-086b39073506", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {}, 
                    "migration_status": null, 
                    "multiattach": false, 
                    "name": "test-volume", 
                    "os-vol-host-attr:host": "difleming@lvmdriver-1#lvmdriver-1", 
                    "os-vol-mig-status-attr:migstat": null, 
                    "os-vol-mig-status-attr:name_id": null, 
                    "os-vol-tenant-attr:tenant_id": "bab7d5c60cd041a0a36f7c4b6e1dd978", 
                    "os-volume-replication:driver_data": null, 
                    "os-volume-replication:extended_status": null, 
                    "replication_status": "disabled", 
                    "size": 1, 
                    "snapshot_id": null, 
                    "source_volid": null, 
                    "status": "available", 
                    "user_id": "32779452fcd34ae1a53a797ac8a1e064", 
                    "volume_image_metadata": {
                      "checksum": "eb9139e4942121f22bbc2afc0400b2a4", 
                      "container_format": "ami", 
                      "disk_format": "ami", 
                      "image_id": "b48c53e1-9a96-4a5a-a630-2e74ec54ddcc", 
                      "image_name": "cirros-0.3.4-x86_64-uec", 
                      "kernel_id": "8a55f5f1-78f7-4477-8168-977d8519342c", 
                      "min_disk": "0", 
                      "min_ram": "0", 
                      "ramdisk_id": "5f6bdf8a-92db-4988-865b-60bdd808d9ef", 
                      "size": "25165824"
                    }, 
                    "volume_type": "lvmdriver-1"
                  }
                ]
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/listVolumesDetail_200"
            }
          }
        }, 
        "summary": "Lists all Block Storage volumes, with details, that the tenant can access.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "List volumes with details"
      }
    }, 
    "/v2/{tenant_id}/volumes/{volume_id}": {
      "delete": {
        "consumes": [], 
        "description": "Preconditions\n\n- Volume status must be ``available``, ``in-use``, ``error``, or\n  ``error_restoring``.\n\n- You cannot already have a snapshot of the volume.\n\n- You cannot delete a volume that is in a migration.\n\nAsynchronous Postconditions\n\n- The volume is deleted in volume index.\n\n- The volume managed by OpenStack Block Storage is deleted in\n  storage node.\n\nTroubleshooting\n\n- If volume status remains in ``deleting`` or becomes\n  ``error_deleting`` the request failed. Ensure you meet the\n  preconditions then investigate the storage back end.\n\n- The volume managed by OpenStack Block Storage is not deleted from\n  the storage system.", 
        "operationId": "deleteVolume", 
        "parameters": [
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Deletes a volume.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "Delete volume"
      }, 
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- The volume must exist.", 
        "operationId": "showVolume", 
        "parameters": [
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "nova", 
                  "bootable": "false", 
                  "created_at": "2013-02-25T02:40:21.000000", 
                  "description": "Super volume.", 
                  "id": "5aa119a8-d25b-45a7-8d1b-88e127885635", 
                  "links": [
                    {
                      "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "contents": "not junk"
                  }, 
                  "name": "vol-002", 
                  "os-vol-host-attr:host": "ip-10-168-107-25", 
                  "os-vol-tenant-attr:tenant_id": "0c2eba2c5af04d3f9e9d0d410b371fde", 
                  "os-volume-replication:driver_data": null, 
                  "os-volume-replication:extended_status": null, 
                  "size": 1, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "available", 
                  "volume_type": "None"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showVolume_200"
            }
          }
        }, 
        "summary": "Shows details for a volume.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "Show volume details"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "updateVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateVolume"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "nova", 
                  "bootable": "false", 
                  "consistencygroup_id": null, 
                  "created_at": "2015-11-29T03:01:44.000000", 
                  "description": "This is yet, another volume.", 
                  "encrypted": false, 
                  "id": "5aa119a8-d25b-45a7-8d1b-88e127885635", 
                  "links": [
                    {
                      "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "contents": "not junk"
                  }, 
                  "migration_status": null, 
                  "multiattach": false, 
                  "name": "vol-003", 
                  "replication_status": "disabled", 
                  "size": 1, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "available", 
                  "updated_at": null, 
                  "user_id": "0eea4eabcf184061a3b6db1e0daaf010", 
                  "volume_type": "lvmdriver-1"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateVolume_200"
            }
          }
        }, 
        "summary": "Updates a volume.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "Update volume"
      }
    }, 
    "/v2/{tenant_id}/volumes/{volume_id}/action": {
      "x-post-attachVolume": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- Volume status must be ``available``.\n\n- You should set ``instance_uuid`` or ``host_name``.", 
        "operationId": "attachVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/attachVolume"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Attaches a volume to a server. Specify the ``os-attach`` action in the request body.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Attach volume to server"
      }, 
      "x-post-extendVolume": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- Volume status must be ``available``.\n\n- Sufficient amount of storage must exist to extend the volume.\n\n- The user quota must have sufficient volume storage.\n\nTroubleshooting\n\n- An ``error_extending`` volume status indicates that the request\n  failed. Ensure that you meet the preconditions and retry the\n  request. If the request fails again, investigate the storage back\n  end.", 
        "operationId": "extendVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/extendVolume"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Extends the size of a volume to a requested size, in gibibytes (GiB). Specify the ``os-extend`` action in the request body.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Extend volume size"
      }, 
      "x-post-forcedetachVolume": {
        "consumes": [
          "application/json"
        ], 
        "description": "Rolls back an unsuccessful detach operation after you disconnect\nthe volume.", 
        "operationId": "forcedetachVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/forcedetachVolume"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Forces a volume to detach. Specify the ``os-force_detach`` action in the request body.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Force detach volume"
      }, 
      "x-post-promotereplicaVolume": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "promotereplicaVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/promotereplicaVolume"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Promotes a replicated volume. Specify the ``os-promote-replica`` action in the request body.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Promote replicated volume"
      }, 
      "x-post-reenablereplicaVolume": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "reenablereplicaVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/reenablereplicaVolume"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Re-enables replication of a volume. Specify the ``volume-replica-reenable`` action in the request body.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Reenable volume replication"
      }, 
      "x-post-resetVolume": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "resetVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/resetVolume"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Resets the status, attach status, and migration status for a volume. Specify the ``os-reset_status`` action in the request body.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Reset volume statuses"
      }, 
      "x-post-setVolumeimagemetadata": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "setVolumeimagemetadata", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/setVolumeimagemetadata"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Sets the image metadata for a volume. Specify the ``os-set_image_metadata`` action in the request body.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Set image metadata for volume"
      }, 
      "x-post-unmanageVolume": {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- Volume status must be ``available``.", 
        "operationId": "unmanageVolume", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unmanageVolume"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Removes a volume from Block Storage management without removing the back-end storage object that is associated with it. Specify the ``os-unmanage`` action in the request body.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Unmanage volume"
      }, 
      "x-post-unsetVolumeimagemetadata": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "unsetVolumeimagemetadata", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unsetVolumeimagemetadata"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {}, 
            "headers": {}, 
            "schema": {}
          }
        }, 
        "summary": "Removes image metadata, by key, from a volume. Specify the ``os-unset_image_metadata`` action in the request body and the ``key`` for the metadata key and value pair that you want to remove.", 
        "tags": [
          "volumes-v2-volumes-actions"
        ], 
        "x-title": "Remove image metadata from volume"
      }
    }, 
    "/v2/{tenant_id}/volumes/{volume_id}/metadata": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "showVolumeMetadata", 
        "parameters": [
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {}
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/showVolumeMetadata_200"
            }
          }
        }, 
        "summary": "Shows metadata for a volume.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "Show volume metadata"
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "operationId": "createVolumeMetadata", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolumeMetadata"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "name": "metadata0"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/createVolumeMetadata_202"
            }
          }
        }, 
        "summary": "Creates metadata for a volume.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "Create volume metadata"
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "description": "Replaces metadata items that match keys. Does not modify items that\nare not in the request.", 
        "operationId": "updateVolumeMetadata", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateVolumeMetadata"
            }
          }, 
          {
            "description": "The UUID of the volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the tenant in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "", 
            "examples": {
              "application/json": {
                "metadata": {
                  "name": "metadata1"
                }
              }
            }, 
            "headers": {}, 
            "schema": {
              "$ref": "#/definitions/updateVolumeMetadata_200"
            }
          }
        }, 
        "summary": "Updates metadata for a volume.", 
        "tags": [
          "volumes-v2-volumes"
        ], 
        "x-title": "Update volume metadata"
      }
    }
  }, 
  "produces": [
    "application/json"
  ], 
  "swagger": "2.0", 
  "tags": [
    {
      "description": "API versions", 
      "name": "volumes-v2-versions", 
      "x-summary": ""
    }, 
    {
      "description": "API extensions (extensions)", 
      "name": "volumes-v2-extensions", 
      "x-summary": ""
    }, 
    {
      "description": "Limits (limits)", 
      "name": "limits", 
      "x-summary": "Shows absolute limits for a tenant.\n\nAn absolute limit value of ``-1`` indicates that the absolute limit\nfor the item is infinite."
    }, 
    {
      "description": "Volumes (volumes)", 
      "name": "volumes-v2-volumes", 
      "x-summary": "A volume is a detachable block storage device similar to a USB hard\ndrive. You can attach a volume to one instance at a time.\n\nThe ``snapshot_id`` and ``source_volid`` parameters specify the ID\nof the snapshot or volume from which this volume originates. If the\nvolume was not created from a snapshot or source volume, these\nvalues are null.\n\nWhen you create, list, update, or delete volumes, the possible\nstatus values are:\n\n**Volume statuses**\n\n+------------------+--------------------------------------------------------+\n| Status           | Description                                            |\n+------------------+--------------------------------------------------------+\n| creating         | The volume is being created.                           |\n+------------------+--------------------------------------------------------+\n| available        | The volume is ready to attach to an instance.          |\n+------------------+--------------------------------------------------------+\n| attaching        | The volume is attaching to an instance.                |\n+------------------+--------------------------------------------------------+\n| in-use           | The volume is attached to an instance.                 |\n+------------------+--------------------------------------------------------+\n| deleting         | The volume is being deleted.                           |\n+------------------+--------------------------------------------------------+\n| error            | A volume creation error occurred.                      |\n+------------------+--------------------------------------------------------+\n| error_deleting   | A volume deletion error occurred.                      |\n+------------------+--------------------------------------------------------+\n| backing-up       | The volume is being backed up.                         |\n+------------------+--------------------------------------------------------+\n| restoring-backup | A backup is being restored to the volume.              |\n+------------------+--------------------------------------------------------+\n| error_restoring  | A backup restoration error occurred.                   |\n+------------------+--------------------------------------------------------+\n| error_extending  | An error occurred while attempting to extend a volume. |\n+------------------+--------------------------------------------------------+"
    }, 
    {
      "description": "Volume type access (volumes)", 
      "name": "volume-type-access", 
      "x-summary": "Private volume type access to project.\n\nBy default, volumes types are public. To create a private volume\ntype, set the ``is_public`` boolean field to ``false`` at volume\ntype creation time. To control access to a private volume type,\nuser needs to add a project to or remove a project from the volume\ntype. Private volume types without projects are only accessible by\nusers with the administrative role and context."
    }, 
    {
      "description": "Volume actions (volumes, action)", 
      "name": "volumes-v2-volumes-actions", 
      "x-summary": "Extends the size of, resets statuses for, sets image metadata for,\nand removes image metadata from a volume. Attaches a volume to a\nserver, detaches a volume from a server, and removes a volume from\nBlock Storage management without actually removing the back-end\nstorage object associated with it."
    }, 
    {
      "description": "Backups (backups)", 
      "name": "ext-backups", 
      "x-summary": "A backup is a full copy of a volume stored in an external service.\nThe service can be configured. The only supported service is Object\nStorage. A backup can subsequently be restored from the external\nservice to either the same volume that the backup was originally\ntaken from or to a new volume. Backup and restore operations can\nonly be carried out on volumes that are in an unattached and\navailable state.\n\nWhen you create, list, or delete backups, these status values are\npossible:\n\n**Backup statuses**\n\n+-----------------+---------------------------------------------+\n| Status          | Description                                 |\n+-----------------+---------------------------------------------+\n| creating        | The backup is being created.                |\n+-----------------+---------------------------------------------+\n| available       | The backup is ready to restore to a volume. |\n+-----------------+---------------------------------------------+\n| deleting        | The backup is being deleted.                |\n+-----------------+---------------------------------------------+\n| error           | A backup error occurred.                    |\n+-----------------+---------------------------------------------+\n| restoring       | The backup is being restored to a volume.   |\n+-----------------+---------------------------------------------+\n| error_restoring | A backup restoration error occurred.        |\n+-----------------+---------------------------------------------+\n\n\n\nIf an error occurs, you can find more information about the error\nin the ``fail_reason`` field for the backup."
    }, 
    {
      "description": "Backup actions (backups, action)", 
      "name": "ext-backups-actions-v2", 
      "x-summary": "Force-deletes a backup."
    }, 
    {
      "description": "Capabilities for storage back ends (capabilities)", 
      "name": "capabilities-v2", 
      "x-summary": "Shows capabilities for a storage back end."
    }, 
    {
      "description": "Quota sets extension (os-quota-sets)", 
      "name": "quota-sets", 
      "x-summary": "Administrators only, depending on policy settings.\n\nShows, updates, and deletes quotas for a tenant."
    }, 
    {
      "description": "Quality of service (QoS) specifications (qos-specs)", 
      "name": "qos-specs-v2-qos-specs", 
      "x-summary": "Administrators only, depending on policy settings.\n\nCreates, lists, shows details for, associates, disassociates, sets\nkeys, unsets keys, and deletes quality of service (QoS)\nspecifications."
    }, 
    {
      "description": "Volume types (types)", 
      "name": "volumes-v2-types", 
      "x-summary": ""
    }, 
    {
      "description": "Volume snapshots (snapshots)", 
      "name": "volumes-v2-snapshots", 
      "x-summary": "A snapshot is a point-in-time copy of the data that a volume\ncontains.\n\nWhen you create, list, or delete snapshots, these status values are\npossible:\n\n**Snapshot statuses**\n\n+----------------+-------------------------------------+\n| Status         | Description                         |\n+----------------+-------------------------------------+\n| creating       | The snapshot is being created.      |\n+----------------+-------------------------------------+\n| available      | The snapshot is ready to use.       |\n+----------------+-------------------------------------+\n| deleting       | The snapshot is being deleted.      |\n+----------------+-------------------------------------+\n| error          | A snapshot creation error occurred. |\n+----------------+-------------------------------------+\n| error_deleting | A snapshot deletion error occurred. |\n+----------------+-------------------------------------+"
    }, 
    {
      "description": "Volume manage extension (os-volume-manage)", 
      "name": "volume-manage", 
      "x-summary": "Creates volumes by using existing storage instead of allocating new\nstorage."
    }, 
    {
      "description": "Volume image metadata extension (os-vol-image-meta)", 
      "name": "os-vol-image-meta-v2", 
      "x-summary": "Shows image metadata that is associated with a volume."
    }, 
    {
      "description": "Back-end storage pools", 
      "name": "os-vol-pool-v2", 
      "x-summary": "Administrator only. Lists all back-end storage pools that are known\nto the scheduler service."
    }, 
    {
      "description": "Volume transfer", 
      "name": "os-vol-transfer-v2", 
      "x-summary": "Transfers a volume from one user to another user."
    }, 
    {
      "description": "Consistency groups", 
      "name": "consistencygroups-v2", 
      "x-summary": "Consistency groups enable you to create snapshots at the exact same\npoint in time from multiple volumes. For example, a database might\nplace its tables, logs, and configuration on separate volumes. To\nrestore this database from a previous point in time, it makes sense\nto restore the logs, tables, and configuration together from the\nexact same point in time.\n\nUse the ``policy.json`` file to grant permissions for these actions\nto limit roles."
    }, 
    {
      "description": "Consistency group snapshots", 
      "name": "os-cgsnapshots-v2", 
      "x-summary": "Lists all, lists all with details, shows details for, creates, and\ndeletes consistency group snapshots."
    }
  ]
}