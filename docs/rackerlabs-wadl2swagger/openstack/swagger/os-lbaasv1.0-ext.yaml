---
swagger: '2.0'
info:
  title: os-lbaasv1.0-ext
  version: Unknown
consumes:
- application/json
produces:
- application/json
paths:
  "/v1.0/lb/vips":
    get:
      operationId: listVIPs
      summary: List VIPs
      description: |
        Lists VIPs.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "vips": [
                      {
                          "status": "ACTIVE",
                          "protocol": "HTTP",
                          "description": "",
                          "admin_state_up": true,
                          "subnet_id": "8032909d-47a1-4715-90af-5153ffe39861",
                          "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                          "connection_limit": 1000,
                          "pool_id": "72741b06-df4d-4715-b142-276b6bce75ab",
                          "session_persistence": {
                              "cookie_name": "MyAppCookie",
                              "type": "APP_COOKIE"
                          },
                          "address": "10.0.0.10",
                          "protocol_port": 80,
                          "port_id": "b5a743d6-056b-468b-862d-fb13a9aa694e",
                          "id": "4ec89087-d057-4e2c-911f-60a3b47ee304",
                          "name": "my-vip"
                      }
                  ]
              }
    post:
      operationId: createVIP
      summary: Create a load balancer VIP
      description: |
        Creates a load balancer VIP.
      produces:
      - application/json
      responses:
        '201':
          description: 201 response
          examples:
            application/json: |-
              {
                  "vip": {
                      "status": "PENDING_CREATE",
                      "protocol": "HTTP",
                      "description": "",
                      "admin_state_up": true,
                      "subnet_id": "8032909d-47a1-4715-90af-5153ffe39861",
                      "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                      "connection_limit": -1,
                      "pool_id": "61b1f87a-7a21-4ad3-9dda-7f81d249944f",
                      "address": "10.0.0.11",
                      "protocol_port": 80,
                      "port_id": "f7e6fe6a-b8b5-43a8-8215-73456b32e0f5",
                      "id": "c987d2be-9a3c-4ac9-a046-e8716b1350e2",
                      "name": "NewVip"
                  }
              }
  "/v1.0/lb/vips/{vip_id}":
    parameters:
    - name: vip_id
      required: true
      in: path
      type: string
      description: |
        The UUID for the VIP.
    get:
      operationId: showVIP
      summary: Show VIP details
      description: |
        Shows details for a specified VIP.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "vip": {
                      "status": "ACTIVE",
                      "protocol": "HTTP",
                      "description": "",
                      "admin_state_up": true,
                      "subnet_id": "8032909d-47a1-4715-90af-5153ffe39861",
                      "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                      "connection_limit": 1000,
                      "pool_id": "72741b06-df4d-4715-b142-276b6bce75ab",
                      "session_persistence": {
                          "cookie_name": "MyAppCookie",
                          "type": "APP_COOKIE"
                      },
                      "address": "10.0.0.10",
                      "protocol_port": 80,
                      "port_id": "b5a743d6-056b-468b-862d-fb13a9aa694e",
                      "id": "4ec89087-d057-4e2c-911f-60a3b47ee304",
                      "name": "my-vip"
                  }
              }
    put:
      operationId: updateVIP
      summary: Update VIP
      description: |
        Updates a specified load balancer VIP.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "vip": {
                      "status": "PENDING_UPDATE",
                      "protocol": "HTTP",
                      "description": "",
                      "admin_state_up": true,
                      "subnet_id": "8032909d-47a1-4715-90af-5153ffe39861",
                      "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                      "connection_limit": 1000,
                      "pool_id": "61b1f87a-7a21-4ad3-9dda-7f81d249944f",
                      "address": "10.0.0.11",
                      "protocol_port": 80,
                      "port_id": "f7e6fe6a-b8b5-43a8-8215-73456b32e0f5",
                      "id": "c987d2be-9a3c-4ac9-a046-e8716b1350e2",
                      "name": "NewVip"
                  }
              }
    delete:
      operationId: deleteVIP
      summary: Delete VIP
      description: |
        Deletes a specified load balancer VIP.
      produces: []
      responses:
        '204':
          description: 204 response
  "/v1.0/lb/healthmonitors":
    get:
      operationId: listHealthMonitors
      summary: List health monitors
      description: |
        Lists health monitors.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "health_monitors": [
                      {
                          "admin_state_up": true,
                          "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                          "delay": 10,
                          "max_retries": 1,
                          "timeout": 1,
                          "type": "PING",
                          "id": "466c8345-28d8-4f84-a246-e04380b0461d"
                      },
                      {
                          "admin_state_up": true,
                          "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                          "delay": 5,
                          "expected_codes": "200",
                          "max_retries": 2,
                          "http_method": "GET",
                          "timeout": 2,
                          "url_path": "/",
                          "type": "HTTP",
                          "id": "5d4b5228-33b0-4e60-b225-9b727c1a20e7"
                      }
                  ]
              }
    post:
      operationId: createHealthMonitor
      summary: Create a load balancer health monitor
      description: |
        Creates a load balancer health monitor.
      produces:
      - application/json
      responses:
        '201':
          description: 201 response
          examples:
            application/json: |-
              {
                  "healthmonitor": {
                      "status": "ACTIVE",
                      "admin_state_up": true,
                      "tenant_id": "453105b9-1754-413f-aab1-55f1af620750",
                      "delay": 20,
                      "expected_codes": "200-299",
                      "max_retries": 5,
                      "http_method": "GET",
                      "timeout": 10,
                      "url_path": "/check",
                      "type": "HTTP",
                      "id": "f3eeab00-8367-4524-b662-55e64d4cacb5"
                  }
              }
  "/v1.0/lb/healthmonitors/{health_monitor_id}":
    get:
      operationId: showHealthMonitor
      summary: Show health monitor details
      description: |
        Shows details for a specified health monitor.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "healthmonitor": {
                      "status": "ACTIVE",
                      "admin_state_up": true,
                      "tenant_id": "453105b9-1754-413f-aab1-55f1af620750",
                      "delay": 20,
                      "expected_codes": "200-299",
                      "max_retries": 5,
                      "http_method": "GET",
                      "timeout": 10,
                      "url_path": "/check",
                      "type": "HTTP",
                      "id": "f3eeab00-8367-4524-b662-55e64d4cacb5"
                  }
              }
    put:
      operationId: updateHealthMonitor
      summary: Update health monitor
      description: |
        Updates a specified load balancer health monitor.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "health_monitor": {
                      "admin_state_up": true,
                      "tenant_id": "4fd44f30292945e481c7b8a0c8908869",
                      "delay": 5,
                      "max_retries": 5,
                      "http_method": "GET",
                      "timeout": 1,
                      "pools": [
                          {
                              "status": "PENDING_CREATE",
                              "status_description": null,
                              "pool_id": "6e55751f-6ad4-4e53-b8d4-02e442cd21df"
                          }
                      ],
                      "type": "PING",
                      "id": "b05e44b5-81f9-4551-b474-711a722698f7"
                  }
              }
    delete:
      operationId: deleteHealthMonitor
      summary: Delete health monitor
      description: |
        Deletes a specified load balancer health monitor.
      produces: []
      responses:
        '204':
          description: 204 response
  "/v1.0/lb/pools":
    get:
      operationId: listPools
      summary: List pools
      description: |
        Lists pools.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "pools": [
                      {
                          "status": "ACTIVE",
                          "lb_method": "ROUND_ROBIN",
                          "protocol": "HTTP",
                          "description": "",
                          "health_monitors": [
                              "466c8345-28d8-4f84-a246-e04380b0461d",
                              "5d4b5228-33b0-4e60-b225-9b727c1a20e7"
                          ],
                          "subnet_id": "8032909d-47a1-4715-90af-5153ffe39861",
                          "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                          "admin_state_up": true,
                          "vip_id": "4ec89087-d057-4e2c-911f-60a3b47ee304",
                          "members": [
                              "701b531b-111a-4f21-ad85-4795b7b12af6",
                              "beb53b4d-230b-4abd-8118-575b8fa006ef"
                          ],
                          "id": "72741b06-df4d-4715-b142-276b6bce75ab",
                          "name": "app_pool"
                      }
                  ]
              }
    post:
      operationId: createPool
      summary: Create a load balancer pool
      description: |
        Creates a load balancer pool.
      produces:
      - application/json
      responses:
        '201':
          description: 201 response
          examples:
            application/json: |-
              {
                  "pool": {
                      "status": "PENDING_CREATE",
                      "lb_method": "ROUND_ROBIN",
                      "protocol": "HTTP",
                      "description": "",
                      "health_monitors": [],
                      "subnet_id": "1981f108-3c48-48d2-b908-30f7d28532c9",
                      "tenant_id": "2ffc6e22aae24e4795f87155d24c896f",
                      "admin_state_up": true,
                      "name": "Example pool",
                      "health_monitors_status": [],
                      "members": [],
                      "provider": "haproxy",
                      "status_description": null,
                      "id": "69055154-f603-4a28-8951-7cc2d9e54a9a",
                      "vip_id": null
                  }
              }
  "/v1.0/lb/pools/{pool_id}":
    parameters:
    - name: pool_id
      required: true
      in: path
      type: string
      description: |
        The UUID for the pool.
    get:
      operationId: showPool
      summary: Show pool details
      description: |
        Shows details for a specified pool.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "pool": {
                      "lb_algorithm": "ROUND_ROBIN",
                      "status": "ACTIVE",
                      "protocol": "tcp",
                      "description": "",
                      "admin_state_up": true,
                      "tenant_id": "19eaa775-cf5d-49bc-902e-2f85f668d995",
                      "session_persistence": {},
                      "healthmonitor_id": null,
                      "members": [],
                      "id": "332abe93-f488-41ba-870b-2ac66be7f853",
                      "name": "Example pool"
                  }
              }
    put:
      operationId: updatePool
      summary: Update pool
      description: |
        Updates a specified load balancer pool.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "pool": {
                      "status": "PENDING_UPDATE",
                      "lb_method": "ROUND_ROBIN",
                      "protocol": "TCP",
                      "description": "",
                      "health_monitors": [],
                      "subnet_id": "8032909d-47a1-4715-90af-5153ffe39861",
                      "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                      "admin_state_up": true,
                      "vip_id": null,
                      "members": [],
                      "id": "61b1f87a-7a21-4ad3-9dda-7f81d249944f",
                      "name": "SuperPool"
                  }
              }
    delete:
      operationId: deletePool
      summary: Delete pool
      description: |
        Deletes a specified load balancer pool.
      produces: []
      responses:
        '204':
          description: 204 response
  "/v1.0/lb/pools/{pool_id}/health_monitors":
    parameters:
    - name: pool_id
      required: true
      in: path
      type: string
      description: |
        The UUID for the pool.
    post:
      operationId: associateHealthMonitor
      summary: Associate health monitor with pool
      description: |
        Associates a health monitor with a specified pool.
      produces:
      - application/json
      responses:
        '201':
          description: 201 response
          examples:
            application/json: |-
              {
                  "health_monitor": {}
              }
  "/v1.0/lb/pools/{pool_id}/health_monitors/{health_monitor_id}":
    parameters:
    - name: pool_id
      required: true
      in: path
      type: string
      description: |
        The UUID for the pool.
    - name: health_monitor_id
      required: true
      in: path
      type: string
      description: |
        The UUID for the health monitor.
    delete:
      operationId: disassociateHealthMonitor
      summary: Disassociate health monitor from pool
      description: |
        Disassociates a specified health monitor from a pool.
      produces: []
      responses:
        '204':
          description: 204 response
  "/v1.0/lb/members":
    get:
      operationId: listMembers
      summary: List members
      description: |
        Lists members.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "members": [
                      {
                          "status": "ACTIVE",
                          "weight": 1,
                          "admin_state_up": true,
                          "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                          "pool_id": "72741b06-df4d-4715-b142-276b6bce75ab",
                          "address": "10.0.0.4",
                          "protocol_port": 80,
                          "id": "701b531b-111a-4f21-ad85-4795b7b12af6"
                      },
                      {
                          "status": "ACTIVE",
                          "weight": 1,
                          "admin_state_up": true,
                          "tenant_id": "83657cfcdfe44cd5920adaf26c48ceea",
                          "pool_id": "72741b06-df4d-4715-b142-276b6bce75ab",
                          "address": "10.0.0.3",
                          "protocol_port": 80,
                          "id": "beb53b4d-230b-4abd-8118-575b8fa006ef"
                      }
                  ]
              }
    post:
      operationId: createMember
      summary: Create a load balancer member
      description: |
        Creates a load balancer member.
      produces:
      - application/json
      responses:
        '201':
          description: 201 response
          examples:
            application/json: |-
              {
                  "member": {
                      "status": "DOWN",
                      "weight": 1,
                      "admin_state_up": true,
                      "subnet_id": "SUBNET_ID",
                      "tenant_id": "453105b9-1754-413f-aab1-55f1af620750",
                      "address": "192.0.2.14",
                      "protocol_port": 8080,
                      "id": "975592ca-e308-48ad-8298-731935ee9f45"
                  }
              }
  "/v1.0/lb/members/{member_id}":
    parameters:
    - name: member_id
      required: true
      in: path
      type: string
      description: |
        The UUID for the member.
    get:
      operationId: showMember
      summary: Show member details
      description: |
        Shows details for a specified member.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "member": {
                      "status": "DOWN",
                      "weight": 1,
                      "admin_state_up": true,
                      "subnet_id": "SUBNET_ID",
                      "tenant_id": "453105b9-1754-413f-aab1-55f1af620750",
                      "address": "192.0.2.14",
                      "protocol_port": 8080,
                      "id": "975592ca-e308-48ad-8298-731935ee9f45"
                  }
              }
    put:
      operationId: updateMember
      summary: Update member
      description: |
        Updates a specified load balancer member.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "member": {
                      "status": "PENDING_UPDATE",
                      "status_description": null,
                      "weight": 1,
                      "admin_state_up": false,
                      "tenant_id": "4fd44f30292945e481c7b8a0c8908869",
                      "pool_id": "7803631d-f181-4500-b3a2-1b68ba2a75fd",
                      "address": "10.0.0.5",
                      "protocol_port": 8080,
                      "id": "48a471ea-64f1-4eb6-9be7-dae6bbe40a0f"
                  }
              }
    delete:
      operationId: deleteMember
      summary: Delete member
      description: |
        Deletes a specified load balancer member.
      produces: []
      responses:
        '204':
          description: 204 response
